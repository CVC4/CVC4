(check
 ;; Declarations
(% s sort
(% a1 (term s)
(% b1 (term s)
(% a2 (term s)
(% b2 (term s)
(% f (term (arrow s (arrow s s)))
(% A0 (th_holds (= s a1 b1))
(% A1 (th_holds (= s a2 b2))
(% A2 (th_holds (not (= s (apply _ _ (apply _ _ f a1)a2) (apply _ _ (apply _ _ f b1)b2))))
(% A3 (th_holds true)
(: (holds cln)
 ;; Preprocessing
(th_let_pf _ (trust_f (= s a1 b1)) (\ .PA213
(th_let_pf _ (trust_f (= s a2 b2)) (\ .PA215
(th_let_pf _ (trust_f (not (= s (apply _ _ (apply _ _ f a1)a2) (apply _ _ (apply _ _ f b1)b2)))) (\ .PA219
(decl_atom (= s a1 b1) (\ .v2 (\ .a2
(decl_atom (= s a2 b2) (\ .v3 (\ .a3
(decl_atom (= s (apply _ _ (apply _ _ f a1)a2) (apply _ _ (apply _ _ f b1)b2)) (\ .v4 (\ .a4
(satlem _ _ (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ .PA213 .l4)))) (\ .pb4
(satlem _ _ (asf _ _ _ .a3 (\ .l6 (clausify_false (contra _ .PA215 .l6)))) (\ .pb5
(satlem _ _ (ast _ _ _ .a4 (\ .l9 (clausify_false (contra _ .l9 .PA219)))) (\ .pb6
 ;; Theory Lemmas
;; BB atom mapping
;; Bit-blasting definitional clauses
;; Bit-blasting learned clauses
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (ast _ _ _ .a3 (\ .l7 (ast _ _ _ .a2 (\ .l5  ;; UF Theory Lemma
;;(= (f a1 a2) (f b1 b2)) (not (= a2 b2)) (not (= a1 b1))

CVC4 threw an "unexpected" exception (one that wasn't properly specified
in the throws() specifier for the throwing function).

The exception is:
Assertion failure.
static CVC4::Node CVC4::ProofUF::toStreamRecLFSC(std::ostream&, CVC4::TheoryProof*, CVC4::theory::eq::EqProof*, unsigned int, const LetMap&)
/home/guy/pprojects/proofs/lianah_proofs/builds/i686-pc-linux-gnu/debug-proof/../../../src/proof/uf_proof.cpp:122:

  !pf2->d_node.isNull()


terminate called after throwing an instance of 'CVC4::AssertionException'
  what():  Assertion failure.
static CVC4::Node CVC4::ProofUF::toStreamRecLFSC(std::ostream&, CVC4::TheoryProof*, CVC4::theory::eq::EqProof*, unsigned int, const LetMap&)
/home/guy/pprojects/proofs/lianah_proofs/builds/i686-pc-linux-gnu/debug-proof/../../../src/proof/uf_proof.cpp:122:

  !pf2->d_node.isNull()
