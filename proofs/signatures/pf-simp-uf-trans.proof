(check
 ;; Declarations
(% s sort
(% a1 (term s)
(% b1 (term s)
(% b2 (term s)
(% A0 (th_holds (= s a1 b1))
(% A1 (th_holds (= s b1 b2))
(% A2 (th_holds (not (= s a1 b2)))
(% A3 (th_holds true)
(: (holds cln)
 ;; Preprocessing 
(th_let_pf _ (trust_f (= s a1 b1)) (\ .PA213
(th_let_pf _ (trust_f (= s b1 b2)) (\ .PA215
(th_let_pf _ (trust_f (not (= s a1 b2))) (\ .PA217
(decl_atom (= s a1 b1) (\ .v2 (\ .a2
(decl_atom (= s b1 b2) (\ .v3 (\ .a3
(decl_atom (= s a1 b2) (\ .v4 (\ .a4
(satlem _ _ (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ .PA213 .l4)))) (\ .pb4
(satlem _ _ (asf _ _ _ .a3 (\ .l6 (clausify_false (contra _ .PA215 .l6)))) (\ .pb5
(satlem _ _ (ast _ _ _ .a4 (\ .l9 (clausify_false (contra _ .l9 .PA217)))) (\ .pb6
 ;; Theory Lemmas 
;; BB atom mapping
;; Bit-blasting definitional clauses 
;; Bit-blasting learned clauses 
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (ast _ _ _ .a3 (\ .l7 (ast _ _ _ .a2 (\ .l5  ;; UF Theory Lemma 
;;(= a1 b2) (not (= b1 b2)) (not (= a1 b1)) 
(clausify_false (contra _ (trans _ _ _ _ (trans _ _ _ _ (trans _ _ _ _ (trans _ _ _ _ (symm _ _ _ (refl _ a1)) .l5) .l7) (symm _ _ _ .l7)) .l7) .l8))
))))))( \ .lemc7
(satlem_simplify _ _ _ (Q _ _ (Q _ _ (R _ _ .lemc7 .pb6 .v4).pb5 .v3).pb4 .v2)(\empty empty)))))))))))))))))))))))))))))))))))
;;
