(check
 ;; Declarations
(% a (term Bool)
(% b (term Bool)
(% c (term Bool)
(% A0 (th_holds (iff (p_app a) (p_app b)))
(% A1 (th_holds (iff (p_app b) (p_app c)))
(% A2 (th_holds (not (iff (p_app a) (p_app c))))
(% A3 (th_holds true)
(: (holds cln)
 ;; Preprocessing 
(th_let_pf _ (trust_f (iff (p_app a) (p_app b))) (\ .PA208
(th_let_pf _ (trust_f (iff (p_app b) (p_app c))) (\ .PA210
(th_let_pf _ (trust_f (not (iff (p_app a) (p_app c)))) (\ .PA212
(decl_atom (p_app a) (\ .v2 (\ .a2
(decl_atom (p_app b) (\ .v3 (\ .a3
(decl_atom (p_app c) (\ .v4 (\ .a4
(satlem _ _ (asf _ _ _ .a3 (\ .l6 (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ .l5) (iff_elim_1 _ _ .PA208)) .l6)))))) (\ .pb4
(satlem _ _ (ast _ _ _ .a3 (\ .l7 (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (or_elim_1 _ _ .l4 (iff_elim_2 _ _ .PA208)) (not_not_intro _ .l7))))))) (\ .pb5
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (ast _ _ _ .a3 (\ .l7 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ .l7) (iff_elim_1 _ _ .PA210)) .l8)))))) (\ .pb6
(satlem _ _ (ast _ _ _ .a4 (\ .l9 (asf _ _ _ .a3 (\ .l6 (clausify_false (contra _ (or_elim_1 _ _ .l6 (iff_elim_2 _ _ .PA210)) (not_not_intro _ .l9))))))) (\ .pb7
(satlem _ _ (ast _ _ _ .a4 (\ .l9 (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ (or_elim_1 _ _ (not_not_intro _ .l5) (iff_elim_1 _ _ (not_iff_elim _ _ .PA212))) (not_not_intro _ .l9))))))) (\ .pb8
(satlem _ _ (asf _ _ _ .a4 (\ .l8 (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (not_not_elim _ (or_elim_1 _ _ .l4 (iff_elim_2 _ _ (not_iff_elim _ _ .PA212)))) .l8)))))) (\ .pb9
 ;; Theory Lemmas 
;; BB atom mapping
;; Bit-blasting definitional clauses 
;; Bit-blasting learned clauses 
(satlem_simplify _ _ _ (R _ _ (Q _ _ .pb7 .pb9 .v4).pb5 .v3)(\.cl10
(satlem_simplify _ _ _ (Q _ _ .pb8 .cl10 .v2)(\.cl11
(satlem_simplify _ _ _ (Q _ _ .pb4 .cl10 .v2)(\.cl12
(satlem_simplify _ _ _ (Q _ _ (R _ _ .pb6 .cl11 .v4).cl12 .v3)(\empty empty))))))))))))))))))))))))))))))))))))))))))))
;;
