id     = "BV"
name   = "Bitvector theory"
header = "options/bv_options.h"

[[option]]
  name       = "bvSatSolver"
  smt_name   = "bv-sat-solver"
  category   = "expert"
  short      = ""
  long       = "bv-sat-solver=MODE"
  type       = "CVC4::theory::bv::SatSolverMode"
  default    = "CVC4::theory::bv::SAT_SOLVER_MINISAT"
  handler    = "stringToSatSolver"
  predicates = ["satSolverEnabledBuild"]
  includes   = ["options/bv_bitblast_mode.h"]
  notifies   = []
  links      = []
  read_only  = false
  help       = "choose which sat solver to use, see --bv-sat-solver=help"

[[option]]
  name       = "bitblastMode"
  smt_name   = "bitblast"
  category   = "regular"
  short      = ""
  long       = "bitblast=MODE"
  type       = "CVC4::theory::bv::BitblastMode"
  default    = "CVC4::theory::bv::BITBLAST_MODE_LAZY"
  handler    = "stringToBitblastMode"
  predicates = []
  includes   = ["options/bv_bitblast_mode.h"]
  notifies   = []
  links      = []
  read_only  = false
  help       = "choose bitblasting mode, see --bitblast=help"

[[option]]
  name       = "bitvectorAig"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bitblast-aig"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = ["abcEnabledBuild", "setBitblastAig"]
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "bitblast by first converting to AIG (implies --bitblast=eager)"

[[option]]
  name       = "bitvectorAigSimplifications"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-aig-simp=COMMAND"
  type       = "std::string"
  default    = ""
  handler    = ""
  predicates = ["abcEnabledBuild"]
  includes   = []
  notifies   = []
  links      = ["--bitblast-aig"]
  read_only  = false
  help       = "abc command to run AIG simplifications (implies --bitblast-aig, default is \"balance;drw\")"

[[option]]
  name       = "bitvectorPropagate"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-propagate"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "use bit-vector propagation in the bit-blaster"

[[option]]
  name       = "bitvectorEqualitySolver"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-eq-solver"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "use the equality engine for the bit-vector theory (only if --bitblast=lazy)"

[[option]]
  name       = "bitvectorEqualitySlicer"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-eq-slicer=MODE"
  type       = "CVC4::theory::bv::BvSlicerMode"
  default    = "CVC4::theory::bv::BITVECTOR_SLICER_OFF"
  handler    = "stringToBvSlicerMode"
  predicates = []
  includes   = ["options/bv_bitblast_mode.h"]
  notifies   = []
  links      = ["--bv-eq-solver"]
  read_only  = false
  help       = "turn on the slicing equality solver for the bit-vector theory (only if --bitblast=lazy)"

[[option]]
  name       = "bitvectorInequalitySolver"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-inequality-solver"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "turn on the inequality solver for the bit-vector theory (only if --bitblast=lazy)"

[[option]]
  name       = "bitvectorAlgebraicSolver"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-algebraic-solver"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "turn on the algebraic solver for the bit-vector theory (only if --bitblast=lazy)"

[[option]]
  name       = "bitvectorAlgebraicBudget"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-algebraic-budget"
  type       = "unsigned"
  default    = "1500"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = ["--bv-algebraic-solver"]
  read_only  = false
  help       = "the budget allowed for the algebraic solver in number of SAT conflicts"

[[option]]
  name       = "bitvectorToBool"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-to-bool"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "lift bit-vectors of size 1 to booleans when possible"

[[option]]
  name       = "boolToBitvector"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bool-to-bv"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "convert booleans to bit-vectors of size 1 when possible"

[[option]]
  name       = "bitvectorDivByZeroConst"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-div-zero-const"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "always return -1 on division by zero"

[[option]]
  name       = "bvExtractArithRewrite"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-extract-arith"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "enable rewrite pushing extract [i:0] over arithmetic operations (can blow up)"

[[option]]
  name       = "bvAbstraction"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-abstraction"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "mcm benchmark abstraction"

[[option]]
  name       = "skolemizeArguments"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-skolemize"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "skolemize arguments for bv abstraction (only does something if --bv-abstraction is on)"

[[option]]
  name       = "bvNumFunc"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-num-func=NUM"
  type       = "unsigned"
  default    = "1"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = true
  help       = "number of function symbols in conflicts that are generalized"

[[option]]
  name       = "bvEagerExplanations"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-eager-explanations"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "compute bit-blasting propagation explanations eagerly"

[[option]]
  name       = "bitvectorQuickXplain"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-quick-xplain"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = true
  help       = "minimize bv conflicts using the QuickXplain algorithm"

[[option]]
  name       = "bvIntroducePow2"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-intro-pow2"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = true
  help       = "introduce bitvector powers of two as a preprocessing pass"

[[option]]
  name       = "bvGaussElim"
  smt_name   = ""
  category   = "expert"
  short      = ""
  long       = "bv-gauss-elim"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = true
  help       = "simplify formula via Gaussian Elimination if applicable"

[[option]]
  name       = "bvLazyRewriteExtf"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-lazy-rewrite-extf"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "lazily rewrite extended functions like bv2nat and int2bv"

[[option]]
  name       = "bvLazyReduceExtf"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-lazy-reduce-extf"
  type       = "bool"
  default    = "false"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "reduce extended functions like bv2nat and int2bv at last call instead of full effort"

[[option]]
  name       = "bvAlgExtf"
  smt_name   = ""
  category   = "regular"
  short      = ""
  long       = "bv-alg-extf"
  type       = "bool"
  default    = "true"
  handler    = ""
  predicates = []
  includes   = []
  notifies   = []
  links      = []
  read_only  = false
  help       = "algebraic inferences for extended functions"
