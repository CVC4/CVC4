digraph "source tree" {
    overlap=scale;
    size="8,10";
    ratio="fill";
    fontsize="16";
    fontname="Helvetica";
	clusterrank="local";
	"smt_engine.cpp" -> "set_language.h"
	"cvc4_assert.cpp" -> "output.h"
	"synth_rew_rules.h" -> "preprocessing_pass_context.h"
	"quantifiers_engine.cpp" -> "inst_propagator.h"
	"strtok_r.h" -> "replacements.h"
	"inst_match.cpp" -> "quantifiers_engine.h"
	"dio_solver.cpp" -> "output.h"
	"term_formula_removal.cpp" -> "proof_manager.h"
	"abstraction.h" -> "substitutions.h"
	"theory_sep.cpp" -> "quant_epr.h"
	"node_value.cpp" -> "node_value.h"
	"sygus_repair_const.h" -> "logic_info.h"
	"prop_engine.cpp" -> "result.h"
	"resource_manager.h" -> "listener.h"
	"matrix.cpp" -> "matrix.h"
	"options_handler.h" -> "options.h"
	"arith_static_learner.cpp" -> "arith_utilities.h"
	"preprocessing_pass_registry.cpp" -> "int_to_bv.h"
	"matrix.h" -> "output.h"
	"quantifiers_engine.cpp" -> "term_util.h"
	"theory_uf.cpp" -> "theory_uf.h"
	"cut_log.cpp" -> "ostream_util.h"
	"sygus_grammar_norm.h" -> "type.h"
	"quantifier_macros.cpp" -> "smt_engine.h"
	"synth_conjecture.h" -> "cegis_unif.h"
	"expr_template.cpp" -> "variable_type_map.h"
	"miplib_trick.cpp" -> "miplib_trick.h"
	"sep_skolem_emp.cpp" -> "node.h"
	"enum_stream_substitution.h" -> "quantifiers_engine.h"
	"callbacks.h" -> "constraint_forward.h"
	"bv_subtheory_core.h" -> "cdhashmap.h"
	"dio_solver.h" -> "normal_form.h"
	"relevant_domain.cpp" -> "quantifiers_engine.h"
	"inst_strategy_e_matching.h" -> "trigger.h"
	"congruence_manager.h" -> "statistics_registry.h"
	"lemma_channels.h" -> "lemma_input_channel.h"
	"array_proof.cpp" -> "proof_manager.h"
	"ceg_instantiator.cpp" -> "quantifiers_rewriter.h"
	"type.cpp" -> "exception.h"
	"non_clausal_simp.cpp" -> "theory_model.h"
	"instantiation_engine.cpp" -> "trigger.h"
	"bv_inverter_utils.h" -> "node.h"
	"conjecture_generator.h" -> "cdhashmap.h"
	"cvc4parser_public.h" -> "cvc4_public.h"
	"theory_fp.h" -> "equality_engine.h"
	"nonlinear_extension.cpp" -> "ext_theory.h"
	"ext_theory.cpp" -> "quantifiers_engine.h"
	"model_builder.cpp" -> "quantifiers_attributes.h"
	"proof_manager.cpp" -> "smt_engine_scope.h"
	"set_language.h" -> "language.h"
	"sygus_unif.cpp" -> "sygus_unif.h"
	"resolution_bitvector_proof.h" -> "context.h"
	"sep_skolem_emp.cpp" -> "theory.h"
	"theory_arrays.h" -> "cdqueue.h"
	"datatype.h" -> "hash.h"
	"quant_split.cpp" -> "quantifiers_engine.h"
	"synth_conjecture.h" -> "sygus_process_conj.h"
	"cnf_proof.h" -> "lemma_proof.h"
	"bitblaster.h" -> "valuation.h"
	"parser_builder.cpp" -> "parser_builder.h"
	"ceg_arith_instantiator.cpp" -> "term_util.h"
	"expr_miner_manager.cpp" -> "expr_miner_manager.h"
	"rewrite.cpp" -> "rewrite.h"
	"arith_msum.cpp" -> "rewriter.h"
	"proof_manager.h" -> "proof.h"
	"term_registration_visitor.cpp" -> "term_registration_visitor.h"
	"datatypes_sygus.h" -> "sygus_sampler.h"
	"sygus_grammar_norm.h" -> "node_manager_attributes.h"
	"cegis.cpp" -> "term_database_sygus.h"
	"equality_query.cpp" -> "equality_query.h"
	"callbacks.cpp" -> "callbacks.h"
	"cnf_stream.h" -> "lemma_channels.h"
	"extended_rewrite.h" -> "node.h"
	"sygus_grammar_cons.h" -> "quantifiers_engine.h"
	"theory_uf_strong_solver.cpp" -> "theory_uf_strong_solver.h"
	"union_find.h" -> "cdo.h"
	"smt_engine.cpp" -> "cdhashmap.h"
	"sygus_sampler.h" -> "term_database_sygus.h"
	"rewrite.h" -> "preprocessing_pass_context.h"
	"portfolio.h" -> "options.h"
	"theory_proxy.h" -> "lemma_input_channel.h"
	"theory_bv.cpp" -> "theory_bv_utils.h"
	"smt_engine.cpp" -> "logic_info.h"
	"rewriter_tables_template.h" -> "attribute_unique_id.h"
	"theory_arrays.h" -> "theory.h"
	"sat_proof.h" -> "proof_manager.h"
	"smt2_printer.cpp" -> "smt_engine.h"
	"theory.h" -> "cdlist.h"
	"driver_unified.cpp" -> "statistics_registry.h"
	"sort_inference.cpp" -> "rewriter.h"
	"equality_infer.cpp" -> "arith_msum.h"
	"command.h" -> "unsat_core.h"
	"managed_ostreams.cpp" -> "managed_ostreams.h"
	"equality_engine.h" -> "statistics_registry.h"
	"quantifiers_engine.h" -> "attribute.h"
	"strtok_r.c" -> "strtok_r.h"
	"theory_arith_private.h" -> "boolean_simplification.h"
	"array_info.h" -> "node.h"
	"theory_sets_private.h" -> "cdhashset.h"
	"parser_builder.cpp" -> "smt2.h"
	"ho_trigger.cpp" -> "quantifiers_engine.h"
	"theory_arith_private.cpp" -> "context.h"
	"local_theory_ext.cpp" -> "term_util.h"
	"language.h" -> "exception.h"
	"sygus_grammar_cons.cpp" -> "synth_conjecture.h"
	"ite_simp.cpp" -> "ite_simp.h"
	"cvc_printer.cpp" -> "language.h"
	"integer_cln_imp.cpp" -> "cvc4_assert.h"
	"theory_uf.cpp" -> "type_enumerator.h"
	"command_list.h" -> "cdlist.h"
	"symbol_table.cpp" -> "context.h"
	"theory_fp.h" -> "cdo.h"
	"synth_conjecture.h" -> "sygus_repair_const.h"
	"main.h" -> "statistics_registry.h"
	"normal_form.h" -> "node.h"
	"quantifiers_rewriter.cpp" -> "bv_inverter.h"
	"smt_engine.h" -> "modal_exception.h"
	"arith_utilities.h" -> "delta_rational.h"
	"synth_rew_rules.cpp" -> "sygus_grammar_cons.h"
	"main.cpp" -> "parser_builder.h"
	"normal_form.cpp" -> "output.h"
	"theory_test_utils.h" -> "output_channel.h"
	"inst_match_generator.cpp" -> "trigger.h"
	"lazy_bitblaster.h" -> "cdhashmap.h"
	"ambqi_builder.cpp" -> "cvc4_check.h"
	"portfolio_util.cpp" -> "options.h"
	"quantifiers_attributes.h" -> "attribute.h"
	"cvc_input.cpp" -> "cvc_input.h"
	"ce_guided_single_inv.h" -> "ce_guided_single_inv_sol.h"
	"simplex.h" -> "delta_rational.h"
	"array_info.cpp" -> "smt_statistics_registry.h"
	"cdhashmap.h" -> "context.h"
	"main.cpp" -> "options.h"
	"node_manager.cpp" -> "attribute.h"
	"sygus_unif.h" -> "node.h"
	"sygus_unif_rl.cpp" -> "printer.h"
	"apply_to_const.h" -> "preprocessing_pass_context.h"
	"synth_conjecture.h" -> "ce_guided_single_inv.h"
	"normal_form.cpp" -> "theory.h"
	"preprocessing_pass_registry.cpp" -> "sep_skolem_emp.h"
	"options_handler.h" -> "arith_propagation_mode.h"
	"sort_inference.h" -> "node.h"
	"term_util.cpp" -> "theory_bv_utils.h"
	"sygus_grammar_norm.h" -> "datatype.h"
	"quantifiers_attributes.cpp" -> "rewrite_engine.h"
	"theory_proof.cpp" -> "clause_id.h"
	"proof_manager.cpp" -> "cvc4_assert.h"
	"congruence_manager.h" -> "cdtrail_queue.h"
	"theory_proxy.h" -> "lemma_output_channel.h"
	"smt_engine.h" -> "cdlist_forward.h"
	"term_formula_removal.h" -> "bool.h"
	"theory_engine.cpp" -> "assertion_pipeline.h"
	"bv_inverter.cpp" -> "theory_bv_utils.h"
	"model_engine.cpp" -> "first_order_model.h"
	"instantiate.h" -> "quant_util.h"
	"preprocessing_pass_registry.cpp" -> "bv_ackermann.h"
	"theory_bv.h" -> "context.h"
	"valuation.h" -> "theoryof_mode.h"
	"sygus_simple_sym.h" -> "term_util.h"
	"ce_guided_single_inv.cpp" -> "node_algorithm.h"
	"candidate_rewrite_filter.cpp" -> "candidate_rewrite_filter.h"
	"arith_rewriter.cpp" -> "arith_utilities.h"
	"theory_uf_tim.h" -> "theory_uf.h"
	"smt_engine.cpp" -> "exception.h"
	"ceg_instantiator.cpp" -> "trigger.h"
	"theory_sets_rels.h" -> "cdlist.h"
	"preprocessing_pass_context.cpp" -> "node_algorithm.h"
	"tptp.h" -> "command.h"
	"driver_unified.cpp" -> "command.h"
	"cdqueue.h" -> "cdlist.h"
	"SimpSolver.h" -> "statistics_registry.h"
	"equality_infer.cpp" -> "context_mm.h"
	"pseudo_boolean_processor.h" -> "maybe.h"
	"sygus_sampler.cpp" -> "lazy_trie.h"
	"eager_bitblaster.h" -> "bitvector_proof.h"
	"bool_to_bv.h" -> "statistics_registry.h"
	"cnf_stream.cpp" -> "clause_id.h"
	"sygus_input.cpp" -> "parser_exception.h"
	"theory_model.h" -> "type_set.h"
	"context.cpp" -> "context.h"
	"ceg_arith_instantiator.cpp" -> "theory_arith.h"
	"parser.cpp" -> "input.h"
	"bv_inequality_graph.h" -> "equality_engine.h"
	"simplex.cpp" -> "constraint.h"
	"bv_subtheory_bitblast.cpp" -> "abstraction.h"
	"lazy_bitblaster.cpp" -> "theory_model.h"
	"cvc4cpp.cpp" -> "node_manager.h"
	"theory_bv.cpp" -> "proof_manager.h"
	"sort_infer.cpp" -> "rewriter.h"
	"extended_rewriter_pass.cpp" -> "extended_rewriter_pass.h"
	"extended_rewrite.cpp" -> "arith_msum.h"
	"antlr_input.cpp" -> "output.h"
	"evaluator.h" -> "node.h"
	"type_checker_template.cpp" -> "node_manager_attributes.h"
	"bitvector_proof.h" -> "theory_proof.h"
	"antlr_input.cpp" -> "input.h"
	"quant_split.cpp" -> "quant_split.h"
	"theory_engine.h" -> "decision_manager.h"
	"bv_subtheory_bitblast.cpp" -> "proof_manager.h"
	"fun_def_process.cpp" -> "proof_manager.h"
	"quantifier_macros.cpp" -> "rewriter.h"
	"equality_query.cpp" -> "term_database.h"
	"candidate_rewrite_filter.h" -> "sygus_sampler.h"
	"parser_builder.cpp" -> "antlr_input.h"
	"theory_arrays_rewriter.cpp" -> "attribute.h"
	"constraint.h" -> "cdqueue.h"
	"preprocessing_pass_registry.cpp" -> "apply_substs.h"
	"parser.h" -> "parser_exception.h"
	"theory_bv_rewrite_rules_constant_evaluation.h" -> "theory_bv_utils.h"
	"cdlist.h" -> "context.h"
	"theory.h" -> "command.h"
	"cdo.h" -> "cvc4_assert.h"
	"regexp_operation.cpp" -> "theory_strings_rewriter.h"
	"sygus_inference.cpp" -> "quantifiers_attributes.h"
	"arith_ite_utils.h" -> "node.h"
	"nonlinear_extension.h" -> "equality_engine.h"
	"portfolio.cpp" -> "output.h"
	"care_graph.h" -> "node.h"
	"model.cpp" -> "smt_engine.h"
	"quantifiers_engine.cpp" -> "inst_strategy_cegqi.h"
	"global_negate.cpp" -> "global_negate.h"
	"theory_builtin_type_rules.h" -> "theory_builtin_rewriter.h"
	"inst_match.cpp" -> "term_database.h"
	"interactive_shell.cpp" -> "command.h"
	"datatypes_sygus.h" -> "sygus_simple_sym.h"
	"prop_engine.cpp" -> "proof_manager.h"
	"safe_print.h" -> "result.h"
	"sygus_repair_const.cpp" -> "sygus_grammar_norm.h"
	"sygus_grammar_norm.cpp" -> "term_util.h"
	"options_template.cpp" -> "language.h"
	"candidate_rewrite_filter.h" -> "dynamic_rewrite.h"
	"int_to_bv.cpp" -> "node.h"
	"bounded_token_buffer.cpp" -> "bounded_token_buffer.h"
	"synth_conjecture.cpp" -> "smt_engine.h"
	"command.h" -> "variable_type_map.h"
	"driver_unified.cpp" -> "command_executor.h"
	"sygus_module.h" -> "node.h"
	"smt_engine.cpp" -> "attribute.h"
	"eager_bitblaster.h" -> "cnf_stream.h"
	"cut_log.cpp" -> "approx_simplex.h"
	"ce_guided_single_inv_sol.cpp" -> "synth_engine.h"
	"bvminisat.h" -> "SimpSolver.h"
	"smt2_printer.cpp" -> "smt2_printer.h"
	"first_order_model.cpp" -> "term_database.h"
	"fp_converter.h" -> "cdhashmap.h"
	"theory_engine.cpp" -> "lemma_output_channel.h"
	"cdlist.h" -> "cvc4_assert.h"
	"sat_solver.h" -> "statistics_registry.h"
	"ext_theory.cpp" -> "substitutions.h"
	"command_list.cpp" -> "command_list.h"
	"sygus_repair_const.cpp" -> "smt_engine.h"
	"smt_engine_check_proof.cpp" -> "configuration_private.h"
	"sygus_grammar_red.cpp" -> "term_database_sygus.h"
	"theory_arith_private.cpp" -> "bounded_integers.h"
	"preprocessing_pass.h" -> "assertion_pipeline.h"
	"cegis_unif.cpp" -> "cegis_unif.h"
	"bv_intro_pow2.cpp" -> "bv_intro_pow2.h"
	"soi_simplex.cpp" -> "output.h"
	"bv_sat_solver_notify.h" -> "sat_solver_types.h"
	"theory_uf.cpp" -> "proof_manager.h"
	"bv_subtheory_algebraic.cpp" -> "boolean_simplification.h"
	"smt_engine.cpp" -> "theory_bv_rewriter.h"
	"cnf_stream.h" -> "theory_proxy.h"
	"decision_strategy.cpp" -> "rewriter.h"
	"cdqueue.h" -> "context.h"
	"managed_ostreams.h" -> "update_ostream.h"
	"smt_engine.cpp" -> "configuration.h"
	"rewriter.cpp" -> "theory.h"
	"expr_template.cpp" -> "expr_manager_scope.h"
	"inst_propagator.cpp" -> "instantiate.h"
	"proof_manager.h" -> "cdhashmap.h"
	"soi_simplex.h" -> "simplex.h"
	"options.h" -> "modal_exception.h"
	"interactive_shell.cpp" -> "options.h"
	"command_executor_portfolio.cpp" -> "portfolio.h"
	"symmetry_breaker.h" -> "node_builder.h"
	"first_order_model.h" -> "theory_model.h"
	"model.cpp" -> "smt_engine_scope.h"
	"theory_arith.h" -> "theory.h"
	"theory_strings_preprocess.h" -> "skolem_cache.h"
	"theory_sets_rels.h" -> "cdhashset.h"
	"set_language.cpp" -> "set_language.h"
	"smt2.cpp" -> "cvc4cpp.h"
	"sat_solver.h" -> "context.h"
	"nonlinear_extension.cpp" -> "nonlinear_extension.h"
	"metakind_template.h" -> "cvc4_assert.h"
	"pickle_data.cpp" -> "node_manager.h"
	"quantifiers_engine.cpp" -> "smt_statistics_registry.h"
	"constraint.h" -> "context.h"
	"decision_engine.h" -> "output.h"
	"Solver.h" -> "Alg.h"
	"candidate_generator.cpp" -> "theory_engine.h"
	"lfsc_proof_printer.h" -> "proof.h"
	"theory_proof.cpp" -> "cnf_proof.h"
	"argument_extender_implementation.cpp" -> "argument_extender.h"
	"bounded_integers.h" -> "quantifiers_engine.h"
	"decision_attributes.h" -> "decision_weight.h"
	"lfsc_proof_printer.h" -> "sat_proof.h"
	"theory_builtin.cpp" -> "theory_model.h"
	"unconstrained_simplifier.h" -> "logic_info.h"
	"ite_utilities.cpp" -> "rewrite.h"
	"sygus_inference.h" -> "preprocessing_pass_context.h"
	"model.cpp" -> "printer.h"
	"options_public_functions.cpp" -> "printer_modes.h"
	"slicer.cpp" -> "theory_bv_utils.h"
	"sygus_inference.cpp" -> "quantifiers_rewriter.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules_constant_evaluation.h"
	"node_algorithm.h" -> "node.h"
	"inst_strategy_cegqi.cpp" -> "theory_arith.h"
	"ambqi_builder.h" -> "first_order_model.h"
	"tptp_input.cpp" -> "parser.h"
	"bounded_integers.cpp" -> "bounded_integers.h"
	"minisat.cpp" -> "sat_proof.h"
	"approx_simplex.h" -> "delta_rational.h"
	"quantifiers_engine.cpp" -> "anti_skolem.h"
	"cegis_unif.cpp" -> "printer.h"
	"synth_engine.cpp" -> "smt_statistics_registry.h"
	"smt_engine.h" -> "logic_exception.h"
	"smt_engine.cpp" -> "open_ostream.h"
	"dynamic_rewrite.h" -> "cdlist.h"
	"term_database.cpp" -> "trigger.h"
	"theory_uf.h" -> "equality_engine.h"
	"linear_equality.h" -> "maybe.h"
	"theory_sets_type_enumerator.h" -> "normal_form.h"
	"theory_sep_rewriter.h" -> "type_enumerator.h"
	"arith_ite_utils.cpp" -> "arith_ite_utils.h"
	"theory_proof.cpp" -> "node_visitor.h"
	"theory_arith_private.cpp" -> "arithvar.h"
	"inst_strategy_enumerative.h" -> "context_mm.h"
	"bounded_integers.cpp" -> "theory_engine.h"
	"command.h" -> "sexpr.h"
	"main.cpp" -> "command.h"
	"infer_bounds.cpp" -> "rewriter.h"
	"real_to_int.cpp" -> "real_to_int.h"
	"theory_arith_private.h" -> "dio_solver.h"
	"preprocessing_pass_registry.cpp" -> "pseudo_boolean_processor.h"
	"evaluator.cpp" -> "evaluator.h"
	"sygus_pbe.cpp" -> "term_util.h"
	"rewrite_engine.cpp" -> "term_database.h"
	"bounded_integers.cpp" -> "term_util.h"
	"synth_engine.cpp" -> "term_util.h"
	"global_negate.h" -> "preprocessing_pass_context.h"
	"rational_cln_imp.cpp" -> "cvc4_assert.h"
	"node_manager.cpp" -> "node_manager_listeners.h"
	"theory_test_utils.h" -> "cvc4_assert.h"
	"context_mm.cpp" -> "cvc4_assert.h"
	"theory_uf_rewriter.h" -> "rewriter.h"
	"term_util.cpp" -> "theory_engine.h"
	"Dimacs.h" -> "SolverTypes.h"
	"pickler.cpp" -> "cvc4_assert.h"
	"node_manager_listeners.cpp" -> "resource_manager.h"
	"symbol_table.cpp" -> "symbol_table.h"
	"util.cpp" -> "main.h"
	"main.cpp" -> "parser.h"
	"options_public_functions.cpp" -> "options.h"
	"quantifiers_attributes.cpp" -> "arith_msum.h"
	"smt_engine.cpp" -> "configuration_private.h"
	"inst_strategy_cegqi.h" -> "statistics_registry.h"
	"resolution_bitvector_proof.cpp" -> "lfsc_proof_printer.h"
	"simplex.h" -> "result.h"
	"attribute.cpp" -> "attribute.h"
	"context.h" -> "cvc4_assert.h"
	"bv_quick_check.h" -> "statistics_registry.h"
	"sort_infer.h" -> "node.h"
	"preprocessing_pass_registry.cpp" -> "global_negate.h"
	"cnf_proof.cpp" -> "theory_proof.h"
	"cnf_stream.h" -> "registrar.h"
	"command.h" -> "result.h"
	"arith_ite_utils.cpp" -> "ite_utilities.h"
	"single_inv_partition.cpp" -> "term_util.h"
	"preprocessing_pass_registry.cpp" -> "non_clausal_simp.h"
	"argument_extender_implementation.cpp" -> "cvc4_assert.h"
	"theory_bv_rewrite_rules.h" -> "statistics_registry.h"
	"parser_builder.h" -> "language.h"
	"preprocessing_pass_registry.cpp" -> "real_to_int.h"
	"expr_miner_manager.h" -> "query_generator.h"
	"cvc4_assert.cpp" -> "cvc4_assert.h"
	"main.cpp" -> "interactive_shell.h"
	"skolemize.cpp" -> "sort_inference.h"
	"options_handler.h" -> "language.h"
	"smt_engine.cpp" -> "term_formula_removal.h"
	"cvc4cpp.cpp" -> "random.h"
	"term_enumeration.cpp" -> "term_enumeration.h"
	"theory_arrays.h" -> "array_proof_reconstruction.h"
	"inst_match_trie.h" -> "cdlist.h"
	"type.cpp" -> "type_node.h"
	"lemma_channels.h" -> "lemma_output_channel.h"
	"theory_engine.cpp" -> "theory_model.h"
	"theory_sets_rels.h" -> "theory.h"
	"pseudo_boolean_processor.h" -> "preprocessing_pass.h"
	"sygus_explain.h" -> "sygus_invariance.h"
	"linear_equality.cpp" -> "linear_equality.h"
	"pickle_data.cpp" -> "expr_manager_scope.h"
	"synth_conjecture.cpp" -> "synth_engine.h"
	"logic_info.cpp" -> "cvc4_assert.h"
	"type_enumerator.h" -> "theory_builtin_rewriter.h"
	"inst_propagator.h" -> "node.h"
	"datatypes_sygus.h" -> "cdlist.h"
	"node_value.cpp" -> "printer.h"
	"expr_miner.cpp" -> "term_util.h"
	"theory.h" -> "theoryof_mode.h"
	"theory_arrays_rewriter.h" -> "rewriter.h"
	"theory_strings.h" -> "regexp_operation.h"
	"array_info.h" -> "cdhashmap.h"
	"abstract_value.cpp" -> "cvc4_assert.h"
	"theory_quantifiers.cpp" -> "model_engine.h"
	"ceg_epr_instantiator.cpp" -> "trigger.h"
	"ite_utilities.cpp" -> "ite_utilities.h"
	"cegis.h" -> "sygus_module.h"
	"justification_heuristic.cpp" -> "justification_heuristic.h"
	"skolemization_manager.h" -> "substitutions.h"
	"quantifiers_engine.cpp" -> "theory_sep.h"
	"node_manager.cpp" -> "node_manager.h"
	"ceg_epr_instantiator.h" -> "ceg_instantiator.h"
	"theory_strings.h" -> "cdhashset.h"
	"node.cpp" -> "attribute.h"
	"parser_builder.cpp" -> "input.h"
	"idl_assertion_db.cpp" -> "idl_assertion_db.h"
	"node.cpp" -> "node.h"
	"theory_arith_private.cpp" -> "node_algorithm.h"
	"trigger.cpp" -> "term_database.h"
	"eager_bitblaster.h" -> "sat_solver.h"
	"simplex.cpp" -> "output.h"
	"sygus_unif_strat.cpp" -> "sygus_unif_strat.h"
	"theory_datatypes.h" -> "datatypes_sygus.h"
	"managed_ostreams.cpp" -> "open_ostream.h"
	"theory_arith_private.h" -> "cdhashset.h"
	"smt_engine_check_proof.cpp" -> "smt_engine.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules_core.h"
	"theory_engine.h" -> "equality_engine.h"
	"preprocessing_pass_registry.cpp" -> "bv_to_bool.h"
	"congruence_manager.cpp" -> "equality_infer.h"
	"rewrite_engine.cpp" -> "model_engine.h"
	"command.cpp" -> "utility.h"
	"bv_quick_check.h" -> "node.h"
	"sygus_invariance.cpp" -> "synth_conjecture.h"
	"cdhashset.h" -> "cvc4_assert.h"
	"smt2_input.cpp" -> "input.h"
	"cvc4_assert.h" -> "exception.h"
	"theory_proof.cpp" -> "context.h"
	"synth_conjecture.h" -> "sygus_pbe.h"
	"bv_subtheory_inequality.cpp" -> "smt_statistics_registry.h"
	"bv_subtheory_inequality.cpp" -> "theory_model.h"
	"smt2_input.cpp" -> "parser.h"
	"theory_arith.cpp" -> "theory_arith.h"
	"theory_proof.cpp" -> "proof_manager.h"
	"options_handler.h" -> "ufss_mode.h"
	"quantifiers_engine.cpp" -> "bounded_integers.h"
	"datatypes_sygus.h" -> "cdhashset.h"
	"theory_proof.cpp" -> "cvc4_assert.h"
	"SimpSolver.cc" -> "System.h"
	"theory_model_builder.h" -> "theory_model.h"
	"sygus_grammar_red.cpp" -> "term_util.h"
	"error_set.cpp" -> "smt_statistics_registry.h"
	"circuit_propagator.h" -> "theory.h"
	"non_clausal_simp.h" -> "preprocessing_pass_context.h"
	"candidate_generator.cpp" -> "term_util.h"
	"smt_engine_check_proof.cpp" -> "proof.h"
	"sep_skolem_emp.cpp" -> "sep_skolem_emp.h"
	"prop_engine.cpp" -> "resource_manager.h"
	"local_theory_ext.cpp" -> "local_theory_ext.h"
	"inst_propagator.h" -> "quantifiers_engine.h"
	"type_node.h" -> "cardinality.h"
	"cvc4cpp.cpp" -> "type.h"
	"theory_arith_private.h" -> "matrix.h"
	"arith_rewriter.cpp" -> "arith_rewriter.h"
	"theory_strings.cpp" -> "command.h"
	"command_executor_portfolio.cpp" -> "main.h"
	"bv_subtheory_bitblast.h" -> "bv_subtheory.h"
	"equality_engine.h" -> "node.h"
	"synth_rew_rules.cpp" -> "quantifiers_attributes.h"
	"antlr_input.cpp" -> "command.h"
	"fp_converter.h" -> "valuation.h"
	"equality_infer.h" -> "cdhashset.h"
	"skolemize.cpp" -> "quantifiers_attributes.h"
	"smt_engine.cpp" -> "cdlist.h"
	"theory_proof.cpp" -> "theory_proof.h"
	"theory_arrays.h" -> "equality_engine.h"
	"smt_engine.cpp" -> "quantifiers_rewriter.h"
	"subs_minimize.cpp" -> "theory_bv_utils.h"
	"theory_proof.cpp" -> "output_channel.h"
	"term_util.cpp" -> "term_enumeration.h"
	"soi_simplex.cpp" -> "constraint.h"
	"bitblast_strategies_template.h" -> "theory_bv_utils.h"
	"regexp_operation.h" -> "regexp.h"
	"arith_rewriter.h" -> "theory.h"
	"arithvar_node_map.h" -> "cdhashmap.h"
	"arith_ite_utils.h" -> "cdo.h"
	"preprocessing_pass_registry.cpp" -> "extended_rewriter_pass.h"
	"int_to_bv.cpp" -> "theory.h"
	"synth_rew_rules.cpp" -> "term_canonize.h"
	"sygus_eval_unfold.cpp" -> "sygus_eval_unfold.h"
	"cnf_stream.h" -> "cdinsert_hashmap.h"
	"output.cpp" -> "output.h"
	"prop_engine.cpp" -> "sat_solver.h"
	"prop_engine.h" -> "proof_manager.h"
	"cnf_stream.h" -> "proof_manager.h"
	"bv_eager_solver.cpp" -> "eager_bitblaster.h"
	"arith_utilities.h" -> "arithvar.h"
	"smt_engine.cpp" -> "resource_manager.h"
	"approx_simplex.cpp" -> "constraint.h"
	"smt_engine.cpp" -> "term_util.h"
	"proof_manager.h" -> "logic_info.h"
	"bvminisat.cpp" -> "SimpSolver.h"
	"instantiate.cpp" -> "term_util.h"
	"equality_infer.h" -> "context_mm.h"
	"driver_unified.cpp" -> "parser_exception.h"
	"type_enumerator.h" -> "rewriter.h"
	"theory_sets_private.cpp" -> "theory_sets.h"
	"bv_inverter.cpp" -> "term_util.h"
	"sat_proof_implementation.h" -> "bvminisat.h"
	"bv_to_bool.h" -> "preprocessing_pass_context.h"
	"fun_def_process.cpp" -> "term_database.h"
	"extended_rewriter_pass.h" -> "preprocessing_pass.h"
	"quant_conflict_find.cpp" -> "quant_conflict_find.h"
	"resolution_bitvector_proof.cpp" -> "bitvector_proof.h"
	"random.cpp" -> "random.h"
	"slicer.h" -> "node.h"
	"input.cpp" -> "output.h"
	"preprocessing_pass_context.h" -> "cdo.h"
	"boolean_simplification.h" -> "cvc4_assert.h"
	"decision_attributes.h" -> "attribute.h"
	"theory_bv.h" -> "statistics_registry.h"
	"resolution_bitvector_proof.cpp" -> "clause_id.h"
	"alpha_equivalence.cpp" -> "term_canonize.h"
	"ce_guided_single_inv.cpp" -> "sygus_grammar_cons.h"
	"sygus_grammar_cons.cpp" -> "datatype.h"
	"uf_proof.cpp" -> "uf_proof.h"
	"open_ostream.h" -> "option_exception.h"
	"antlr_input.h" -> "input.h"
	"slicer.h" -> "statistics_registry.h"
	"preprocessing_pass_registry.cpp" -> "map_util.h"
	"pickler.cpp" -> "pickler.h"
	"bitblaster.h" -> "resource_manager.h"
	"theory_bv.h" -> "cdhashset.h"
	"theory_proof.cpp" -> "smt_engine_scope.h"
	"interactive_shell.h" -> "unsafe_interrupt_exception.h"
	"theory_engine.cpp" -> "node_builder.h"
	"bitblaster.h" -> "node.h"
	"matrix.h" -> "index.h"
	"theory_sets_private.cpp" -> "node_algorithm.h"
	"arith_utilities.h" -> "node.h"
	"decision_engine.h" -> "decision_strategy.h"
	"bv_quick_check.h" -> "cdo.h"
	"sygus_invariance.cpp" -> "sygus_invariance.h"
	"arith_proof.h" -> "equality_engine.h"
	"ceg_dt_instantiator.cpp" -> "ceg_dt_instantiator.h"
	"bv_eager_atoms.h" -> "preprocessing_pass.h"
	"ce_guided_single_inv.cpp" -> "term_util.h"
	"dagification_visitor.cpp" -> "context.h"
	"atom_requests.h" -> "node.h"
	"quantifiers_engine.h" -> "hash.h"
	"skolemization_manager.h" -> "node.h"
	"portfolio_util.cpp" -> "portfolio_util.h"
	"quant_conflict_find.h" -> "quantifiers_engine.h"
	"unconstrained_simplifier.cpp" -> "rewriter.h"
	"smt_engine.cpp" -> "update_ostream.h"
	"smt_engine.cpp" -> "theory_engine.h"
	"parser.h" -> "unsafe_interrupt_exception.h"
	"sygus_sampler.h" -> "lazy_trie.h"
	"proof_manager.cpp" -> "node_visitor.h"
	"expr_miner.cpp" -> "smt_engine_scope.h"
	"SolverTypes.h" -> "Alg.h"
	"theory_proof.cpp" -> "arith_proof.h"
	"theory_uf_model.cpp" -> "attribute.h"
	"fp_converter.cpp" -> "fp_converter.h"
	"cegis_unif.h" -> "sygus_unif_rl.h"
	"theory_sets_rels.h" -> "equality_engine.h"
	"inst_propagator.cpp" -> "inst_propagator.h"
	"model_builder.cpp" -> "first_order_model.h"
	"sexpr.h" -> "exception.h"
	"ite_utilities.cpp" -> "rewriter.h"
	"global_negate.h" -> "preprocessing_pass.h"
	"theory_datatypes.cpp" -> "term_database.h"
	"datatype.cpp" -> "set_language.h"
	"sygus_grammar_cons.cpp" -> "term_database_sygus.h"
	"approx_simplex.cpp" -> "approx_simplex.h"
	"sygus_process_conj.cpp" -> "term_database_sygus.h"
	"inst_match_trie.cpp" -> "quant_util.h"
	"theory_proxy.h" -> "node.h"
	"lazy_bitblaster.cpp" -> "proof_manager.h"
	"abstraction.cpp" -> "theory_bv_utils.h"
	"record.cpp" -> "type.h"
	"int_to_bv.h" -> "preprocessing_pass.h"
	"bv_gauss.cpp" -> "bv_gauss.h"
	"options_handler.cpp" -> "configuration_private.h"
	"theory_builtin_rewriter.cpp" -> "attribute.h"
	"quantifiers_engine.cpp" -> "equality_query.h"
	"rewrite_engine.h" -> "context_mm.h"
	"proof_output_channel.cpp" -> "valuation.h"
	"theory_arith_private.cpp" -> "arith_rewriter.h"
	"ceg_bv_instantiator_utils.cpp" -> "rewriter.h"
	"command.cpp" -> "sexpr.h"
	"quantifiers_engine.h" -> "quantifiers_modes.h"
	"quant_conflict_find.cpp" -> "theory_engine.h"
	"term_registration_visitor.h" -> "context.h"
	"apply_substs.h" -> "preprocessing_pass.h"
	"unconstrained_simplifier.h" -> "node.h"
	"theory_uf.cpp" -> "theory_uf_rewriter.h"
	"ambqi_builder.h" -> "model_builder.h"
	"theory_arith_private.h" -> "context.h"
	"shared_terms_database.h" -> "theory.h"
	"bv_quick_check.h" -> "sat_solver_types.h"
	"bitblast_utils.h" -> "node.h"
	"theory_strings_preprocess.cpp" -> "proof_manager.h"
	"sat_solver.h" -> "node.h"
	"datatypes_sygus.cpp" -> "theory_model.h"
	"term_util.h" -> "type_enumerator.h"
	"array_info.h" -> "backtrackable.h"
	"theory_engine.h" -> "theory.h"
	"idl_assertion_db.h" -> "cdlist.h"
	"extended_rewrite.cpp" -> "theory_bv_utils.h"
	"abstraction.cpp" -> "abstraction.h"
	"theory_uf.cpp" -> "theory_uf_strong_solver.h"
	"logic_request.cpp" -> "smt_engine.h"
	"portfolio_util.h" -> "pickler.h"
	"theory_sets_private.cpp" -> "result.h"
	"statistics_registry.cpp" -> "cvc4_check.h"
	"theory_uf_model.cpp" -> "theory_uf.h"
	"fun_def_process.cpp" -> "fun_def_process.h"
	"sygus_grammar_norm.cpp" -> "smt_engine.h"
	"equality_query.cpp" -> "first_order_model.h"
	"dio_solver.cpp" -> "dio_solver.h"
	"Solver.cc" -> "exception.h"
	"theory_proxy.cpp" -> "theory_proxy.h"
	"regexp.cpp" -> "regexp.h"
	"rational_cln_imp.h" -> "exception.h"
	"dio_solver.h" -> "partial_model.h"
	"preprocessing_pass_registry.cpp" -> "ite_simp.h"
	"theory_sets_private.h" -> "equality_engine.h"
	"sygus_simple_sym.cpp" -> "sygus_simple_sym.h"
	"printer.cpp" -> "ast_printer.h"
	"abstraction.cpp" -> "rewriter.h"
	"ext_theory.cpp" -> "smt_statistics_registry.h"
	"resolution_bitvector_proof.cpp" -> "theory_bv.h"
	"uninterpreted_constant.cpp" -> "uninterpreted_constant.h"
	"bv_subtheory_core.cpp" -> "ext_theory.h"
	"arithvar.h" -> "index.h"
	"theory_arith_private.h" -> "arith_rewriter.h"
	"tptp_input.cpp" -> "tptp.h"
	"dual_simplex.cpp" -> "constraint.h"
	"sygus_unif_strat.cpp" -> "term_util.h"
	"sygus_unif.h" -> "sygus_unif_strat.h"
	"theory_bool_rewriter.h" -> "rewriter.h"
	"command.cpp" -> "options.h"
	"theory_arith_private.h" -> "infer_bounds.h"
	"proof_manager.cpp" -> "proof.h"
	"tptp_printer.cpp" -> "language.h"
	"theory_strings_preprocess.h" -> "cdhashmap.h"
	"theory_arith_private.h" -> "delta_rational.h"
	"uf_proof.cpp" -> "simplify_boolean_node.h"
	"unsat_core.cpp" -> "printer.h"
	"unsat_core.cpp" -> "expr_iomanip.h"
	"preprocessing_pass.cpp" -> "preprocessing_pass.h"
	"language.cpp" -> "language.h"
	"sat_solver_factory.cpp" -> "minisat.h"
	"synth_conjecture.h" -> "sygus_grammar_cons.h"
	"options_handler.h" -> "theoryof_mode.h"
	"theory_sep.h" -> "equality_engine.h"
	"equality_query.cpp" -> "quantifiers_attributes.h"
	"theory_engine.h" -> "rewriter.h"
	"quantifier_macros.h" -> "node.h"
	"quantifiers_engine.cpp" -> "theory_uf_strong_solver.h"
	"theory_proof.cpp" -> "sat_proof.h"
	"synth_conjecture.h" -> "quantifiers_engine.h"
	"sat_proof.h" -> "statistics_registry.h"
	"regexp_elim.h" -> "node.h"
	"model_builder.cpp" -> "theory_engine.h"
	"bv_abstraction.h" -> "preprocessing_pass_context.h"
	"theory_strings.h" -> "equality_engine.h"
	"antlr_input.cpp" -> "antlr_input.h"
	"model_builder.h" -> "theory_uf_model.h"
	"theory_arith_private.h" -> "cdlist.h"
	"SimpSolver.h" -> "Queue.h"
	"kind_template.h" -> "exception.h"
	"tableau_sizes.h" -> "arithvar.h"
	"cddense_set.h" -> "context.h"
	"cvc4cpp.h" -> "cvc4cppkind.h"
	"inst_propagator.h" -> "instantiate.h"
	"apply_to_const.cpp" -> "rewriter.h"
	"portfolio_util.h" -> "lemma_output_channel.h"
	"expr_template.h" -> "exception.h"
	"candidate_rewrite_database.h" -> "expr_miner.h"
	"arith_proof.cpp" -> "arith_proof.h"
	"arith_ite_utils.cpp" -> "substitutions.h"
	"candidate_rewrite_database.cpp" -> "term_util.h"
	"synth_conjecture.cpp" -> "smt_engine_scope.h"
	"linear_equality.h" -> "tableau.h"
	"rewriter_attributes.h" -> "attribute.h"
	"expr_manager_template.cpp" -> "node_manager.h"
	"context_mm.cpp" -> "output.h"
	"type_enumerator.h" -> "theory_strings_rewriter.h"
	"model.cpp" -> "command_list.h"
	"ext_theory.h" -> "cdhashset.h"
	"type_enumerator.cpp" -> "type_enumerator.h"
	"sygus_enumerator.h" -> "type_node.h"
	"node_manager_listeners.cpp" -> "node_manager_listeners.h"
	"quantifiers_engine.cpp" -> "quant_epr.h"
	"apply_to_const.h" -> "node.h"
	"tableau.cpp" -> "tableau.h"
	"theory_arith_private.cpp" -> "dense_map.h"
	"tptp.cpp" -> "type.h"
	"datatypes_sygus.h" -> "synth_conjecture.h"
	"pickler.h" -> "variable_type_map.h"
	"statistics.h" -> "sexpr.h"
	"sat_proof_implementation.h" -> "smt_statistics_registry.h"
	"candidate_generator.cpp" -> "term_database.h"
	"substitutions.h" -> "node.h"
	"inst_match.h" -> "node.h"
	"ceg_arith_instantiator.cpp" -> "partial_model.h"
	"bv_inverter.cpp" -> "bv_inverter_utils.h"
	"Options.h" -> "IntTypes.h"
	"sygus_pbe.h" -> "sygus_unif_io.h"
	"array_proof.h" -> "theory_arrays.h"
	"symbol_table.h" -> "type.h"
	"inst_match.cpp" -> "quant_util.h"
	"theory_arith_private.h" -> "statistics_registry.h"
	"smt_engine.cpp" -> "proof_manager.h"
	"node.h" -> "set_language.h"
	"SolverTypes.h" -> "IntTypes.h"
	"substitutions.h" -> "context.h"
	"arith_msum.h" -> "node.h"
	"smt_engine.h" -> "cdhashmap_forward.h"
	"minisat.h" -> "SimpSolver.h"
	"preprocessing_pass_registry.cpp" -> "unconstrained_simplifier.h"
	"sygus_grammar_norm.h" -> "type_node.h"
	"inst_match.cpp" -> "instantiate.h"
	"sygus_pbe.h" -> "sygus_module.h"
	"statistics_registry.h" -> "exception.h"
	"smt_engine.cpp" -> "nary_builder.h"
	"quantifiers_engine.cpp" -> "instantiate.h"
	"attempt_solution_simplex.cpp" -> "output.h"
	"theory_arith_private.h" -> "result.h"
	"sygus_enumerator.cpp" -> "sygus_enumerator.h"
	"theory_bv_rewrite_rules_simplification.h" -> "theory_bv_rewrite_rules.h"
	"ce_guided_single_inv_sol.cpp" -> "term_database_sygus.h"
	"datatypes_sygus.cpp" -> "theory_datatypes.h"
	"sygus_sampler.h" -> "term_enumeration.h"
	"parser.cpp" -> "command.h"
	"quantifiers_engine.cpp" -> "conjecture_generator.h"
	"theory_sets_rels.cpp" -> "theory_sets_rels.h"
	"tableau_sizes.cpp" -> "tableau.h"
	"printer.h" -> "language.h"
	"quantifiers_engine.cpp" -> "theory_arrays.h"
	"lemma_proof.h" -> "sat_solver_types.h"
	"arith_ite_utils.cpp" -> "output.h"
	"sygus_grammar_cons.cpp" -> "datatypes_rewriter.h"
	"expr_iomanip.cpp" -> "options.h"
	"real_to_int.cpp" -> "theory_model.h"
	"bounded_integers.cpp" -> "model_engine.h"
	"bv_subtheory_core.cpp" -> "theory_model.h"
	"theory_bv_rewrite_rules_operator_elimination.h" -> "theory_bv_utils.h"
	"nonlinear_extension.h" -> "context.h"
	"fp_converter.h" -> "hash.h"
	"simplex.cpp" -> "simplex.h"
	"update_ostream.h" -> "expr_iomanip.h"
	"sexpr.cpp" -> "smt2_quote_string.h"
	"theory_model.h" -> "rep_set.h"
	"cut_log.h" -> "statistics_registry.h"
	"query_generator.h" -> "expr_miner.h"
	"ceg_instantiator.cpp" -> "term_util.h"
	"lemma_channels.cpp" -> "lemma_channels.h"
	"options_handler.cpp" -> "output.h"
	"smt2_input.cpp" -> "parser_exception.h"
	"main.cpp" -> "result.h"
	"theory_sep.cpp" -> "term_database.h"
	"sygus_unif_rl.cpp" -> "datatypes_rewriter.h"
	"theory_bv.h" -> "hash.h"
	"inst_strategy_e_matching.h" -> "statistics_registry.h"
	"options_handler.h" -> "arith_heuristic_pivot_rule.h"
	"first_order_model.cpp" -> "ambqi_builder.h"
	"SimpSolver.cc" -> "proof.h"
	"bv_to_bool.cpp" -> "rewriter.h"
	"theory_proof.cpp" -> "proof.h"
	"ffs.c" -> "ffs.h"
	"inst_match_trie.h" -> "node.h"
	"theory_idl.h" -> "idl_assertion_db.h"
	"smt_engine_scope.h" -> "node_manager.h"
	"ho_trigger.cpp" -> "equality_engine.h"
	"theory_datatypes.h" -> "hash.h"
	"normal_form.h" -> "node_self_iterator.h"
	"expr_manager_template.h" -> "statistics.h"
	"smt_engine.h" -> "logic_info.h"
	"node_manager.h" -> "type_node.h"
	"equality_engine.cpp" -> "equality_engine.h"
	"synth_conjecture.cpp" -> "quantifiers_attributes.h"
	"local_theory_ext.h" -> "quantifiers_engine.h"
	"preprocessing_pass_context.h" -> "resource_manager.h"
	"smt_engine.cpp" -> "single_inv_partition.h"
	"ecdata.h" -> "context.h"
	"node_value.h" -> "language.h"
	"prop_engine.cpp" -> "sat_solver_factory.h"
	"attribute.h" -> "type_node.h"
	"parser_builder.cpp" -> "parser.h"
	"smt2_printer.h" -> "printer.h"
	"bounded_integers.h" -> "context.h"
	"static_learning.cpp" -> "static_learning.h"
	"open_ostream.cpp" -> "strtok_r.h"
	"theory_sep_rewriter.cpp" -> "attribute.h"
	"command.cpp" -> "smt_engine.h"
	"uf_proof.h" -> "proof.h"
	"smt1.cpp" -> "cvc4cpp.h"
	"Vec.h" -> "XAlloc.h"
	"proof_manager.cpp" -> "output_channel.h"
	"sygus_unif_strat.h" -> "quantifiers_engine.h"
	"proof_manager.cpp" -> "proof_manager.h"
	"prop_engine.cpp" -> "command.h"
	"interactive_shell.cpp" -> "logic_info.h"
	"theory_arith_private.h" -> "rewriter.h"
	"theory_uf.cpp" -> "theory_model.h"
	"nary_builder.cpp" -> "nary_builder.h"
	"theory_arith_private.cpp" -> "partial_model.h"
	"fp_converter.h" -> "type.h"
	"sygus_grammar_norm.h" -> "node.h"
	"theory_arith_private.cpp" -> "cdhashset.h"
	"options_handler.cpp" -> "modal_exception.h"
	"sygus_unif_rl.h" -> "lazy_trie.h"
	"bv_gauss.h" -> "preprocessing_pass_context.h"
	"sygus_print_callback.h" -> "datatype.h"
	"sat_proof.h" -> "cdmaybe.h"
	"node_value.h" -> "type_node.h"
	"cdtrail_queue.h" -> "context.h"
	"command.cpp" -> "output.h"
	"ceg_arith_instantiator.cpp" -> "theory_arith_private.h"
	"type_node.h" -> "cvc4_assert.h"
	"bool_to_bv.cpp" -> "node.h"
	"trigger.h" -> "inst_match.h"
	"sygus_print_callback.cpp" -> "printer.h"
	"theory_strings_preprocess.h" -> "rewriter.h"
	"tptp_printer.h" -> "printer.h"
	"soi_simplex.cpp" -> "statistics_registry.h"
	"quant_epr.h" -> "node.h"
	"theory_arith_private.cpp" -> "rewriter.h"
	"full_model_check.h" -> "model_builder.h"
	"expr_miner_manager.cpp" -> "quantifiers_engine.h"
	"cvc4cpp.cpp" -> "options.h"
	"sygus_pbe.h" -> "cdhashmap.h"
	"theory_quantifiers.cpp" -> "quantifiers_attributes.h"
	"options_public_functions.cpp" -> "language.h"
	"sygus_sampler.cpp" -> "sampler.h"
	"theory_sets.h" -> "theory.h"
	"inst_propagator.h" -> "term_database.h"
	"synth_rew_rules.cpp" -> "term_util.h"
	"union_find.cpp" -> "cvc4_assert.h"
	"bitvector_proof.h" -> "cnf_proof.h"
	"Solver.h" -> "Options.h"
	"Solver.cc" -> "clause_id.h"
	"candidate_rewrite_database.cpp" -> "printer.h"
	"real_to_int.h" -> "preprocessing_pass_context.h"
	"node_self_iterator.h" -> "node.h"
	"System.cc" -> "System.h"
	"sat_proof.h" -> "proof.h"
	"smt_engine.cpp" -> "context.h"
	"node_manager.cpp" -> "node_manager_attributes.h"
	"ce_guided_single_inv_sol.cpp" -> "trigger.h"
	"eager_bitblaster.cpp" -> "theory_bv.h"
	"array_store_all.cpp" -> "array_store_all.h"
	"prop_engine.cpp" -> "theory_engine.h"
	"nonlinear_extension.h" -> "theory_arith.h"
	"pickle_data.cpp" -> "variable_type_map.h"
	"smt1_input.cpp" -> "parser.h"
	"sygus_enumerator.h" -> "node.h"
	"main.h" -> "statistics.h"
	"dynamic_rewrite.cpp" -> "dynamic_rewrite.h"
	"candidate_rewrite_filter.cpp" -> "printer.h"
	"cardinality.cpp" -> "cvc4_assert.h"
	"statistics_registry.cpp" -> "ostream_util.h"
	"equality_infer.h" -> "cdhashmap.h"
	"safe_print.h" -> "clock_gettime.h"
	"theory_bv.cpp" -> "bv_subtheory_core.h"
	"decision_engine.h" -> "assertion_pipeline.h"
	"antlr_input.cpp" -> "parser.h"
	"term_enumeration.cpp" -> "term_util.h"
	"candidate_rewrite_database.cpp" -> "candidate_rewrite_database.h"
	"cdtrail_queue.h" -> "cdlist.h"
	"ce_guided_single_inv_sol.h" -> "quantifiers_engine.h"
	"inst_strategy_cegqi.cpp" -> "term_util.h"
	"SimpSolver.cc" -> "SimpSolver.h"
	"Solver.cc" -> "theory_proxy.h"
	"synth_engine.cpp" -> "synth_engine.h"
	"result.cpp" -> "cvc4_assert.h"
	"matcher.h" -> "node.h"
	"candidate_rewrite_filter.h" -> "term_database_sygus.h"
	"ceg_bv_instantiator_utils.cpp" -> "ceg_bv_instantiator_utils.h"
	"bv_subtheory_core.cpp" -> "theory_bv_utils.h"
	"theory_engine.cpp" -> "proof_manager.h"
	"ite_removal.cpp" -> "rewriter.h"
	"synth_conjecture.cpp" -> "datatypes_rewriter.h"
	"antlr_line_buffered_input.cpp" -> "output.h"
	"array.h" -> "type.h"
	"sygus_repair_const.cpp" -> "printer.h"
	"sat_solver.h" -> "bv_sat_solver_notify.h"
	"simplex.h" -> "error_set.h"
	"options_handler.h" -> "datatypes_modes.h"
	"theory_registrar.h" -> "theory_engine.h"
	"SimpSolver.h" -> "clause_id.h"
	"cdhashset.h" -> "context.h"
	"sygus_process_conj.cpp" -> "datatypes_rewriter.h"
	"ceg_instantiator.cpp" -> "ceg_arith_instantiator.h"
	"sygus_unif_rl.cpp" -> "sygus_unif_rl.h"
	"theory_proof.cpp" -> "proof_output_channel.h"
	"eager_bitblaster.cpp" -> "eager_bitblaster.h"
	"printer_modes.cpp" -> "printer_modes.h"
	"tableau.h" -> "dense_map.h"
	"bv_inequality_graph.h" -> "theory.h"
	"Main.cc" -> "SimpSolver.h"
	"theory_datatypes_type_rules.h" -> "matcher.h"
	"theory_sets.cpp" -> "theory_sets.h"
	"idl_assertion.h" -> "idl_model.h"
	"substitutions.h" -> "cdhashmap.h"
	"listener.cpp" -> "listener.h"
	"cddense_set.h" -> "cdlist.h"
	"type_enumerator.h" -> "cvc4_assert.h"
	"cvc_printer.cpp" -> "node_visitor.h"
	"inst_strategy_enumerative.cpp" -> "term_database.h"
	"anti_skolem.h" -> "cdo.h"
	"sygus_grammar_norm.cpp" -> "sygus_grammar_norm.h"
	"datatypes_sygus.cpp" -> "printer.h"
	"cddense_set.h" -> "index.h"
	"divisible.cpp" -> "cvc4_assert.h"
	"printer.cpp" -> "tptp_printer.h"
	"lfsc_proof_printer.cpp" -> "lfsc_proof_printer.h"
	"equality_query.h" -> "node.h"
	"ast_printer.cpp" -> "dagification_visitor.h"
	"skolemize.cpp" -> "skolemize.h"
	"node.cpp" -> "exception.h"
	"smt1_input.cpp" -> "input.h"
	"linear_equality.cpp" -> "smt_statistics_registry.h"
	"arith_static_learner.cpp" -> "normal_form.h"
	"preprocessing_pass_registry.cpp" -> "miplib_trick.h"
	"symmetry_breaker.h" -> "context.h"
	"sygus_grammar_red.cpp" -> "sygus_grammar_red.h"
	"theory_strings_rewriter.cpp" -> "theory_strings_rewriter.h"
	"theory_strings.h" -> "theory_strings_preprocess.h"
	"theory_arith_private.cpp" -> "output.h"
	"ast_printer.cpp" -> "ast_printer.h"
	"antlr_input.cpp" -> "bounded_token_factory.h"
	"term_database.cpp" -> "term_database.h"
	"assertion.h" -> "node.h"
	"attempt_solution_simplex.h" -> "statistics_registry.h"
	"dual_simplex.h" -> "simplex.h"
	"theory_engine.cpp" -> "theory_proof.h"
	"interrupted.h" -> "exception.h"
	"ce_guided_single_inv.cpp" -> "ce_guided_single_inv.h"
	"bv_subtheory_bitblast.cpp" -> "lazy_bitblaster.h"
	"theory_builtin_type_rules.h" -> "node.h"
	"regexp_elim.cpp" -> "theory_strings_rewriter.h"
	"term_database_sygus.cpp" -> "quantifiers_engine.h"
	"cryptominisat.cpp" -> "clause_id.h"
	"lemma_proof.h" -> "clause_id.h"
	"quant_util.cpp" -> "term_database.h"
	"dump.cpp" -> "output.h"
	"quant_epr.cpp" -> "quant_util.h"
	"sygus_grammar_cons.cpp" -> "term_util.h"
	"bv_abstraction.cpp" -> "theory_bv.h"
	"term_database.h" -> "type_enumerator.h"
	"datatype.cpp" -> "type.h"
	"smt_modes.cpp" -> "smt_modes.h"
	"synth_rew_rules.cpp" -> "sygus_print_callback.h"
	"theory_fp_rewriter.cpp" -> "theory_fp_rewriter.h"
	"expr_miner_manager.h" -> "solution_filter.h"
	"rewrite_engine.h" -> "trigger.h"
	"update_ostream.h" -> "set_language.h"
	"boolean_simplification.h" -> "node.h"
	"node_manager.h" -> "node_value.h"
	"constraint.h" -> "configuration_private.h"
	"inst_strategy_e_matching.h" -> "context.h"
	"logic_request.cpp" -> "logic_request.h"
	"bv_gauss.cpp" -> "bitvector.h"
	"bv_subtheory_bitblast.cpp" -> "decision_attributes.h"
	"lazy_bitblaster.h" -> "bv_sat_solver_notify.h"
	"tptp_printer.cpp" -> "smt_engine.h"
	"ho_trigger.h" -> "inst_match.h"
	"theory_strings.cpp" -> "rewriter.h"
	"simplex.h" -> "tableau.h"
	"bv_subtheory_inequality.cpp" -> "theory_bv.h"
	"theory_bv_rewrite_rules_normalization.h" -> "theory_bv_rewrite_rules.h"
	"datatype.cpp" -> "matcher.h"
	"options_template.cpp" -> "didyoumean.h"
	"circuit_propagator.h" -> "context.h"
	"model_engine.cpp" -> "theory_engine.h"
	"module_template.h" -> "options.h"
	"model_builder.cpp" -> "term_database.h"
	"theory_preprocess.h" -> "preprocessing_pass_context.h"
	"smt_engine.cpp" -> "cdhashset.h"
	"symbol_table.h" -> "exception.h"
	"sygus_unif_io.cpp" -> "sygus_unif_io.h"
	"statistics.cpp" -> "statistics.h"
	"nary_builder.h" -> "node.h"
	"smt1_input.cpp" -> "smt1_input.h"
	"ceg_bv_instantiator_utils.cpp" -> "theory_bv_utils.h"
	"trigger.cpp" -> "node_algorithm.h"
	"model_core_builder.cpp" -> "subs_minimize.h"
	"miplib_trick.h" -> "preprocessing_pass.h"
	"theory_sep.cpp" -> "valuation.h"
	"theory_uf_strong_solver.cpp" -> "theory_uf.h"
	"theory_engine.cpp" -> "decision_engine.h"
	"bv_subtheory_inequality.h" -> "bv_inequality_graph.h"
	"sygus_unif_strat.cpp" -> "term_database_sygus.h"
	"bv_inverter.cpp" -> "rewriter.h"
	"theory_arith_private.h" -> "fc_simplex.h"
	"static_learning.h" -> "preprocessing_pass_context.h"
	"cvc4_check.cpp" -> "cvc4_check.h"
	"sygus_process_conj.cpp" -> "sygus_process_conj.h"
	"theory_arrays_rewriter.cpp" -> "theory_arrays_rewriter.h"
	"expr_template.h" -> "language.h"
	"cut_log.cpp" -> "constraint.h"
	"bv_subtheory_algebraic.h" -> "slicer.h"
	"constraint.h" -> "node.h"
	"node_manager.cpp" -> "statistics_registry.h"
	"sygus_eval_unfold.h" -> "node.h"
	"smt2.cpp" -> "parser.h"
	"quantifiers_engine.cpp" -> "local_theory_ext.h"
	"theory_bv_rewrite_rules_operator_elimination.h" -> "theory_bv_rewrite_rules.h"
	"matcher.h" -> "type_node.h"
	"array_proof_reconstruction.cpp" -> "array_proof_reconstruction.h"
	"sygus_inference.cpp" -> "sygus_inference.h"
	"quantifier_macros.cpp" -> "smt_engine_scope.h"
	"decision_strategy.h" -> "cdo.h"
	"inst_match_generator.cpp" -> "inst_match_generator.h"
	"ceg_bv_instantiator.cpp" -> "random.h"
	"preprocessing_pass_registry.cpp" -> "bv_eager_atoms.h"
	"smt_statistics_registry.cpp" -> "smt_statistics_registry.h"
	"error_set.h" -> "delta_rational.h"
	"nonlinear_extension.cpp" -> "theory_model.h"
	"decision_strategy.h" -> "node.h"
	"slicer.h" -> "theory_bv_utils.h"
	"bv_eager_solver.h" -> "theory_bv.h"
	"type.cpp" -> "node_manager.h"
	"expr_manager_scope.h" -> "node_manager.h"
	"term_enumeration.cpp" -> "rewriter.h"
	"Alg.h" -> "Vec.h"
	"solution_filter.h" -> "sygus_sampler.h"
	"quantifiers_engine.cpp" -> "full_model_check.h"
	"options_public_functions.cpp" -> "listener.h"
	"attempt_solution_simplex.cpp" -> "constraint.h"
	"pseudo_boolean_processor.cpp" -> "arith_utilities.h"
	"smt2_printer.cpp" -> "theory_model.h"
	"options_template.cpp" -> "output.h"
	"cnf_stream.cpp" -> "cnf_stream.h"
	"array_proof_reconstruction.h" -> "equality_engine.h"
	"minisat.h" -> "statistics_registry.h"
	"parser.h" -> "expr_stream.h"
	"datatypes_sygus.cpp" -> "node_manager.h"
	"theory_arith_private.cpp" -> "congruence_manager.h"
	"theory_bv_rewrite_rules.h" -> "context.h"
	"ce_guided_single_inv_sol.cpp" -> "quantifiers_attributes.h"
	"theory_sets.cpp" -> "theory_sets_private.h"
	"congruence_manager.h" -> "constraint_forward.h"
	"minisat.cpp" -> "minisat.h"
	"atom_requests.cpp" -> "atom_requests.h"
	"options_handler.h" -> "arith_unate_lemma_mode.h"
	"sat_proof_implementation.h" -> "sat_proof.h"
	"synth_rew_rules.cpp" -> "candidate_rewrite_database.h"
	"theory_engine.cpp" -> "quantifiers_engine.h"
	"theory_engine.h" -> "substitutions.h"
	"theory_arith_private.cpp" -> "theory_model.h"
	"theory_engine.cpp" -> "node_visitor.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules_normalization.h"
	"smt1_input.cpp" -> "parser_exception.h"
	"theory.h" -> "options.h"
	"theory_arith_private.cpp" -> "node.h"
	"options.h" -> "language.h"
	"assertion_pipeline.cpp" -> "node_manager.h"
	"pickle_data.h" -> "node.h"
	"term_formula_removal.cpp" -> "node_algorithm.h"
	"congruence_manager.h" -> "cdmaybe.h"
	"type_enumerator.h" -> "type_node.h"
	"model_builder.cpp" -> "model_engine.h"
	"Alloc.h" -> "XAlloc.h"
	"trigger.cpp" -> "inst_match_generator.h"
	"attempt_solution_simplex.cpp" -> "attempt_solution_simplex.h"
	"symmetry_breaker.h" -> "preprocessing_pass_context.h"
	"integer_gmp_imp.h" -> "exception.h"
	"ecdata.h" -> "context_mm.h"
	"expr_miner_manager.h" -> "node.h"
	"arith_static_learner.cpp" -> "node_algorithm.h"
	"conjecture_generator.cpp" -> "conjecture_generator.h"
	"smt_engine.cpp" -> "printer.h"
	"theory_uf_strong_solver.h" -> "context.h"
	"uf_proof.h" -> "equality_engine.h"
	"inst_match_generator.cpp" -> "datatype.h"
	"theory_arith_private.cpp" -> "arith_utilities.h"
	"circuit_propagator.cpp" -> "utility.h"
	"dense_map.h" -> "index.h"
	"bv_subtheory_algebraic.cpp" -> "bv_subtheory_algebraic.h"
	"minisat.h" -> "sat_solver.h"
	"synth_conjecture.h" -> "cegis.h"
	"ostream_util.cpp" -> "ostream_util.h"
	"ceg_bv_instantiator.cpp" -> "theory_bv_utils.h"
	"proof_output_channel.cpp" -> "term_registration_visitor.h"
	"statistics_registry.cpp" -> "cvc4_assert.h"
	"preprocessing_pass_registry.cpp" -> "preprocessing_pass.h"
	"inst_strategy_cegqi.cpp" -> "term_database.h"
	"option_exception.cpp" -> "option_exception.h"
	"quant_util.h" -> "equality_engine.h"
	"full_model_check.h" -> "first_order_model.h"
	"theory_builtin.cpp" -> "valuation.h"
	"node.h" -> "node_value.h"
	"inst_strategy_cegqi.cpp" -> "partial_model.h"
	"ite_utilities.h" -> "node.h"
	"partial_model.cpp" -> "output.h"
	"equality_query.cpp" -> "term_util.h"
	"term_registration_visitor.cpp" -> "theory_engine.h"
	"sep_skolem_emp.cpp" -> "rewriter.h"
	"bitblast_strategies_template.h" -> "bitblast_utils.h"
	"sexpr.cpp" -> "ostream_util.h"
	"pseudo_boolean_processor.h" -> "node.h"
	"ce_guided_single_inv.cpp" -> "arith_msum.h"
	"theory.h" -> "logic_info.h"
	"emptyset.cpp" -> "emptyset.h"
	"sygus_enumerator.h" -> "synth_conjecture.h"
	"theory_engine.cpp" -> "theory_engine.h"
	"ce_guided_single_inv_sol.h" -> "cdhashmap.h"
	"instantiate.cpp" -> "quantifiers_rewriter.h"
	"theory_arith_private.h" -> "simplex.h"
	"symmetry_breaker.h" -> "smt_statistics_registry.h"
	"System.h" -> "IntTypes.h"
	"options_handler.h" -> "base_handlers.h"
	"cdinsert_hashmap.h" -> "output.h"
	"theory_quantifiers.cpp" -> "valuation.h"
	"theory_fp_rewriter.cpp" -> "fp_converter.h"
	"quant_util.cpp" -> "quantifiers_engine.h"
	"command_executor.cpp" -> "command_executor.h"
	"equality_infer.h" -> "context.h"
	"lazy_trie.cpp" -> "lazy_trie.h"
	"quantifiers_rewriter.cpp" -> "quantifiers_attributes.h"
	"cvc4_private_library.h" -> "cvc4_public.h"
	"inst_strategy_enumerative.h" -> "quantifiers_engine.h"
	"cegis.cpp" -> "synth_conjecture.h"
	"assertion_pipeline.cpp" -> "proof_manager.h"
	"model_builder.h" -> "theory_model_builder.h"
	"bv_ackermann.cpp" -> "bv_ackermann.h"
	"evaluator.cpp" -> "theory_bv_utils.h"
	"command_executor_portfolio.cpp" -> "set_language.h"
	"matrix.h" -> "arithvar.h"
	"theory_proof.cpp" -> "theory_bv.h"
	"bv_gauss.cpp" -> "theory_bv_utils.h"
	"node.h" -> "expr_iomanip.h"
	"cvc_printer.cpp" -> "theory_model.h"
	"cnf_stream.cpp" -> "theory.h"
	"pickler.cpp" -> "variable_type_map.h"
	"pickle_data.cpp" -> "node.h"
	"theory_strings.h" -> "cdlist.h"
	"command_executor_portfolio.cpp" -> "command.h"
	"theory_bv.h" -> "theory_bv_utils.h"
	"sort_inference.cpp" -> "sort_inference.h"
	"smt_engine.cpp" -> "fun_def_process.h"
	"justification_heuristic.h" -> "node.h"
	"statistics.cpp" -> "safe_print.h"
	"bv_subtheory_core.h" -> "bv_subtheory.h"
	"node.h" -> "node_manager.h"
	"type_node.h" -> "node_manager.h"
	"query_generator.h" -> "sygus_sampler.h"
	"preprocessing_pass_registry.cpp" -> "bv_intro_pow2.h"
	"listener.cpp" -> "cvc4_assert.h"
	"trigger.cpp" -> "trigger.h"
	"type_enumerator.h" -> "bitvector.h"
	"theory.h" -> "logic_request.h"
	"trigger.cpp" -> "ho_trigger.h"
	"input.h" -> "parser_exception.h"
	"node_manager_listeners.h" -> "listener.h"
	"bitvector_proof.cpp" -> "bitblaster.h"
	"linear_equality.h" -> "arithvar.h"
	"inst_strategy_e_matching.cpp" -> "inst_strategy_e_matching.h"
	"extended_rewrite.cpp" -> "rewriter.h"
	"options_public_functions.cpp" -> "modal_exception.h"
	"smt_engine.cpp" -> "circuit_propagator.h"
	"result.h" -> "language.h"
	"Solver.h" -> "context.h"
	"uf_proof.h" -> "theory_proof.h"
	"rational_gmp_imp.h" -> "maybe.h"
	"theory_builtin_rewriter.cpp" -> "node_algorithm.h"
	"quantifiers_engine.cpp" -> "instantiation_engine.h"
	"substitutions.h" -> "hash.h"
	"atom_requests.h" -> "cdhashset.h"
	"theory_test_utils.h" -> "proof.h"
	"term_formula_removal.h" -> "hash.h"
	"cdinsert_hashmap.h" -> "cvc4_assert.h"
	"node_manager.cpp" -> "options.h"
	"conjecture_generator.cpp" -> "term_enumeration.h"
	"sygus_unif_rl.cpp" -> "random.h"
	"parser_builder.cpp" -> "cvc4cpp.h"
	"lemma_proof.h" -> "node.h"
	"proof_manager.cpp" -> "theory_proof.h"
	"theory_uf_strong_solver.cpp" -> "equality_engine.h"
	"first_order_model.cpp" -> "quantifiers_attributes.h"
	"ast_printer.cpp" -> "node_manager_attributes.h"
	"approx_simplex.cpp" -> "cut_log.h"
	"theory.cpp" -> "theory.h"
	"smt_engine.h" -> "statistics.h"
	"synth_engine.cpp" -> "smt_engine_scope.h"
	"printer.cpp" -> "smt2_printer.h"
	"ceg_instantiator.cpp" -> "ceg_instantiator.h"
	"anti_skolem.cpp" -> "quantifiers_engine.h"
	"trigger.cpp" -> "equality_engine.h"
	"theory_bv.cpp" -> "abstraction.h"
	"ceg_arith_instantiator.cpp" -> "node_algorithm.h"
	"bvminisat.cpp" -> "sat_proof.h"
	"datatypes_sygus.cpp" -> "datatypes_rewriter.h"
	"quantifiers_rewriter.h" -> "rewriter.h"
	"synth_conjecture.cpp" -> "theory_engine.h"
	"quant_relevance.h" -> "quant_util.h"
	"ceg_bv_instantiator_utils.h" -> "attribute.h"
	"datatypes_sygus.cpp" -> "term_util.h"
	"nl_ext_purify.h" -> "preprocessing_pass_context.h"
	"synth_engine.h" -> "quantifiers_engine.h"
	"symmetry_breaker.h" -> "node.h"
	"ext_theory.h" -> "context.h"
	"sygus_module.h" -> "quantifiers_engine.h"
	"infer_bounds.h" -> "delta_rational.h"
	"theory_idl.h" -> "theory.h"
	"term_database.cpp" -> "term_util.h"
	"preprocessing_pass_registry.cpp" -> "theory_preprocess.h"
	"lazy_bitblaster.cpp" -> "rewriter.h"
	"skolemize.h" -> "quant_util.h"
	"aig_bitblaster.cpp" -> "smt_statistics_registry.h"
	"node_manager_attributes.h" -> "attribute.h"
	"error_set.h" -> "callbacks.h"
	"theory_proof.cpp" -> "resolution_bitvector_proof.h"
	"resource_manager.cpp" -> "resource_manager.h"
	"cvc4cpp.cpp" -> "smt_engine.h"
	"bv_subtheory.h" -> "cdqueue.h"
	"theory_uf_tim.h" -> "context.h"
	"theory.cpp" -> "smt_statistics_registry.h"
	"theory_preprocess.cpp" -> "theory_preprocess.h"
	"smt_engine.cpp" -> "theory_model.h"
	"Solver.cc" -> "Sort.h"
	"ambqi_builder.cpp" -> "term_database.h"
	"rep_set.cpp" -> "rep_set.h"
	"datatypes_sygus.h" -> "sygus_explain.h"
	"theory_quantifiers.h" -> "theory_engine.h"
	"bv_quick_check.cpp" -> "smt_statistics_registry.h"
	"aig_bitblaster.h" -> "sat_solver.h"
	"type_node.cpp" -> "node_manager_attributes.h"
	"theory_sep.cpp" -> "map_util.h"
	"nl_ext_purify.h" -> "preprocessing_pass.h"
	"theory_sep.h" -> "statistics_registry.h"
	"main.cpp" -> "main.h"
	"argument_extender_implementation.cpp" -> "output.h"
	"theory_quantifiers.cpp" -> "instantiation_engine.h"
	"theory_uf_model.cpp" -> "equality_engine.h"
	"sygus_unif.cpp" -> "term_database_sygus.h"
	"abstraction.h" -> "node.h"
	"enum_stream_substitution.cpp" -> "printer.h"
	"theory_proof.cpp" -> "theory_uf.h"
	"smt2_input.cpp" -> "smt2_input.h"
	"dump.h" -> "command.h"
	"theory.h" -> "node.h"
	"bounded_integers.cpp" -> "first_order_model.h"
	"theory_model.cpp" -> "smt_engine.h"
	"synth_engine.cpp" -> "smt_engine.h"
	"proof_manager.cpp" -> "resolution_bitvector_proof.h"
	"proof_manager.h" -> "clause_id.h"
	"sort_infer.h" -> "preprocessing_pass_context.h"
	"smt2_printer.cpp" -> "quantifiers_attributes.h"
	"cvc_printer.h" -> "printer.h"
	"theory_engine.h" -> "interrupted.h"
	"theory_bv.cpp" -> "slicer.h"
	"model_builder.h" -> "quantifiers_engine.h"
	"ite_utilities.h" -> "statistics_registry.h"
	"sygus_grammar_red.h" -> "quantifiers_engine.h"
	"bv_eager_solver.cpp" -> "aig_bitblaster.h"
	"quantifiers_engine.cpp" -> "theory_engine.h"
	"lfsc_proof_printer.h" -> "proof_manager.h"
	"type_properties_template.h" -> "type_node.h"
	"antlr_input.h" -> "output.h"
	"theory_arith_private.h" -> "congruence_manager.h"
	"sat_solver_factory.cpp" -> "cadical.h"
	"exception.cpp" -> "cvc4_assert.h"
	"theory_engine.cpp" -> "care_graph.h"
	"inst_strategy_cegqi.cpp" -> "quantifiers_attributes.h"
	"resolution_bitvector_proof.cpp" -> "theory_bv_rewrite_rules.h"
	"smt1.cpp" -> "type.h"
	"bitvector_proof.cpp" -> "bitvector_proof.h"
	"quant_split.cpp" -> "term_database.h"
	"bv_subtheory_algebraic.h" -> "substitutions.h"
	"apply_substs.cpp" -> "apply_substs.h"
	"theory_proxy.h" -> "cdqueue.h"
	"smt_engine.cpp" -> "node_builder.h"
	"datatypes_rewriter.cpp" -> "datatypes_rewriter.h"
	"bv_intro_pow2.h" -> "preprocessing_pass_context.h"
	"quantifier_macros.h" -> "type_node.h"
	"theory_arith_private.h" -> "linear_equality.h"
	"context_mm.cpp" -> "context_mm.h"
	"cryptominisat.cpp" -> "cryptominisat.h"
	"theory_engine.h" -> "statistics_registry.h"
	"dump.cpp" -> "strtok_r.h"
	"solution_filter.cpp" -> "random.h"
	"sat_solver_factory.h" -> "sat_solver.h"
	"theory_sets_type_enumerator.h" -> "type_node.h"
	"instantiation_engine.cpp" -> "theory_engine.h"
	"ce_guided_single_inv.h" -> "single_inv_partition.h"
	"theory_arrays.h" -> "cdhashset.h"
	"ambqi_builder.cpp" -> "instantiate.h"
	"proof_output_channel.h" -> "node.h"
	"printer.cpp" -> "printer.h"
	"type_enumerator.h" -> "regexp.h"
	"arith_rewriter.h" -> "rewriter.h"
	"bv_abstraction.cpp" -> "rewriter.h"
	"theory_fp.cpp" -> "theory_fp.h"
	"ho_trigger.cpp" -> "hash.h"
	"callbacks.cpp" -> "theory_arith_private.h"
	"constraint.cpp" -> "output.h"
	"quant_split.h" -> "cdo.h"
	"sygus_inference.h" -> "preprocessing_pass.h"
	"unconstrained_simplifier.cpp" -> "logic_info.h"
	"synth_conjecture.cpp" -> "synth_conjecture.h"
	"sygus_repair_const.cpp" -> "smt_engine_scope.h"
	"datatype.cpp" -> "node.h"
	"sygus_pbe.cpp" -> "random.h"
	"portfolio_util.h" -> "smt_engine.h"
	"theory_arith_private.cpp" -> "arith_ite_utils.h"
	"model_engine.h" -> "theory_model.h"
	"map_util.h" -> "cvc4_check.h"
	"bv_quick_check.h" -> "theory_bv_utils.h"
	"theory.h" -> "statistics_registry.h"
	"sygus_grammar_cons.cpp" -> "theory_bv_utils.h"
	"solution_filter.h" -> "expr_miner.h"
	"instantiation_engine.cpp" -> "term_util.h"
	"symbol_table.cpp" -> "type.h"
	"theory_arrays_type_rules.h" -> "theory_arrays_rewriter.h"
	"unconstrained_simplifier.cpp" -> "smt_statistics_registry.h"
	"sort_inference.h" -> "type_node.h"
	"quantifiers_attributes.cpp" -> "synth_engine.h"
	"node.cpp" -> "output.h"
	"decision_engine.h" -> "smt_engine_scope.h"
	"sygus_unif_io.cpp" -> "random.h"
	"miplib_trick.cpp" -> "theory_model.h"
	"sygus_inference.cpp" -> "smt_statistics_registry.h"
	"rewrite_engine.h" -> "quant_conflict_find.h"
	"resolution_bitvector_proof.cpp" -> "resolution_bitvector_proof.h"
	"interactive_shell.cpp" -> "parser.h"
	"ite_simp.cpp" -> "smt_statistics_registry.h"
	"node_builder.h" -> "node.h"
	"circuit_propagator.h" -> "node.h"
	"ce_guided_single_inv.h" -> "inst_match_trie.h"
	"pseudo_boolean_processor.cpp" -> "pseudo_boolean_processor.h"
	"SimpSolver.h" -> "context.h"
	"theory_arrays_type_rules.h" -> "type_enumerator.h"
	"quantifiers_preprocess.cpp" -> "output.h"
	"sygus_sampler.cpp" -> "random.h"
	"congruence_manager.h" -> "arithvar.h"
	"evaluator.cpp" -> "theory.h"
	"command.cpp" -> "node.h"
	"theory_strings.h" -> "skolem_cache.h"
	"single_inv_partition.cpp" -> "single_inv_partition.h"
	"normal_form.cpp" -> "normal_form.h"
	"options_public_functions.cpp" -> "option_exception.h"
	"theory_proxy.h" -> "theory.h"
	"constraint.h" -> "cdlist.h"
	"relevant_domain.h" -> "quant_util.h"
	"theory_arith_private.h" -> "soi_simplex.h"
	"unsat_core.cpp" -> "smt_engine_scope.h"
	"resolution_bitvector_proof.cpp" -> "bvminisat.h"
	"expr_template.cpp" -> "node.h"
	"bool_to_bv.h" -> "bv_to_bool.h"
	"bv_inverter.cpp" -> "bv_inverter.h"
	"antlr_input.cpp" -> "sygus_input.h"
	"candidate_rewrite_database.cpp" -> "smt_engine.h"
	"inst_strategy_e_matching.cpp" -> "quantifiers_attributes.h"
	"command_list.cpp" -> "smt_engine.h"
	"smt_engine.cpp" -> "modal_exception.h"
	"synth_conjecture.cpp" -> "smt_statistics_registry.h"
	"theory_arrays.cpp" -> "theory_arrays.h"
	"theory_engine.h" -> "lemma_channels.h"
	"sexpr.h" -> "language.h"
	"ceg_bv_instantiator_utils.h" -> "node.h"
	"substitutions.cpp" -> "substitutions.h"
	"theory_arith_private.cpp" -> "theory_arith_private.h"
	"cegis_unif.cpp" -> "sygus_unif_rl.h"
	"quantifiers_engine.cpp" -> "bv_inverter.h"
	"quantifiers_preprocess.cpp" -> "quantifiers_preprocess.h"
	"parser_exception.h" -> "exception.h"
	"miplib_trick.h" -> "preprocessing_pass_context.h"
	"parser.cpp" -> "options.h"
	"assertion_pipeline.cpp" -> "proof.h"
	"lemma_proof.cpp" -> "lemma_proof.h"
	"rewrite_engine.cpp" -> "quant_conflict_find.h"
	"theory_uf_strong_solver.h" -> "statistics_registry.h"
	"parser.cpp" -> "expr_iomanip.h"
	"model_engine.cpp" -> "theory_uf.h"
	"Main.cc" -> "ParseUtils.h"
	"options_template.cpp" -> "argument_extender_implementation.h"
	"printer.cpp" -> "cvc_printer.h"
	"full_model_check.cpp" -> "term_util.h"
	"smt2_printer.cpp" -> "theory_arrays_rewriter.h"
	"quant_epr.cpp" -> "quant_epr.h"
	"options_handler.h" -> "printer_modes.h"
	"uninterpreted_constant.h" -> "type.h"
	"simplex.h" -> "arithvar.h"
	"circuit_propagator.cpp" -> "node_algorithm.h"
	"arith_ite_utils.h" -> "cdinsert_hashmap.h"
	"justification_heuristic.h" -> "decision_strategy.h"
	"theory_arith_private.h" -> "dense_map.h"
	"quantifier_macros.cpp" -> "term_util.h"
	"rewriter_tables_template.h" -> "rewriter_attributes.h"
	"solution_filter.cpp" -> "smt_engine_scope.h"
	"options_template.cpp" -> "exception.h"
	"eager_bitblaster.cpp" -> "theory_model.h"
	"Solver.cc" -> "output.h"
	"theory.cpp" -> "cvc4_assert.h"
	"inst_strategy_e_matching.cpp" -> "random.h"
	"main.h" -> "options.h"
	"term_database_sygus.cpp" -> "term_database.h"
	"theory_preprocess.cpp" -> "theory_engine.h"
	"proof_output_channel.h" -> "proof.h"
	"rewrite_engine.cpp" -> "term_util.h"
	"smt_engine.h" -> "sexpr.h"
	"fc_simplex.h" -> "statistics_registry.h"
	"node_value.h" -> "node_manager.h"
	"first_order_model.h" -> "attribute.h"
	"query_generator.h" -> "node.h"
	"equality_engine.h" -> "equality_engine_types.h"
	"skolem_cache.cpp" -> "rewriter.h"
	"array_proof.cpp" -> "simplify_boolean_node.h"
	"justification_heuristic.cpp" -> "term_formula_removal.h"
	"driver_unified.cpp" -> "expr_iomanip.h"
	"sygus_repair_const.h" -> "quantifiers_engine.h"
	"pickle_data.cpp" -> "node_value.h"
	"options.h" -> "argument_extender.h"
	"inst_strategy_cegqi.cpp" -> "theory_engine.h"
	"smt_engine.cpp" -> "proof.h"
	"nonlinear_extension.h" -> "cdlist.h"
	"model_builder.cpp" -> "term_util.h"
	"arithvar_node_map.h" -> "context.h"
	"extended_rewrite.cpp" -> "theory_strings_rewriter.h"
	"bv_subtheory_algebraic.h" -> "bv_subtheory.h"
	"theory_bool.cpp" -> "circuit_propagator.h"
	"inst_propagator.h" -> "type_node.h"
	"full_model_check.cpp" -> "first_order_model.h"
	"pickler.h" -> "exception.h"
	"ce_guided_single_inv_sol.cpp" -> "ce_guided_single_inv_sol.h"
	"instantiate.cpp" -> "smt_statistics_registry.h"
	"statistics_registry.h" -> "statistics.h"
	"bv_subtheory_bitblast.cpp" -> "theory_bv.h"
	"lazy_bitblaster.h" -> "resolution_bitvector_proof.h"
	"static_learning.cpp" -> "node.h"
	"node.h" -> "language.h"
	"theory_strings_preprocess.cpp" -> "logic_exception.h"
	"lazy_bitblaster.cpp" -> "theory_bv_utils.h"
	"eager_bitblaster.cpp" -> "smt_statistics_registry.h"
	"sygus_inference.h" -> "node.h"
	"term_formula_removal.h" -> "dump.h"
	"quantifier_macros.h" -> "preprocessing_pass_context.h"
	"ceg_instantiator.cpp" -> "term_database.h"
	"bitblast_strategies_template.h" -> "node.h"
	"ce_guided_single_inv_sol.cpp" -> "first_order_model.h"
	"evaluator.h" -> "output.h"
	"dagification_visitor.h" -> "hash.h"
	"smt1.cpp" -> "parser.h"
	"theory_sets_type_enumerator.h" -> "type_enumerator.h"
	"resource_manager.cpp" -> "cvc4_assert.h"
	"inst_match_trie.cpp" -> "inst_match_trie.h"
	"smt_engine.cpp" -> "listener.h"
	"inst_match_generator.cpp" -> "instantiate.h"
	"bv_subtheory_algebraic.cpp" -> "node_algorithm.h"
	"candidate_generator.h" -> "theory.h"
	"theory_arith.h" -> "theory_arith_private_forward.h"
	"theory_builtin_rewriter.h" -> "theory.h"
	"theory_engine.cpp" -> "logic_exception.h"
	"bv_subtheory_bitblast.cpp" -> "smt_statistics_registry.h"
	"eager_bitblaster.cpp" -> "cnf_stream.h"
	"sat_solver_factory.cpp" -> "sat_solver_factory.h"
	"inst_strategy_cegqi.cpp" -> "theory_arith_private.h"
	"options_handler.h" -> "bv_bitblast_mode.h"
	"relevant_domain.cpp" -> "term_util.h"
	"expr_template.cpp" -> "node_algorithm.h"
	"theory_engine.h" -> "shared_terms_database.h"
	"sygus_unif_io.cpp" -> "term_database_sygus.h"
	"quant_util.cpp" -> "quant_util.h"
	"cegis.cpp" -> "theory_engine.h"
	"bv_ackermann.h" -> "preprocessing_pass.h"
	"equality_query.cpp" -> "equality_infer.h"
	"evaluator.h" -> "regexp.h"
	"dual_simplex.cpp" -> "smt_statistics_registry.h"
	"attempt_solution_simplex.cpp" -> "smt_statistics_registry.h"
	"node_manager.h" -> "node_builder.h"
	"sygus_unif_rl.cpp" -> "synth_conjecture.h"
	"theory_uf_model.cpp" -> "first_order_model.h"
	"circuit_propagator.h" -> "cdo.h"
	"theory_engine.h" -> "options.h"
	"slicer.cpp" -> "smt_statistics_registry.h"
	"parser.h" -> "input.h"
	"sygus_sampler.cpp" -> "printer.h"
	"synth_engine.cpp" -> "term_database_sygus.h"
	"sygus_input.cpp" -> "parser.h"
	"sygus_sampler.cpp" -> "node_algorithm.h"
	"sygus_unif.cpp" -> "term_util.h"
	"symmetry_detect.cpp" -> "rewriter.h"
	"options_handler.cpp" -> "arith_unate_lemma_mode.h"
	"Solver.cc" -> "sat_proof_implementation.h"
	"theory_datatypes.cpp" -> "datatype.h"
	"term_database_sygus.cpp" -> "term_database_sygus.h"
	"ce_guided_single_inv_sol.cpp" -> "term_enumeration.h"
	"equality_infer.cpp" -> "equality_infer.h"
	"ceg_instantiator.cpp" -> "arith_msum.h"
	"update_ostream.h" -> "language.h"
	"theory_uf_model.h" -> "theory_model.h"
	"sygus_unif_strat.cpp" -> "datatypes_rewriter.h"
	"lazy_bitblaster.h" -> "cdlist.h"
	"command_executor_portfolio.cpp" -> "cvc4cpp.h"
	"logic_exception.h" -> "exception.h"
	"theory_strings.cpp" -> "theory_model.h"
	"quantifiers_engine.cpp" -> "quant_conflict_find.h"
	"prop_engine.cpp" -> "options.h"
	"sygus_grammar_cons.cpp" -> "sygus_grammar_norm.h"
	"prop_engine.h" -> "result.h"
	"linear_equality.h" -> "partial_model.h"
	"result.cpp" -> "result.h"
	"theory_arith.cpp" -> "ext_theory.h"
	"model_engine.h" -> "model_builder.h"
	"proof_output_channel.h" -> "theory.h"
	"bv_quick_check.cpp" -> "theory_bv_utils.h"
	"skolemize.cpp" -> "quantifiers_engine.h"
	"theory_arith_private.cpp" -> "logic_request.h"
	"query_generator.h" -> "lazy_trie.h"
	"theory_engine.cpp" -> "options.h"
	"smt_engine.h" -> "cdhashset_forward.h"
	"command_executor.h" -> "options.h"
	"util.cpp" -> "smt_engine.h"
	"smt2.cpp" -> "options.h"
	"cvc_input.cpp" -> "antlr_input.h"
	"proof_manager.cpp" -> "hash.h"
	"parser.cpp" -> "cvc4cpp.h"
	"arith_propagation_mode.cpp" -> "arith_propagation_mode.h"
	"model_engine.cpp" -> "instantiate.h"
	"antlr_input.h" -> "parser_exception.h"
	"datatypes_sygus.h" -> "cdhashmap.h"
	"cdmaybe.h" -> "context.h"
	"Solver.h" -> "Vec.h"
	"options_handler.cpp" -> "datatypes_modes.h"
	"array_store_all.cpp" -> "type.h"
	"smt2_printer.cpp" -> "node_visitor.h"
	"equality_engine.h" -> "cdhashmap.h"
	"nonlinear_extension.h" -> "cdqueue.h"
	"resolution_bitvector_proof.cpp" -> "proof_utils.h"
	"justification_heuristic.h" -> "cdhashmap.h"
	"smt_engine_scope.cpp" -> "configuration_private.h"
	"sygus_sampler.cpp" -> "sygus_sampler.h"
	"theory_strings_rewriter.h" -> "attribute.h"
	"fp_converter.h" -> "cdlist.h"
	"synth_conjecture.cpp" -> "instantiate.h"
	"resource_manager.cpp" -> "output.h"
	"interactive_shell.cpp" -> "interactive_shell.h"
	"trigger.cpp" -> "instantiate.h"
	"antlr_input.h" -> "bounded_token_buffer.h"
	"sygus_grammar_norm.cpp" -> "smt_engine_scope.h"
	"extended_rewrite.cpp" -> "extended_rewrite.h"
	"sampler.h" -> "random.h"
	"command_executor_portfolio.cpp" -> "command_executor_portfolio.h"
	"portfolio.cpp" -> "result.h"
	"arith_proof.cpp" -> "theory_proof.h"
	"cnf_proof.cpp" -> "clause_id.h"
	"fc_simplex.cpp" -> "smt_statistics_registry.h"
	"random.cpp" -> "cvc4_assert.h"
	"arithvar_node_map.h" -> "cdo.h"
	"ite_simp.h" -> "preprocessing_pass_context.h"
	"quantifiers_engine.cpp" -> "theory_datatypes.h"
	"theory.cpp" -> "ext_theory.h"
	"proof_manager.cpp" -> "cnf_proof.h"
	"cnf_stream.cpp" -> "prop_engine.h"
	"theory_strings.cpp" -> "logic_exception.h"
	"expr_miner_manager.h" -> "candidate_rewrite_database.h"
	"theory.h" -> "output_channel.h"
	"bitvector_proof.cpp" -> "theory_bv.h"
	"Main.cc" -> "Solver.h"
	"minisat.cpp" -> "clause_id.h"
	"sep_skolem_emp.h" -> "preprocessing_pass_context.h"
	"soi_simplex.cpp" -> "smt_statistics_registry.h"
	"sygus_process_conj.h" -> "node.h"
	"smt2_quote_string.cpp" -> "smt2_quote_string.h"
	"options_handler.cpp" -> "language.h"
	"parser.h" -> "symbol_table.h"
	"quantifiers_engine.h" -> "inst_match.h"
	"apply_to_const.h" -> "preprocessing_pass.h"
	"valuation.cpp" -> "node.h"
	"theory_sets_private.h" -> "theory.h"
	"ast_printer.h" -> "printer.h"
	"preprocessing_pass.h" -> "smt_engine_scope.h"
	"sygus_eval_unfold.cpp" -> "datatypes_rewriter.h"
	"command.cpp" -> "command.h"
	"expr_template.cpp" -> "node_manager_attributes.h"
	"Options.h" -> "ParseUtils.h"
	"theory_arith_private.cpp" -> "valuation.h"
	"ce_guided_single_inv_sol.cpp" -> "ce_guided_single_inv.h"
	"nonlinear_extension.cpp" -> "arith_utilities.h"
	"smt_engine.cpp" -> "node.h"
	"sygus_pbe.cpp" -> "datatypes_rewriter.h"
	"bv_to_bool.h" -> "theory_bv_utils.h"
	"arith_static_learner.h" -> "context.h"
	"fun_def_process.h" -> "type_node.h"
	"error_set.h" -> "tableau_sizes.h"
	"bounded_token_factory.cpp" -> "bounded_token_factory.h"
	"sygus_enumerator.cpp" -> "datatypes_rewriter.h"
	"bv_gauss.cpp" -> "node.h"
	"preprocessing_pass_registry.cpp" -> "cvc4_assert.h"
	"parser_builder.h" -> "input.h"
	"smt_engine.cpp" -> "preprocessing_pass_registry.h"
	"theory_quantifiers.h" -> "statistics_registry.h"
	"inst_match_trie.h" -> "inst_match.h"
	"array_proof.h" -> "theory_proof.h"
	"smt_engine.cpp" -> "rewriter.h"
	"ceg_epr_instantiator.cpp" -> "term_database.h"
	"assertion_pipeline.h" -> "node.h"
	"quant_conflict_find.cpp" -> "node_algorithm.h"
	"sat_solver.h" -> "cdlist.h"
	"ast_printer.cpp" -> "substitutions.h"
	"Solver.cc" -> "Solver.h"
	"candidate_generator.cpp" -> "theory_uf.h"
	"cvc_printer.cpp" -> "cvc_printer.h"
	"model_engine.cpp" -> "model_engine.h"
	"unconstrained_simplifier.h" -> "statistics_registry.h"
	"cut_log.cpp" -> "cut_log.h"
	"constraint.h" -> "delta_rational.h"
	"fp_converter.h" -> "node.h"
	"quantifiers_engine.cpp" -> "sygus_eval_unfold.h"
	"ceg_instantiator.h" -> "statistics_registry.h"
	"type_enumerator.h" -> "theory_bv_utils.h"
	"ho_trigger.cpp" -> "term_database.h"
	"bv_subtheory_inequality.h" -> "bv_subtheory.h"
	"cnf_stream.cpp" -> "cvc4_assert.h"
	"error_set.h" -> "arith_heuristic_pivot_rule.h"
	"theory_datatypes.cpp" -> "theory_datatypes_type_rules.h"
	"skolemize.h" -> "cdhashmap.h"
	"linear_equality.h" -> "delta_rational.h"
	"instantiate.cpp" -> "instantiate.h"
	"ceg_arith_instantiator.cpp" -> "random.h"
	"instantiate.h" -> "node.h"
	"sygus_unif_io.h" -> "sygus_unif.h"
	"quant_util.cpp" -> "term_util.h"
	"quantifiers_modes.cpp" -> "quantifiers_modes.h"
	"cut_log.h" -> "dense_map.h"
	"sygus_input.cpp" -> "sygus_input.h"
	"Vec.h" -> "IntTypes.h"
	"term_database_sygus.cpp" -> "printer.h"
	"quantifiers_engine.cpp" -> "synth_engine.h"
	"cvc4cpp.cpp" -> "model.h"
	"nonlinear_extension.cpp" -> "node_algorithm.h"
	"candidate_rewrite_database.cpp" -> "quantifiers_engine.h"
	"query_generator.cpp" -> "random.h"
	"theory_strings.cpp" -> "smt_statistics_registry.h"
	"quantifiers_engine.cpp" -> "equality_infer.h"
	"datatype.h" -> "type.h"
	"sat_proof_implementation.h" -> "Solver.h"
	"eager_bitblaster.h" -> "resolution_bitvector_proof.h"
	"divisible.h" -> "exception.h"
	"theory_bool_rewriter.cpp" -> "theory_bool_rewriter.h"
	"input.cpp" -> "antlr_input.h"
	"smt2_printer.cpp" -> "boolean_simplification.h"
	"fc_simplex.h" -> "simplex.h"
	"cnf_stream.cpp" -> "theory_engine.h"
	"synth_conjecture.h" -> "expr_miner_manager.h"
	"theory_arith_private.h" -> "theory_arith_private_forward.h"
	"theory_engine.cpp" -> "theory_bv_utils.h"
	"quantifiers_rewriter.cpp" -> "node_algorithm.h"
	"bv_inequality_graph.h" -> "cdqueue.h"
	"infer_bounds.cpp" -> "infer_bounds.h"
	"theory_arith_private.cpp" -> "constraint.h"
	"prop_engine.cpp" -> "theory_proxy.h"
	"theory_engine.cpp" -> "first_order_model.h"
	"ceg_epr_instantiator.cpp" -> "node_algorithm.h"
	"assertion_pipeline.cpp" -> "assertion_pipeline.h"
	"theory_bv.h" -> "theory.h"
	"alpha_equivalence.h" -> "quantifiers_engine.h"
	"theory_sets_rels.cpp" -> "datatype.h"
	"quantifiers_engine.cpp" -> "inst_strategy_enumerative.h"
	"theory_model.h" -> "substitutions.h"
	"theory_strings.h" -> "attribute.h"
	"main.cpp" -> "command_executor.h"
	"dio_solver.cpp" -> "smt_statistics_registry.h"
	"theory_arith_private.cpp" -> "boolean_simplification.h"
	"congruence_manager.cpp" -> "smt_statistics_registry.h"
	"expr_template.h" -> "hash.h"
	"quantifier_macros.cpp" -> "trigger.h"
	"options_handler.h" -> "smt_modes.h"
	"cvc_printer.cpp" -> "substitutions.h"
	"expr_miner_manager.h" -> "sygus_sampler.h"
	"quantifiers_engine.h" -> "cdhashset.h"
	"shared_terms_database.cpp" -> "shared_terms_database.h"
	"theory_proxy.h" -> "expr_stream.h"
	"simplify_boolean_node.cpp" -> "proof_manager.h"
	"constraint.h" -> "arithvar.h"
	"resolution_bitvector_proof.cpp" -> "sat_proof_implementation.h"
	"atom_requests.h" -> "cdlist.h"
	"theory_bv.cpp" -> "theory_bv.h"
	"term_database_sygus.h" -> "evaluator.h"
	"smt1.cpp" -> "smt1.h"
	"cdlist.h" -> "context_mm.h"
	"main.cpp" -> "parser_exception.h"
	"synth_conjecture.h" -> "decision_manager.h"
	"theory_arith_private.h" -> "arith_static_learner.h"
	"linear_equality.h" -> "statistics_registry.h"
	"quantifiers_engine.cpp" -> "quantifiers_rewriter.h"
	"theory_proxy.cpp" -> "expr_stream.h"
	"preprocessing_pass_context.h" -> "smt_engine.h"
	"expr_manager_template.cpp" -> "node_manager_attributes.h"
	"justification_heuristic.cpp" -> "random.h"
	"quant_conflict_find.h" -> "cdlist.h"
	"bv_gauss.cpp" -> "theory_bv_rewrite_rules_normalization.h"
	"skolem_cache.cpp" -> "skolem_cache.h"
	"smt2_printer.cpp" -> "language.h"
	"integer_gmp_imp.cpp" -> "cvc4_assert.h"
	"bv_subtheory_core.cpp" -> "bv_subtheory_core.h"
	"instantiation_engine.cpp" -> "instantiation_engine.h"
	"solution_filter.cpp" -> "smt_engine.h"
	"bitvector_proof.cpp" -> "proof_output_channel.h"
	"partial_model.h" -> "node.h"
	"idl_assertion_db.h" -> "idl_assertion.h"
	"input.cpp" -> "parser.h"
	"SolverTypes.h" -> "Alloc.h"
	"nonlinear_extension.cpp" -> "node_builder.h"
	"theory_bv_utils.h" -> "node_manager.h"
	"tptp.h" -> "antlr_input.h"
	"theory_strings.h" -> "theory.h"
	"ceg_bv_instantiator.h" -> "bv_inverter.h"
	"cnf_stream.h" -> "node.h"
	"arithvar.cpp" -> "arithvar.h"
	"sygus_sampler.cpp" -> "bitvector.h"
	"sat_solver_factory.cpp" -> "bvminisat.h"
	"sort_infer.cpp" -> "sort_infer.h"
	"options_handler.cpp" -> "arith_propagation_mode.h"
	"type.cpp" -> "type.h"
	"expr_miner.cpp" -> "expr_miner.h"
	"node_value.h" -> "node.h"
	"term_database_sygus.h" -> "extended_rewrite.h"
	"node.h" -> "type.h"
	"symmetry_breaker.h" -> "preprocessing_pass.h"
	"pickle_data.h" -> "variable_type_map.h"
	"theory_datatypes.cpp" -> "theory_datatypes.h"
	"idl_model.cpp" -> "idl_model.h"
	"unconstrained_simplifier.h" -> "substitutions.h"
	"theory_strings_rewriter.h" -> "type_enumerator.h"
	"abstract_value.cpp" -> "abstract_value.h"
	"sygus_explain.cpp" -> "sygus_explain.h"
	"theory_proof.h" -> "proof_utils.h"
	"theory_uf_tim.h" -> "theory.h"
	"theory_fp.cpp" -> "rewriter.h"
	"unsat_core.cpp" -> "cvc4_assert.h"
	"bv_subtheory_bitblast.cpp" -> "theory_bv_utils.h"
	"arithvar_node_map.h" -> "arithvar.h"
	"theory_proxy.cpp" -> "lemma_input_channel.h"
	"decision_manager.cpp" -> "rewriter.h"
	"solution_filter.h" -> "node.h"
	"backtrackable.h" -> "cdo.h"
	"constraint.cpp" -> "constraint.h"
	"synth_conjecture.cpp" -> "prop_engine.h"
	"quantifier_macros.cpp" -> "term_database.h"
	"prop_engine.cpp" -> "theory_registrar.h"
	"arith_ite_utils.cpp" -> "arith_utilities.h"
	"equality_engine_types.h" -> "hash.h"
	"preprocessing_pass_registry.cpp" -> "static_learning.h"
	"theory_uf_model.cpp" -> "theory_engine.h"
	"preprocessing_pass_context.h" -> "decision_engine.h"
	"cegis.h" -> "sygus_sampler.h"
	"theory_sep_rewriter.cpp" -> "theory_sep_rewriter.h"
	"prop_engine.cpp" -> "prop_engine.h"
	"term_database_sygus.h" -> "term_database.h"
	"candidate_rewrite_database.cpp" -> "smt_engine_scope.h"
	"quant_util.h" -> "theory.h"
	"quantifiers_engine.cpp" -> "relevant_domain.h"
	"theory_sep.cpp" -> "theory_model.h"
	"sygus_pbe.cpp" -> "sygus_pbe.h"
	"symbol_table.cpp" -> "cdhashmap.h"
	"prop_engine.cpp" -> "cvc4_assert.h"
	"portfolio.h" -> "command.h"
	"error_set.h" -> "statistics_registry.h"
	"base_handlers.h" -> "option_exception.h"
	"theory_engine.h" -> "sort_inference.h"
	"sygus_grammar_cons.cpp" -> "sygus_grammar_cons.h"
	"candidate_rewrite_database.h" -> "candidate_rewrite_filter.h"
	"sygus_unif_strat.h" -> "node.h"
	"cnf_proof.h" -> "sat_proof.h"
	"cdinsert_hashmap.h" -> "cdinsert_hashmap_forward.h"
	"tableau.h" -> "matrix.h"
	"quantifiers_attributes.h" -> "node.h"
	"regexp_operation.cpp" -> "regexp_operation.h"
	"extended_rewrite.cpp" -> "datatypes_rewriter.h"
	"Alloc.h" -> "Vec.h"
	"candidate_rewrite_database.h" -> "sygus_sampler.h"
	"divisible.cpp" -> "exception.h"
	"normal_form.cpp" -> "arith_utilities.h"
	"theory_arith_private.cpp" -> "logic_exception.h"
	"theory_sets_private.cpp" -> "normal_form.h"
	"theory_engine.h" -> "unsafe_interrupt_exception.h"
	"lazy_bitblaster.h" -> "cnf_stream.h"
	"abstraction.cpp" -> "dump.h"
	"preprocessing_pass_registry.cpp" -> "bv_gauss.h"
	"inst_match_trie.cpp" -> "quantifiers_engine.h"
	"smt_engine.h" -> "expr_stream.h"
	"substitutions.h" -> "cdo.h"
	"sygus_unif_strat.cpp" -> "sygus_unif.h"
	"shared_terms_database.h" -> "cdhashset.h"
	"theory_engine.h" -> "hash.h"
	"input.cpp" -> "type.h"
	"theory_uf_rewriter.h" -> "substitutions.h"
	"arith_proof.cpp" -> "proof_manager.h"
	"equality_infer.cpp" -> "rewriter.h"
	"portfolio_util.h" -> "lemma_input_channel.h"
	"quantifiers_rewriter.cpp" -> "term_database.h"
	"bvminisat.cpp" -> "statistics_registry.h"
	"clock_gettime.h" -> "replacements.h"
	"bool_to_bv.cpp" -> "smt_statistics_registry.h"
	"dynamic_rewrite.cpp" -> "rewriter.h"
	"theory_bv.cpp" -> "theory_bv_rewrite_rules_normalization.h"
	"subs_minimize.h" -> "node.h"
	"preprocessing_pass_registry.cpp" -> "quantifier_macros.h"
	"Options.cc" -> "Options.h"
	"proof_manager.cpp" -> "valuation.h"
	"decision_strategy.h" -> "sat_solver_types.h"
	"instantiation_engine.cpp" -> "first_order_model.h"
	"sat_proof_implementation.h" -> "sat_solver_types.h"
	"node_builder.h" -> "type_node.h"
	"pseudo_boolean_processor.cpp" -> "normal_form.h"
	"Solver.h" -> "clause_id.h"
	"sygus_module.cpp" -> "sygus_module.h"
	"inst_strategy_enumerative.h" -> "context.h"
	"bv_abstraction.h" -> "preprocessing_pass.h"
	"ho_trigger.cpp" -> "term_util.h"
	"options.h" -> "option_exception.h"
	"theory_bv.cpp" -> "bv_eager_solver.h"
	"Solver.cc" -> "proof_manager.h"
	"fp_converter.h" -> "rewriter.h"
	"sygus_input.h" -> "antlr_input.h"
	"lemma_channels.cpp" -> "lemma_input_channel.h"
	"sygus_process_conj.cpp" -> "term_util.h"
	"sygus_unif_io.cpp" -> "term_util.h"
	"array_info.h" -> "statistics_registry.h"
	"managed_ostreams.cpp" -> "update_ostream.h"
	"theory_bool.h" -> "theory.h"
	"metakind_template.h" -> "node_value.h"
	"approx_simplex.cpp" -> "normal_form.h"
	"theory.h" -> "cdhashset.h"
	"non_clausal_simp.h" -> "preprocessing_pass.h"
	"theory_arith_private.cpp" -> "smt_statistics_registry.h"
	"parser_builder.cpp" -> "smt1.h"
	"command.h" -> "datatype.h"
	"node_manager.cpp" -> "resource_manager.h"
	"smt_statistics_registry.cpp" -> "smt_engine_scope.h"
	"inst_match_generator.cpp" -> "candidate_generator.h"
	"node.h" -> "configuration.h"
	"anti_skolem.h" -> "node.h"
	"theory_arrays.h" -> "cdhashmap.h"
	"ceg_epr_instantiator.cpp" -> "ceg_epr_instantiator.h"
	"valuation.cpp" -> "theory_engine.h"
	"theory_bv_rewrite_rules_simplification.h" -> "rewriter.h"
	"model.cpp" -> "model.h"
	"command_executor_portfolio.h" -> "command_executor.h"
	"ite_simp.h" -> "preprocessing_pass.h"
	"theory_traits_template.h" -> "theory.h"
	"Map.h" -> "Vec.h"
	"input.cpp" -> "command.h"
	"aig_bitblaster.h" -> "bitblaster.h"
	"inst_strategy_cegqi.cpp" -> "node_algorithm.h"
	"cdhashmap.h" -> "cdhashmap_forward.h"
	"type_set.cpp" -> "type_set.h"
	"theory_arith_private.h" -> "dual_simplex.h"
	"statistics_registry.cpp" -> "clock_gettime.h"
	"regexp_operation.h" -> "theory.h"
	"term_util.cpp" -> "term_database.h"
	"quant_conflict_find.cpp" -> "smt_statistics_registry.h"
	"tptp_input.cpp" -> "input.h"
	"antlr_input.cpp" -> "cvc_input.h"
	"linear_equality.h" -> "simplex_update.h"
	"lazy_bitblaster.h" -> "abstraction.h"
	"inst_strategy_e_matching.cpp" -> "inst_match_generator.h"
	"inst_match_generator.cpp" -> "term_database.h"
	"lazy_bitblaster.cpp" -> "lazy_bitblaster.h"
	"first_order_model.cpp" -> "first_order_model.h"
	"theory_engine.cpp" -> "resource_manager.h"
	"skolem_cache.h" -> "node.h"
	"ceg_bv_instantiator.cpp" -> "ceg_bv_instantiator.h"
	"cnf_proof.cpp" -> "minisat.h"
	"error_set.h" -> "partial_model.h"
	"type.cpp" -> "node_manager_attributes.h"
	"slicer.h" -> "index.h"
	"sort_inference.cpp" -> "quant_util.h"
	"options_handler.cpp" -> "strtok_r.h"
	"cdhashset.h" -> "cdinsert_hashmap.h"
	"local_theory_ext.h" -> "cdo.h"
	"ceg_dt_instantiator.h" -> "node.h"
	"decision_manager.cpp" -> "decision_manager.h"
	"command.cpp" -> "printer.h"
	"partial_model.h" -> "delta_rational.h"
	"model_engine.cpp" -> "ambqi_builder.h"
	"ceg_instantiator.cpp" -> "term_formula_removal.h"
	"pickler.cpp" -> "node_value.h"
	"rewrite_engine.cpp" -> "rewrite_engine.h"
	"Solver.cc" -> "utility.h"
	"decision_engine.cpp" -> "decision_engine.h"
	"command.cpp" -> "model.h"
	"full_model_check.cpp" -> "instantiate.h"
	"tableau.h" -> "arithvar.h"
	"Options.cc" -> "ParseUtils.h"
	"candidate_generator.cpp" -> "candidate_generator.h"
	"constraint.h" -> "proof.h"
	"theory_model_builder.cpp" -> "theory_engine.h"
	"theory_model.h" -> "type_enumerator.h"
	"quantifiers_engine.h" -> "cdlist.h"
	"bv_eager_solver.h" -> "theory_model.h"
	"term_database_sygus.h" -> "sygus_eval_unfold.h"
	"theory_arith_private.cpp" -> "delta_rational.h"
	"command.cpp" -> "expr_iomanip.h"
	"arith_static_learner.cpp" -> "rewriter.h"
	"sat_solver_factory.h" -> "context.h"
	"smt_engine_check_proof.cpp" -> "statistics_registry.h"
	"proof_output_channel.cpp" -> "cvc4_assert.h"
	"candidate_generator.cpp" -> "quantifiers_engine.h"
	"synth_conjecture.cpp" -> "first_order_model.h"
	"constraint.h" -> "callbacks.h"
	"theory_arith_private.h" -> "attempt_solution_simplex.h"
	"sygus_simple_sym.cpp" -> "quantifiers_engine.h"
	"driver_unified.cpp" -> "main.h"
	"logic_info.cpp" -> "logic_info.h"
	"theory_bv.cpp" -> "theory_proof.h"
	"theory_strings_rewriter.cpp" -> "theory.h"
	"theory.cpp" -> "quantifiers_engine.h"
	"theory_builtin_rewriter.cpp" -> "theory_builtin_rewriter.h"
	"inst_strategy_enumerative.cpp" -> "inst_strategy_enumerative.h"
	"bv_inverter_utils.cpp" -> "theory_bv_utils.h"
	"lazy_trie.h" -> "node.h"
	"theory_strings_rewriter.h" -> "rewriter.h"
	"lazy_bitblaster.cpp" -> "smt_statistics_registry.h"
	"theory_bv.cpp" -> "node_algorithm.h"
	"ite_utilities.h" -> "hash.h"
	"smt2_printer.cpp" -> "substitutions.h"
	"bv_to_bool.cpp" -> "theory.h"
	"smt_engine.cpp" -> "decision_engine.h"
	"bv_subtheory_algebraic.cpp" -> "bv_quick_check.h"
	"ho_trigger.cpp" -> "theory_uf_rewriter.h"
	"tableau_sizes.cpp" -> "output.h"
	"antlr_input.cpp" -> "smt1_input.h"
	"bv_subtheory.h" -> "theory.h"
	"partial_model.cpp" -> "partial_model.h"
	"lazy_bitblaster.cpp" -> "sat_solver.h"
	"tableau_sizes.cpp" -> "tableau_sizes.h"
	"antlr_input.cpp" -> "tptp_input.h"
	"shared_terms_database.cpp" -> "theory_engine.h"
	"term_util.cpp" -> "datatype.h"
	"single_inv_partition.h" -> "type_node.h"
	"prop_engine.cpp" -> "smt_statistics_registry.h"
	"partial_model.h" -> "callbacks.h"
	"subs_minimize.cpp" -> "subs_minimize.h"
	"quantifiers_engine.cpp" -> "equality_engine.h"
	"theory_bv.cpp" -> "valuation.h"
	"bv_abstraction.cpp" -> "bv_abstraction.h"
	"driver_unified.cpp" -> "output.h"
	"local_theory_ext.cpp" -> "term_database.h"
	"quantifiers_engine.h" -> "theory.h"
	"bounded_integers.cpp" -> "node_algorithm.h"
	"conjecture_generator.cpp" -> "first_order_model.h"
	"theory_uf.h" -> "cdhashset.h"
	"theory_proxy.cpp" -> "theory_engine.h"
	"bv_quick_check.cpp" -> "lazy_bitblaster.h"
	"theory_uf_strong_solver.cpp" -> "theory_engine.h"
	"type.h" -> "cardinality.h"
	"portfolio_util.h" -> "output.h"
	"theory_arith_private.cpp" -> "ite_utilities.h"
	"quantifiers_engine.cpp" -> "quant_relevance.h"
	"congruence_manager.h" -> "context.h"
	"model_core_builder.h" -> "model.h"
	"inst_propagator.cpp" -> "term_database.h"
	"proof_utils.cpp" -> "proof_utils.h"
	"theory_bv_rewrite_rules_normalization.h" -> "theory_bv_utils.h"
	"theory_fp_rewriter.cpp" -> "cvc4_assert.h"
	"quantifiers_engine.cpp" -> "term_enumeration.h"
	"extended_rewriter_pass.cpp" -> "extended_rewrite.h"
	"expr_miner.h" -> "smt_engine.h"
	"antlr_input.cpp" -> "type.h"
	"smt2_printer.cpp" -> "node_manager_attributes.h"
	"datatypes_sygus.h" -> "node.h"
	"theory_proxy.h" -> "sat_solver.h"
	"first_order_model.cpp" -> "model_engine.h"
	"prop_engine.cpp" -> "decision_engine.h"
	"memory_mapped_input_buffer.cpp" -> "exception.h"
	"datatypes_rewriter.h" -> "node_manager_attributes.h"
	"theory_arith_private.cpp" -> "approx_simplex.h"
	"theory_quantifiers.cpp" -> "term_database.h"
	"ast_printer.cpp" -> "command.h"
	"theory_bool.cpp" -> "theory_bool.h"
	"options_template.cpp" -> "options_handler.h"
	"approx_simplex.cpp" -> "matrix.h"
	"datatypes_sygus.h" -> "term_database.h"
	"theory_sep_rewriter.cpp" -> "quant_util.h"
	"options_handler.cpp" -> "theoryof_mode.h"
	"miplib_trick.cpp" -> "circuit_propagator.h"
	"term_util.h" -> "quant_util.h"
	"resolution_bitvector_proof.cpp" -> "array_proof.h"
	"quantifiers_engine.cpp" -> "ambqi_builder.h"
	"node_manager_listeners.cpp" -> "listener.h"
	"candidate_rewrite_database.cpp" -> "smt_statistics_registry.h"
	"preprocessing_pass_context.h" -> "term_formula_removal.h"
	"theory_strings.cpp" -> "term_database.h"
	"tptp.h" -> "hash.h"
	"term_database_sygus.cpp" -> "term_util.h"
	"datatypes_rewriter.h" -> "rewriter.h"
	"theory_datatypes.h" -> "attribute.h"
	"inst_strategy_cegqi.h" -> "ceg_instantiator.h"
	"error_set.h" -> "bound_counts.h"
	"theory_strings_preprocess.cpp" -> "theory_strings_preprocess.h"
	"sygus_inference.cpp" -> "smt_engine.h"
	"bounded_integers.h" -> "context_mm.h"
	"lazy_bitblaster.cpp" -> "cnf_stream.h"
	"inst_strategy_e_matching.cpp" -> "theory_engine.h"
	"term_canonize.cpp" -> "term_util.h"
	"quantifier_macros.cpp" -> "arith_msum.h"
	"pickler.cpp" -> "node_manager.h"
	"pseudo_boolean_processor.h" -> "context.h"
	"bv_gauss.h" -> "preprocessing_pass.h"
	"theory_sep_rewriter.h" -> "rewriter.h"
	"command.cpp" -> "smt_engine_scope.h"
	"smt_engine.cpp" -> "theory_strings.h"
	"bv_inequality_graph.h" -> "context.h"
	"error_set.cpp" -> "constraint.h"
	"quantifiers_preprocess.cpp" -> "quantifiers_rewriter.h"
	"fun_def_process.cpp" -> "quantifiers_attributes.h"
	"theory_uf_strong_solver.h" -> "decision_manager.h"
	"synth_rew_rules.h" -> "preprocessing_pass.h"
	"bin_heap.h" -> "cvc4_assert.h"
	"theory_arith_private.cpp" -> "node_builder.h"
	"bitblast_strategies_template.h" -> "rewriter.h"
	"smt_engine.cpp" -> "option_exception.h"
	"theory_uf.h" -> "node.h"
	"theory_engine.cpp" -> "node.h"
	"ite_simp.cpp" -> "nary_builder.h"
	"sygus_eval_unfold.cpp" -> "term_database_sygus.h"
	"context.h" -> "context_mm.h"
	"term_util.cpp" -> "term_util.h"
	"non_clausal_simp.cpp" -> "smt_statistics_registry.h"
	"ceg_instantiator.cpp" -> "ceg_epr_instantiator.h"
	"expr_miner_manager.h" -> "quantifiers_engine.h"
	"attribute.h" -> "attribute_unique_id.h"
	"node_builder.h" -> "output.h"
	"error_set.h" -> "arithvar.h"
	"dual_simplex.cpp" -> "output.h"
	"quantifiers_attributes.cpp" -> "quantifiers_engine.h"
	"rep_set.h" -> "node.h"
	"util.cpp" -> "exception.h"
	"inst_match_generator.cpp" -> "term_util.h"
	"term_enumeration.h" -> "type_enumerator.h"
	"statistics_registry.h" -> "clock_gettime.h"
	"rep_set.h" -> "type_node.h"
	"model_engine.cpp" -> "quantifiers_attributes.h"
	"non_clausal_simp.h" -> "node.h"
	"quantifiers_rewriter.cpp" -> "term_util.h"
	"pseudo_boolean_processor.cpp" -> "output.h"
	"resolution_bitvector_proof.h" -> "bitvector_proof.h"
	"bv_subtheory.h" -> "context.h"
	"fp_converter.cpp" -> "theory.h"
	"cdmaybe.h" -> "cdo.h"
	"lemma_proof.cpp" -> "rewriter.h"
	"approx_simplex.h" -> "dense_map.h"
	"inst_strategy_cegqi.h" -> "decision_manager.h"
	"idl_assertion.cpp" -> "idl_assertion.h"
	"model_engine.cpp" -> "full_model_check.h"
	"attempt_solution_simplex.h" -> "approx_simplex.h"
	"theory_proxy.cpp" -> "cnf_proof.h"
	"term_canonize.h" -> "node.h"
	"set_language.cpp" -> "options.h"
	"theory.h" -> "context.h"
	"inst_strategy_cegqi.cpp" -> "term_formula_removal.h"
	"rewrite_engine.h" -> "quantifiers_engine.h"
	"fp_converter.h" -> "cvc4_assert.h"
	"ce_guided_single_inv_sol.cpp" -> "datatype.h"
	"full_model_check.cpp" -> "term_database.h"
	"theory_arith_private.cpp" -> "cdinsert_hashmap.h"
	"theory_arrays.cpp" -> "logic_exception.h"
	"cvc_input.cpp" -> "parser_exception.h"
	"exception.cpp" -> "exception.h"
	"quantifier_macros.cpp" -> "quantifiers_engine.h"
	"extended_rewriter_pass.h" -> "preprocessing_pass_context.h"
	"theory.h" -> "ffs.h"
	"theory_uf_tim.h" -> "node.h"
	"preprocessing_pass_context.h" -> "circuit_propagator.h"
	"theory_bv.h" -> "cdlist.h"
	"regexp.cpp" -> "cvc4_assert.h"
	"equality_infer.h" -> "theory.h"
	"bv_subtheory_core.cpp" -> "smt_statistics_registry.h"
	"statistics.cpp" -> "statistics_registry.h"
	"theory_sets_type_enumerator.h" -> "rewriter.h"
	"sygus_repair_const.cpp" -> "datatypes_rewriter.h"
	"bitvector_proof.h" -> "theory_bv.h"
	"theory_sets_rewriter.cpp" -> "theory_sets_rewriter.h"
	"Heap.h" -> "Vec.h"
	"skolemization_manager.h" -> "proof.h"
	"bvminisat.cpp" -> "clause_id.h"
	"query_generator.cpp" -> "smt_engine.h"
	"command_executor.h" -> "smt_engine.h"
	"sampler.cpp" -> "bitvector.h"
	"regexp_operation.h" -> "hash.h"
	"parser.cpp" -> "type.h"
	"array_store_all.cpp" -> "cvc4_assert.h"
	"smt_engine_check_proof.cpp" -> "output.h"
	"inst_strategy_cegqi.cpp" -> "quant_epr.h"
	"theory_bv_rewriter.h" -> "rewriter.h"
	"SimpSolver.cc" -> "Sort.h"
	"partial_model.h" -> "constraint_forward.h"
	"term_formula_removal.h" -> "node.h"
	"preprocessing_pass.h" -> "logic_info.h"
	"bounded_integers.cpp" -> "term_enumeration.h"
	"quantifiers_preprocess.h" -> "preprocessing_pass_context.h"
	"theory_bool.cpp" -> "substitutions.h"
	"Dimacs.h" -> "ParseUtils.h"
	"valuation.cpp" -> "rewriter.h"
	"arith_proof.cpp" -> "theory_arith.h"
	"soi_simplex.h" -> "dense_map.h"
	"term_database.h" -> "quant_util.h"
	"portfolio.h" -> "smt_engine.h"
	"extended_rewrite.cpp" -> "term_util.h"
	"sygus_unif_io.cpp" -> "datatypes_rewriter.h"
	"cnf_stream.cpp" -> "output.h"
	"arith_msum.cpp" -> "arith_msum.h"
	"bvminisat.h" -> "statistics_registry.h"
	"expr_miner.cpp" -> "smt_engine.h"
	"instantiation_engine.cpp" -> "term_database.h"
	"preprocessing_pass_context.h" -> "context.h"
	"expr_miner.h" -> "node.h"
	"preprocessing_pass_registry.cpp" -> "rewrite.h"
	"output_channel.h" -> "cvc4_assert.h"
	"ho_trigger.cpp" -> "theory_engine.h"
	"synth_conjecture.cpp" -> "datatype.h"
	"linear_equality.h" -> "constraint_forward.h"
	"type_set.h" -> "type_enumerator.h"
	"theory_bv.cpp" -> "bv_subtheory_bitblast.h"
	"term_database.h" -> "attribute.h"
	"theory_arith.cpp" -> "smt_statistics_registry.h"
	"preprocessing_pass.cpp" -> "smt_statistics_registry.h"
	"model_engine.cpp" -> "term_database.h"
	"theory_uf_tim.h" -> "attribute.h"
	"theory_strings_preprocess.h" -> "theory.h"
	"preprocessing_pass_registry.cpp" -> "output.h"
	"expr_manager_template.cpp" -> "statistics_registry.h"
	"term_database.cpp" -> "theory_engine.h"
	"theory_arrays.cpp" -> "theory_model.h"
	"substitutions.cpp" -> "rewriter.h"
	"decision_strategy.h" -> "valuation.h"
	"smt_statistics_registry.h" -> "statistics_registry.h"
	"node_self_iterator.h" -> "cvc4_assert.h"
	"proof_manager.cpp" -> "theory_uf.h"
	"rewrite.cpp" -> "rewriter.h"
	"smt_engine.h" -> "unsat_core.h"
	"bv_subtheory.h" -> "equality_engine.h"
	"dio_solver.h" -> "cdmaybe.h"
	"term_enumeration.h" -> "type_node.h"
	"quantifiers_preprocess.h" -> "preprocessing_pass.h"
	"sygus_unif.h" -> "quantifiers_engine.h"
	"portfolio.cpp" -> "options.h"
	"parser.cpp" -> "resource_manager.h"
	"smt_engine_scope.cpp" -> "output.h"
	"arith_ite_utils.cpp" -> "rewriter.h"
	"inst_match_trie.h" -> "cdo.h"
	"bv_subtheory_algebraic.cpp" -> "theory_bv_utils.h"
	"minisat.cpp" -> "SimpSolver.h"
	"sampler.cpp" -> "sampler.h"
	"theory_builtin.cpp" -> "theory_builtin.h"
	"proof_manager.h" -> "substitutions.h"
	"trigger.cpp" -> "term_util.h"
	"ce_guided_single_inv.h" -> "inst_strategy_cegqi.h"
	"approx_simplex.cpp" -> "smt_statistics_registry.h"
	"pickle_data.cpp" -> "pickle_data.h"
	"options_handler.cpp" -> "bv_bitblast_mode.h"
	"miplib_trick.cpp" -> "boolean_simplification.h"
	"synth_engine.h" -> "cdhashmap.h"
	"interactive_shell.cpp" -> "input.h"
	"idl_model.h" -> "node.h"
	"infer_bounds.h" -> "node.h"
	"first_order_model.cpp" -> "term_util.h"
	"abstraction.h" -> "statistics_registry.h"
	"theory_arith_private.cpp" -> "theory_arith.h"
	"array_proof.cpp" -> "theory_arrays.h"
	"quantifiers_engine.cpp" -> "model_engine.h"
	"theory_proxy.cpp" -> "statistics_registry.h"
	"ceg_arith_instantiator.cpp" -> "ceg_arith_instantiator.h"
	"expr_manager_template.cpp" -> "variable_type_map.h"
	"options_handler.h" -> "quantifiers_modes.h"
	"theory_sep.h" -> "cdhashmap.h"
	"congruence_manager.cpp" -> "arith_utilities.h"
	"real_to_int.h" -> "node.h"
	"regexp.cpp" -> "exception.h"
	"instantiation_engine.h" -> "theory_quantifiers.h"
	"sygus_pbe.cpp" -> "term_database_sygus.h"
	"array_proof.cpp" -> "theory_proof.h"
	"anti_skolem.cpp" -> "anti_skolem.h"
	"eager_bitblaster.cpp" -> "sat_solver_factory.h"
	"command_executor.cpp" -> "main.h"
	"quantifiers_engine.cpp" -> "term_database_sygus.h"
	"term_util.h" -> "attribute.h"
	"equality_query.cpp" -> "theory_engine.h"
	"quantifiers_engine.cpp" -> "first_order_model.h"
	"conjecture_generator.h" -> "quantifiers_engine.h"
	"Solver.cc" -> "resolution_bitvector_proof.h"
	"sygus_grammar_norm.cpp" -> "term_database_sygus.h"
	"rewrite_engine.cpp" -> "quant_util.h"
	"term_util.cpp" -> "arith_msum.h"
	"smt_engine_scope.cpp" -> "smt_engine.h"
	"full_model_check.cpp" -> "full_model_check.h"
	"bitvector.h" -> "exception.h"
	"bvminisat.h" -> "bv_sat_solver_notify.h"
	"driver_unified.cpp" -> "result.h"
	"main.cpp" -> "language.h"
	"arith_ite_utils.cpp" -> "theory_model.h"
	"symmetry_breaker.h" -> "cdlist.h"
	"matrix.h" -> "dense_map.h"
	"attribute.h" -> "attribute_internals.h"
	"proof_manager.h" -> "proof_utils.h"
	"node_builder.h" -> "node_value.h"
	"synth_conjecture.cpp" -> "enum_stream_substitution.h"
	"rewriter.cpp" -> "smt_engine_scope.h"
	"symbol_table.cpp" -> "expr_manager_scope.h"
	"record.cpp" -> "output.h"
	"miplib_trick.cpp" -> "node_self_iterator.h"
	"ascription_type.h" -> "type.h"
	"bv_eager_atoms.cpp" -> "theory_model.h"
	"shared_terms_database.h" -> "equality_engine.h"
	"lemma_channels.cpp" -> "lemma_output_channel.h"
	"candidate_generator.cpp" -> "inst_match.h"
	"theory_quantifiers.h" -> "cdhashmap.h"
	"dump.cpp" -> "dump.h"
	"inst_strategy_e_matching.cpp" -> "term_util.h"
	"arith_utilities.h" -> "dense_map.h"
	"symmetry_breaker.cpp" -> "hash.h"
	"shared_terms_database.h" -> "node.h"
	"arithvar_node_map.h" -> "cdlist.h"
	"instantiate.cpp" -> "term_database.h"
	"printer.h" -> "model.h"
	"theory_arith_private.cpp" -> "normal_form.h"
	"bv_subtheory_core.cpp" -> "theory_bv.h"
	"non_clausal_simp.cpp" -> "cdo.h"
	"lazy_bitblaster.cpp" -> "theory_bv.h"
	"type_enumerator_template.cpp" -> "type_enumerator.h"
	"ceg_bv_instantiator.h" -> "ceg_instantiator.h"
	"theory_bool.cpp" -> "valuation.h"
	"relevant_domain.cpp" -> "arith_msum.h"
	"theory_bv_rewrite_rules_normalization.h" -> "node_algorithm.h"
	"model_builder.cpp" -> "theory_uf_model.h"
	"array_proof.h" -> "equality_engine.h"
	"ite_utilities.cpp" -> "theory.h"
	"instantiate.cpp" -> "quantifiers_attributes.h"
	"decision_engine.h" -> "sat_solver_types.h"
	"assertion_pipeline.h" -> "term_formula_removal.h"
	"ceg_instantiator.h" -> "quantifiers_engine.h"
	"sygus_unif_rl.h" -> "sygus_unif.h"
	"node_value.cpp" -> "options.h"
	"pseudo_boolean_processor.h" -> "preprocessing_pass_context.h"
	"theory_engine.cpp" -> "lemma_proof.h"
	"SolverTypes.h" -> "Vec.h"
	"printer.h" -> "node.h"
	"options_handler.h" -> "option_exception.h"
	"symmetry_detect.cpp" -> "node_algorithm.h"
	"rational_gmp_imp.h" -> "exception.h"
	"proof_manager.cpp" -> "proof_utils.h"
	"smt_statistics_registry.cpp" -> "statistics_registry.h"
	"unsat_core.cpp" -> "unsat_core.h"
	"theory_test_utils.h" -> "unsafe_interrupt_exception.h"
	"justification_heuristic.h" -> "decision_attributes.h"
	"theory_uf.cpp" -> "term_database.h"
	"theory_uf_strong_solver.h" -> "theory.h"
	"cnf_proof.h" -> "clause_id.h"
	"apply_substs.cpp" -> "substitutions.h"
	"bv_subtheory_core.h" -> "cdhashset.h"
	"inst_match_trie.cpp" -> "instantiate.h"
	"theory.cpp" -> "substitutions.h"
	"ceg_dt_instantiator.h" -> "ceg_instantiator.h"
	"sort_inference.cpp" -> "proof_manager.h"
	"theory_arrays_rewriter.h" -> "type_enumerator.h"
	"nonlinear_extension.cpp" -> "arith_msum.h"
	"quantifiers_rewriter.cpp" -> "quantifiers_rewriter.h"
	"sygus_enumerator.h" -> "term_database_sygus.h"
	"rewrite_engine.cpp" -> "inst_match_generator.h"
	"theory_proxy.cpp" -> "lemma_output_channel.h"
	"preprocessing_pass_context.h" -> "theory_engine.h"
	"synth_engine.h" -> "synth_conjecture.h"
	"sygus_repair_const.cpp" -> "sygus_repair_const.h"
	"cddense_set.h" -> "cdlist_forward.h"
	"decision_engine.h" -> "node.h"
	"theory_engine.cpp" -> "term_formula_removal.h"
	"circuit_propagator.cpp" -> "circuit_propagator.h"
	"command_executor.h" -> "statistics_registry.h"
	"theory_uf_strong_solver.h" -> "context_mm.h"
	"ambqi_builder.cpp" -> "term_util.h"
	"partial_model.cpp" -> "normal_form.h"
	"theory.h" -> "valuation.h"
	"arith_proof.h" -> "theory_proof.h"
	"smt2.h" -> "logic_info.h"
	"quant_relevance.cpp" -> "quant_relevance.h"
	"theory_engine.cpp" -> "arith_ite_utils.h"
	"parser.cpp" -> "output.h"
	"slicer.cpp" -> "rewriter.h"
	"static_fact_manager.cpp" -> "static_fact_manager.h"
	"smt_engine.cpp" -> "theory_proof.h"
	"sat_solver.h" -> "clause_id.h"
	"nonlinear_extension.cpp" -> "quant_util.h"
	"slicer.h" -> "bitvector.h"
	"constraint.h" -> "constraint_forward.h"
	"node_manager.cpp" -> "cvc4_assert.h"
	"cvc4cpp.cpp" -> "cvc4cpp.h"
	"theory_arith_private.h" -> "valuation.h"
	"pseudo_boolean_processor.cpp" -> "rewriter.h"
	"smt_engine.cpp" -> "hash.h"
	"preprocessing_pass_registry.cpp" -> "ite_removal.h"
	"uf_proof.cpp" -> "proof_manager.h"
	"theory_engine.cpp" -> "node_algorithm.h"
	"theory_arrays.cpp" -> "smt_statistics_registry.h"
	"index.cpp" -> "index.h"
	"bounded_integers.cpp" -> "arith_msum.h"
	"unsat_core.cpp" -> "command.h"
	"smt_engine.cpp" -> "random.h"
	"simplex_update.h" -> "maybe.h"
	"prop_engine.h" -> "options.h"
	"SolverTypes.h" -> "Map.h"
	"rewrite.h" -> "preprocessing_pass.h"
	"theory_quantifiers.cpp" -> "quantifiers_engine.h"
	"quant_split.h" -> "quantifiers_engine.h"
	"fc_simplex.cpp" -> "fc_simplex.h"
	"smt_engine.cpp" -> "synth_engine.h"
	"theory_fp.cpp" -> "theory_model.h"
	"theory_arrays.cpp" -> "command.h"
	"bv_to_bool.h" -> "statistics_registry.h"
	"ceg_instantiator.cpp" -> "node_algorithm.h"
	"theory_sets_rewriter.cpp" -> "rels_utils.h"
	"preprocessing_pass_registry.cpp" -> "preprocessing_pass_registry.h"
	"theory_sep.h" -> "cdqueue.h"
	"command_executor.h" -> "command.h"
	"proof_manager.cpp" -> "clause_id.h"
	"theory_proof.h" -> "equality_engine.h"
	"sygus_explain.cpp" -> "term_database_sygus.h"
	"theory_arith_private.h" -> "cdqueue.h"
	"partial_model.h" -> "context.h"
	"smt2_input.h" -> "antlr_input.h"
	"justification_heuristic.h" -> "cdhashset.h"
	"theory_idl.h" -> "idl_model.h"
	"inst_strategy_enumerative.cpp" -> "term_util.h"
	"sep_skolem_emp.h" -> "preprocessing_pass.h"
	"symmetry_breaker.h" -> "statistics_registry.h"
	"bv_subtheory_bitblast.cpp" -> "bv_subtheory_bitblast.h"
	"equality_engine.h" -> "cdo.h"
	"safe_print.cpp" -> "safe_print.h"
	"record.cpp" -> "record.h"
	"driver_unified.cpp" -> "command_executor_portfolio.h"
	"datatype.h" -> "exception.h"
	"theory_proxy.cpp" -> "decision_engine.h"
	"symmetry_detect.cpp" -> "term_util.h"
	"node.h" -> "exception.h"
	"synth_rew_rules.cpp" -> "printer.h"
	"union_find.h" -> "node.h"
	"sep_skolem_emp.cpp" -> "quant_util.h"
	"ho_trigger.h" -> "trigger.h"
	"options_handler.cpp" -> "printer_modes.h"
	"relevant_domain.cpp" -> "relevant_domain.h"
	"sygus_grammar_norm.h" -> "term_util.h"
	"quantifiers_rewriter.cpp" -> "skolemize.h"
	"theory_arith_private.cpp" -> "cdlist.h"
	"antlr_line_buffered_input.h" -> "line_buffer.h"
	"bv_eager_atoms.h" -> "preprocessing_pass_context.h"
	"type_enumerator_template.cpp" -> "cvc4_assert.h"
	"theory_proof.cpp" -> "term_registration_visitor.h"
	"datatype.cpp" -> "expr_manager_scope.h"
	"util.cpp" -> "statistics.h"
	"Solver.h" -> "output.h"
	"bv_subtheory_algebraic.cpp" -> "theory_bv.h"
	"partial_model.h" -> "arith_utilities.h"
	"partial_model.h" -> "arithvar.h"
	"smt_engine.cpp" -> "decision_mode.h"
	"decision_engine.cpp" -> "node.h"
	"node.h" -> "hash.h"
	"smt2_input.cpp" -> "smt2.h"
	"tptp_input.cpp" -> "parser_exception.h"
	"trigger.cpp" -> "theory_engine.h"
	"term_formula_removal.h" -> "cdinsert_hashmap.h"
	"relevant_domain.cpp" -> "first_order_model.h"
	"anti_skolem.h" -> "quantifiers_engine.h"
	"bv_intro_pow2.cpp" -> "theory_bv_rewrite_rules_simplification.h"
	"options_handler.cpp" -> "ufss_mode.h"
	"memory_mapped_input_buffer.cpp" -> "memory_mapped_input_buffer.h"
	"bv_subtheory_core.cpp" -> "slicer.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules_simplification.h"
	"driver_unified.cpp" -> "parser.h"
	"theory_uf.cpp" -> "uf_proof.h"
	"smt2.h" -> "parser.h"
	"quantifier_macros.cpp" -> "proof_manager.h"
	"preprocessing_pass_context.h" -> "ite_utilities.h"
	"callbacks.h" -> "theory_arith_private_forward.h"
	"node_manager.cpp" -> "listener.h"
	"theory_proof.cpp" -> "theory_arrays.h"
	"smt_engine.cpp" -> "node_visitor.h"
	"theory_model_builder.cpp" -> "theory_uf_model.h"
	"skolemize.h" -> "datatype.h"
	"unsafe_interrupt_exception.h" -> "exception.h"
	"managed_ostreams.h" -> "open_ostream.h"
	"anti_skolem.cpp" -> "first_order_model.h"
	"kind_map.h" -> "cvc4_assert.h"
	"prop_engine.cpp" -> "output.h"
	"quant_conflict_find.h" -> "cdhashmap.h"
	"trigger.cpp" -> "candidate_generator.h"
	"lazy_bitblaster.cpp" -> "abstraction.h"
	"sygus_process_conj.h" -> "quantifiers_engine.h"
	"bv_inverter.h" -> "node.h"
	"equality_engine.cpp" -> "smt_statistics_registry.h"
	"theory_sep.h" -> "theory.h"
	"proof_manager.cpp" -> "sat_proof_implementation.h"
	"justification_heuristic.cpp" -> "smt_statistics_registry.h"
	"conjecture_generator.cpp" -> "random.h"
	"output_channel.h" -> "resource_manager.h"
	"congruence_manager.cpp" -> "constraint.h"
	"portfolio.cpp" -> "smt_engine.h"
	"driver_unified.cpp" -> "configuration.h"
	"model.cpp" -> "command.h"
	"sygus_simple_sym.h" -> "term_database_sygus.h"
	"node.h" -> "type_checker.h"
	"theory_engine.cpp" -> "cnf_proof.h"
	"options_handler.cpp" -> "arith_heuristic_pivot_rule.h"
	"first_order_model.cpp" -> "full_model_check.h"
	"theory_bool.h" -> "context.h"
	"model_core_builder.cpp" -> "model_core_builder.h"
	"cnf_proof.h" -> "proof.h"
	"theory_bv_utils.cpp" -> "theory.h"
	"circuit_propagator.h" -> "cdhashmap.h"
	"conjecture_generator.cpp" -> "term_canonize.h"
	"constraint.cpp" -> "smt_statistics_registry.h"
	"rewriter_tables_template.h" -> "rewriter.h"
	"conjecture_generator.cpp" -> "trigger.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules_operator_elimination.h"
	"maybe.h" -> "exception.h"
	"dio_solver.h" -> "cdo.h"
	"theory_arith_private.cpp" -> "cut_log.h"
	"quant_conflict_find.h" -> "term_database.h"
	"input.cpp" -> "parser_exception.h"
	"command.h" -> "type.h"
	"bound_counts.h" -> "dense_map.h"
	"theory_sets_rels.cpp" -> "theory_sets.h"
	"lazy_bitblaster.h" -> "registrar.h"
	"sygus_process_conj.cpp" -> "datatype.h"
	"synth_conjecture.cpp" -> "printer.h"
	"dump.cpp" -> "preprocessing_pass_registry.h"
	"smt_engine.cpp" -> "managed_ostreams.h"
	"theory_bv_rewrite_rules_core.h" -> "theory_bv_rewrite_rules.h"
	"sat_proof.h" -> "cdhashmap.h"
	"lemma_channels.h" -> "option_exception.h"
	"pseudo_boolean_processor.h" -> "cdhashmap.h"
	"partial_model.cpp" -> "constraint.h"
	"emptyset.cpp" -> "type.h"
	"quantifiers_engine.cpp" -> "rewrite_engine.h"
	"quantifiers_engine.h" -> "quant_util.h"
	"smt_engine.h" -> "hash.h"
	"Solver.cc" -> "minisat.h"
	"theory_builtin_type_rules.h" -> "rewriter.h"
	"partial_model.h" -> "bound_counts.h"
	"arith_unate_lemma_mode.cpp" -> "arith_unate_lemma_mode.h"
	"theory.h" -> "dump.h"
	"aig_bitblaster.cpp" -> "sat_solver_factory.h"
	"candidate_rewrite_database.cpp" -> "term_database_sygus.h"
	"term_enumeration.h" -> "node.h"
	"instantiate.h" -> "inst_match_trie.h"
	"dagification_visitor.cpp" -> "dagification_visitor.h"
	"theory_datatypes.cpp" -> "quantifiers_engine.h"
	"theory_arith.cpp" -> "theory_arith_private.h"
	"theory_strings.cpp" -> "theory_strings_rewriter.h"
	"bv_subtheory_bitblast.cpp" -> "bv_quick_check.h"
	"alpha_equivalence.cpp" -> "alpha_equivalence.h"
	"union_find.cpp" -> "union_find.h"
	"justification_heuristic.cpp" -> "node_manager.h"
	"statistics_registry.cpp" -> "statistics_registry.h"
	"theory_bool.cpp" -> "boolean_simplification.h"
	"Sort.h" -> "Vec.h"
	"query_generator.cpp" -> "smt_engine_scope.h"
	"SolverTypes.h" -> "output.h"
	"proof_utils.h" -> "node_manager.h"
	"cardinality.h" -> "exception.h"
	"rewrite_engine.cpp" -> "theory_engine.h"
	"theory_engine.h" -> "prop_engine.h"
	"linear_equality.cpp" -> "output.h"
	"bvminisat.h" -> "cdo.h"
	"smt_engine.h" -> "options.h"
	"preprocessing_pass_registry.cpp" -> "sygus_inference.h"
	"antlr_input_imports.cpp" -> "antlr_input.h"
	"theory_sets_private.cpp" -> "term_database.h"
	"decision_engine.cpp" -> "decision_attributes.h"
	"proof_manager.h" -> "node.h"
	"bool_to_bv.cpp" -> "theory.h"
	"theory_bv_utils.cpp" -> "theory_bv_utils.h"
	"preprocessing_pass_registry.cpp" -> "quantifiers_preprocess.h"
	"theory_arrays.h" -> "statistics_registry.h"
	"inst_strategy_e_matching.cpp" -> "term_database.h"
	"slicer.cpp" -> "slicer.h"
	"ext_theory.cpp" -> "cvc4_assert.h"
	"static_fact_manager.h" -> "node.h"
	"floatingpoint.cpp" -> "cvc4_assert.h"
	"cut_log.cpp" -> "normal_form.h"
	"smt1.h" -> "parser.h"
	"theory_sets_private.cpp" -> "theory_model.h"
	"smt1_input.h" -> "antlr_input.h"
	"set_language.cpp" -> "language.h"
	"parser_builder.cpp" -> "tptp.h"
	"theory_uf_strong_solver.cpp" -> "term_database.h"
	"theory_engine.cpp" -> "theory.h"
	"datatype.cpp" -> "cvc4_assert.h"
	"callbacks.h" -> "bound_counts.h"
	"soi_simplex.cpp" -> "soi_simplex.h"
	"cvc_printer.cpp" -> "theory_arrays_rewriter.h"
	"antlr_line_buffered_input.cpp" -> "antlr_line_buffered_input.h"
	"bvminisat.cpp" -> "bvminisat.h"
	"valuation.h" -> "node.h"
	"bv_gauss.cpp" -> "rewriter.h"
	"options_handler.cpp" -> "option_exception.h"
	"model_builder.cpp" -> "theory_uf.h"
	"bvminisat.h" -> "clause_id.h"
	"smt_engine.cpp" -> "sort_inference.h"
	"delta_rational.h" -> "cvc4_assert.h"
	"smt2.h" -> "abstract_value.h"
	"portfolio_util.h" -> "channel.h"
	"cut_log.cpp" -> "output.h"
	"subs_minimize.cpp" -> "rewriter.h"
	"theory_arith_private.cpp" -> "linear_equality.h"
	"theory_bv_rewrite_rules.h" -> "command.h"
	"theory_uf_tim.h" -> "cdlist.h"
	"sygus_grammar_norm.cpp" -> "sygus_print_callback.h"
	"symmetry_breaker.cpp" -> "rewriter.h"
	"single_inv_partition.h" -> "node.h"
	"theory_proxy.cpp" -> "command.h"
	"update_ostream.h" -> "dump.h"
	"inst_strategy_cegqi.cpp" -> "instantiate.h"
	"preprocessing_pass_registry.cpp" -> "sort_infer.h"
	"command.h" -> "proof.h"
	"rewriter_tables_template.h" -> "attribute.h"
	"sort_infer.cpp" -> "sort_inference.h"
	"theory_bv_rewrite_rules_core.h" -> "theory_bv_utils.h"
	"arith_rewriter.cpp" -> "arith_msum.h"
	"smt2.cpp" -> "antlr_input.h"
	"ite_removal.h" -> "preprocessing_pass.h"
	"sygus_unif.cpp" -> "datatypes_rewriter.h"
	"language.h" -> "option_exception.h"
	"proof_output_channel.h" -> "output_channel.h"
	"theory_proof.cpp" -> "sat_solver_types.h"
	"node_manager.h" -> "node.h"
	"arith_static_learner.h" -> "statistics_registry.h"
	"sygus_grammar_cons.cpp" -> "sygus_process_conj.h"
	"theory_sep.cpp" -> "logic_exception.h"
	"theory_bv.cpp" -> "theory_bv_rewriter.h"
	"model_engine.cpp" -> "term_util.h"
	"simplex.h" -> "partial_model.h"
	"datatypes_rewriter.h" -> "type_enumerator.h"
	"node_builder.h" -> "cvc4_assert.h"
	"unconstrained_simplifier.h" -> "context.h"
	"smt_engine.cpp" -> "logic_request.h"
	"theory_proof.cpp" -> "smt_engine.h"
	"anti_skolem.h" -> "single_inv_partition.h"
	"smt2.cpp" -> "sygus_print_callback.h"
	"cnf_proof.cpp" -> "proof_manager.h"
	"sygus_inference.cpp" -> "smt_engine_scope.h"
	"theory_arith_private.cpp" -> "cdqueue.h"
	"dump.h" -> "output.h"
	"attribute.cpp" -> "node_value.h"
	"term_database.h" -> "theory.h"
	"theory_proof.cpp" -> "hash.h"
	"sygus_print_callback.cpp" -> "node.h"
	"command_executor.cpp" -> "command.h"
	"term_formula_removal.h" -> "context.h"
	"sygus_grammar_norm.cpp" -> "datatypes_rewriter.h"
	"theory_datatypes.h" -> "cdlist.h"
	"theory_sets_private.cpp" -> "theory_sets_private.h"
	"type_enumerator.h" -> "uninterpreted_constant.h"
	"driver_unified.cpp" -> "options.h"
	"model_builder.cpp" -> "theory_uf_strong_solver.h"
	"theory_engine.cpp" -> "rewriter.h"
	"attribute.cpp" -> "output.h"
	"ceg_dt_instantiator.cpp" -> "node_algorithm.h"
	"smt_engine.cpp" -> "node_self_iterator.h"
	"smt_engine.cpp" -> "output.h"
	"theory_sets_private.cpp" -> "emptyset.h"
	"smt_engine.cpp" -> "language.h"
	"theory_bv.cpp" -> "bv_subtheory_algebraic.h"
	"delta_rational.cpp" -> "delta_rational.h"
	"constraint.cpp" -> "arith_utilities.h"
	"context.h" -> "output.h"
	"theory_sep.cpp" -> "quantifiers_engine.h"
	"theory_quantifiers.h" -> "context.h"
	"solution_filter.h" -> "lazy_trie.h"
	"didyoumean.cpp" -> "didyoumean.h"
	"bv_to_bool.cpp" -> "smt_statistics_registry.h"
	"conjecture_generator.cpp" -> "term_util.h"
	"sort_infer.h" -> "preprocessing_pass.h"
	"shared_terms_database.cpp" -> "smt_statistics_registry.h"
	"inst_strategy_cegqi.cpp" -> "quantifiers_rewriter.h"
	"instantiate.h" -> "statistics_registry.h"
	"symmetry_detect.cpp" -> "symmetry_detect.h"
	"theory_test_utils.h" -> "interrupted.h"
	"ite_utilities.cpp" -> "smt_statistics_registry.h"
	"lemma_proof.h" -> "proof.h"
	"type_enumerator.h" -> "exception.h"
	"ce_guided_single_inv.cpp" -> "term_enumeration.h"
	"relevant_domain.cpp" -> "term_database.h"
	"constraint.h" -> "congruence_manager.h"
	"arith_static_learner.cpp" -> "output.h"
	"arith_rewriter.cpp" -> "logic_exception.h"
	"apply_substs.h" -> "preprocessing_pass_context.h"
	"dio_solver.h" -> "context.h"
	"theory_engine.cpp" -> "equality_engine.h"
	"smt_engine.cpp" -> "smt_engine_scope.h"
	"inst_strategy_enumerative.cpp" -> "instantiate.h"
	"theory_uf.h" -> "cdo.h"
	"theory_proxy.h" -> "statistics_registry.h"
	"preprocessing_pass.cpp" -> "dump.h"
	"theory_sep.cpp" -> "rewriter.h"
	"type_properties_template.h" -> "cvc4_assert.h"
	"int_to_bv.cpp" -> "int_to_bv.h"
	"dynamic_rewrite.h" -> "equality_engine.h"
	"array_info.cpp" -> "array_info.h"
	"theory_strings_rewriter.cpp" -> "logic_exception.h"
	"smt1.cpp" -> "command.h"
	"interactive_shell.cpp" -> "language.h"
	"cegis.cpp" -> "printer.h"
	"didyoumean_test.cpp" -> "didyoumean.h"
	"query_generator.cpp" -> "query_generator.h"
	"tptp_printer.cpp" -> "command.h"
	"theory_idl.cpp" -> "rewriter.h"
	"theory_arith.h" -> "node.h"
	"lfsc_proof_printer.h" -> "clause_id.h"
	"theory_builtin.h" -> "theory.h"
	"ce_guided_single_inv.h" -> "quantifiers_engine.h"
	"nl_ext_purify.cpp" -> "nl_ext_purify.h"
	"array_info.h" -> "cdlist.h"
	"cdinsert_hashmap.h" -> "node.h"
	"tptp.cpp" -> "cvc4cpp.h"
	"integer_gmp_imp.h" -> "gmp_util.h"
	"interactive_shell.cpp" -> "cvc4cpp.h"
	"configuration.cpp" -> "configuration.h"
	"input.h" -> "language.h"
	"lazy_bitblaster.h" -> "bitblaster.h"
	"lemma_channels.cpp" -> "expr_stream.h"
	"rewrite_engine.cpp" -> "first_order_model.h"
	"smt_engine.cpp" -> "command.h"
	"term_canonize.cpp" -> "term_canonize.h"
	"quant_epr.h" -> "type_node.h"
	"term_util.cpp" -> "node_algorithm.h"
	"modal_exception.h" -> "exception.h"
	"antlr_input.h" -> "line_buffer.h"
	"options_handler.cpp" -> "cvc4_assert.h"
	"driver_unified.cpp" -> "parser_builder.h"
	"prop_engine.h" -> "unsafe_interrupt_exception.h"
	"arith_static_learner.cpp" -> "arith_static_learner.h"
	"theory_bv.cpp" -> "ext_theory.h"
	"cnf_stream.cpp" -> "theory_proxy.h"
	"cnf_stream.cpp" -> "sat_proof.h"
	"datatypes_sygus.h" -> "cdo.h"
	"quant_split.cpp" -> "first_order_model.h"
	"quantifiers_attributes.cpp" -> "quantifiers_attributes.h"
	"sygus_invariance.cpp" -> "term_database_sygus.h"
	"equality_engine.h" -> "rewriter.h"
	"unconstrained_simplifier.cpp" -> "unconstrained_simplifier.h"
	"ceg_arith_instantiator.cpp" -> "arith_msum.h"
	"ambqi_builder.cpp" -> "ambqi_builder.h"
	"interactive_shell.h" -> "options.h"
	"theory_proof.cpp" -> "valuation.h"
	"bv_subtheory_inequality.cpp" -> "theory_bv_utils.h"
	"sygus_repair_const.cpp" -> "ceg_instantiator.h"
	"instantiation_engine.h" -> "quantifiers_engine.h"
	"simplex_update.h" -> "constraint_forward.h"
	"model_builder.cpp" -> "instantiate.h"
	"approx_simplex.cpp" -> "output.h"
	"fun_def_process.cpp" -> "term_util.h"
	"prop_engine.h" -> "expr_stream.h"
	"node_manager.cpp" -> "type_checker.h"
	"update_ostream.h" -> "cvc4_assert.h"
	"abstraction.cpp" -> "smt_statistics_registry.h"
	"theory_builtin_rewriter.cpp" -> "chain.h"
	"theory_proof.cpp" -> "uf_proof.h"
	"term_database_sygus.cpp" -> "quantifiers_attributes.h"
	"cvc_printer.cpp" -> "command.h"
	"ceg_bv_instantiator.cpp" -> "ceg_bv_instantiator_utils.h"
	"antlr_input.cpp" -> "antlr_line_buffered_input.h"
	"bitvector_proof.h" -> "bitblaster.h"
	"node.h" -> "cvc4_assert.h"
	"proof_manager.cpp" -> "smt_engine.h"
	"assertion.cpp" -> "assertion.h"
	"bin_heap.h" -> "exception.h"
	"Solver.cc" -> "sat_proof.h"
	"tptp.h" -> "parser.h"
	"theory_quantifiers.h" -> "theory.h"
	"node.h" -> "output.h"
	"integer_cln_imp.h" -> "exception.h"
	"sygus_pbe.cpp" -> "datatype.h"
	"theory_bv_rewrite_rules_simplification.h" -> "theory_bv_utils.h"
	"theory_datatypes.cpp" -> "datatypes_rewriter.h"
	"quantifiers_engine.cpp" -> "quant_split.h"
	"ceg_bv_instantiator.cpp" -> "bitvector.h"
	"cvc4_private.h" -> "cvc4_public.h"
	"quantifiers_engine.cpp" -> "quantifiers_attributes.h"
	"theory_proof.cpp" -> "proof_utils.h"
	"union_find.cpp" -> "node.h"
	"theory_sep.h" -> "cdlist.h"
	"theory_arith_private.h" -> "constraint.h"
	"datatype.cpp" -> "datatype.h"
	"sygus_unif_rl.h" -> "quantifiers_engine.h"
	"theory_sep.cpp" -> "theory_sep.h"
	"smt_engine_scope.cpp" -> "smt_engine_scope.h"
	"inst_match.cpp" -> "inst_match.h"
	"theory_bv_rewrite_rules.h" -> "theory.h"
	"proof_manager.cpp" -> "context.h"
	"main.cpp" -> "statistics.h"
	"result.h" -> "exception.h"
	"sygus_repair_const.cpp" -> "smt_statistics_registry.h"
	"theory_proof.h" -> "proof.h"
	"preprocessing_pass_registry.cpp" -> "apply_to_const.h"
	"resource_manager.h" -> "unsafe_interrupt_exception.h"
	"conjecture_generator.cpp" -> "skolemize.h"
	"trigger.cpp" -> "hash.h"
	"theory_bv_rewriter.h" -> "statistics_registry.h"
	"fc_simplex.h" -> "dense_map.h"
	"output_channel.h" -> "proof_manager.h"
	"ext_theory.h" -> "theory.h"
	"cadical.cpp" -> "sat_proof.h"
	"term_database_sygus.cpp" -> "cvc4_check.h"
	"util.cpp" -> "command_executor.h"
	"interactive_shell.cpp" -> "output.h"
	"antlr_input.cpp" -> "bounded_token_buffer.h"
	"cdhashmap.h" -> "cvc4_assert.h"
	"ce_guided_single_inv_sol.cpp" -> "theory_engine.h"
	"command_executor_portfolio.cpp" -> "options.h"
	"subs_minimize.cpp" -> "node_algorithm.h"
	"atom_requests.h" -> "cdhashmap.h"
	"arith_utilities.h" -> "cdhashset.h"
	"cryptominisat.h" -> "sat_solver.h"
	"model_builder.cpp" -> "trigger.h"
	"antlr_input_imports.cpp" -> "parser_exception.h"
	"theory_arith_private.h" -> "cdinsert_hashmap.h"
	"dio_solver.h" -> "cdlist.h"
	"bv_subtheory_inequality.h" -> "attribute.h"
	"cryptominisat.cpp" -> "sat_proof.h"
	"cnf_proof.cpp" -> "sat_solver_types.h"
	"ceg_instantiator.cpp" -> "ceg_dt_instantiator.h"
	"theory_uf_strong_solver.cpp" -> "quantifiers_engine.h"
	"inst_strategy_e_matching.cpp" -> "quant_relevance.h"
	"ast_printer.cpp" -> "node_visitor.h"
	"cut_log.h" -> "arithvar.h"
	"portfolio.cpp" -> "statistics_registry.h"
	"equality_engine.h" -> "theory.h"
	"sygus_grammar_norm.cpp" -> "ceg_instantiator.h"
	"theory.cpp" -> "node_algorithm.h"
	"theory_strings.cpp" -> "ext_theory.h"
	"sat_proof.h" -> "clause_id.h"
	"options_template.cpp" -> "argument_extender.h"
	"bv_eager_solver.cpp" -> "bv_eager_solver.h"
	"theory_engine.cpp" -> "attribute.h"
	"datatypes_sygus.cpp" -> "sygus_explain.h"
	"sat_proof_implementation.h" -> "minisat.h"
	"options.h" -> "listener.h"
	"parser.cpp" -> "parser.h"
	"type_node.h" -> "node_value.h"
	"theory_datatypes.cpp" -> "valuation.h"
	"theory_engine.cpp" -> "model_engine.h"
	"decision_engine.cpp" -> "justification_heuristic.h"
	"Queue.h" -> "Vec.h"
	"bv_inequality_graph.cpp" -> "theory_bv_utils.h"
	"theory_arith_private.cpp" -> "dio_solver.h"
	"clock_gettime.c" -> "clock_gettime.h"
	"synth_conjecture.cpp" -> "sygus_enumerator.h"
	"expr_iomanip.cpp" -> "expr_iomanip.h"
	"justification_heuristic.h" -> "assertion_pipeline.h"
	"theory_arith.cpp" -> "infer_bounds.h"
	"theory.h" -> "decision_manager.h"
	"theory_strings.h" -> "regexp_elim.h"
	"theory_arith_private.cpp" -> "nonlinear_extension.h"
	"bv_subtheory_inequality.cpp" -> "bv_subtheory_inequality.h"
	"atom_requests.h" -> "theory.h"
	"ext_theory.h" -> "node.h"
	"main.cpp" -> "smt_engine.h"
	"cnf_proof.cpp" -> "proof_utils.h"
	"tptp_printer.cpp" -> "node_manager.h"
	"printer.h" -> "sexpr.h"
	"theory_datatypes.cpp" -> "theory_model.h"
	"dio_solver.h" -> "statistics_registry.h"
	"bv_eager_solver.h" -> "node.h"
	"tableau.cpp" -> "output.h"
	"cvc4cpp.cpp" -> "result.h"
	"update_ostream.h" -> "output.h"
	"pickle_data.cpp" -> "cvc4_assert.h"
	"theoryof_mode.cpp" -> "theoryof_mode.h"
	"quantifiers_engine.cpp" -> "inst_strategy_e_matching.h"
	"cdlist.h" -> "cdlist_forward.h"
	"equality_query.h" -> "quantifiers_engine.h"
	"enum_stream_substitution.cpp" -> "term_database_sygus.h"
	"theory.h" -> "care_graph.h"
	"sexpr.cpp" -> "set_language.h"
	"sygus_unif.cpp" -> "random.h"
	"options_handler.h" -> "sygus_out_mode.h"
	"model_engine.h" -> "quantifiers_engine.h"
	"theory_sep.cpp" -> "term_util.h"
	"node_algorithm.cpp" -> "node_algorithm.h"
	"cnf_stream.h" -> "cdlist.h"
	"synth_rew_rules.cpp" -> "synth_rew_rules.h"
	"bv_subtheory_algebraic.cpp" -> "smt_statistics_registry.h"
	"datatypes_sygus.cpp" -> "datatypes_sygus.h"
	"theory_bv.cpp" -> "bv_subtheory_inequality.h"
	"cegis.cpp" -> "cegis.h"
	"theory_arrays.cpp" -> "proof_manager.h"
	"global_negate.cpp" -> "rewriter.h"
	"quant_conflict_find.cpp" -> "trigger.h"
	"sygus_repair_const.cpp" -> "term_database_sygus.h"
	"fc_simplex.cpp" -> "output.h"
	"smt_engine.cpp" -> "model_core_builder.h"
	"cegis_unif.cpp" -> "synth_conjecture.h"
	"synth_engine.cpp" -> "quantifiers_attributes.h"
	"theory_sets_type_rules.h" -> "normal_form.h"
	"cegis_unif.h" -> "cegis.h"
	"skolemize.h" -> "node.h"
	"options.h" -> "printer_modes.h"
	"theory_proof.h" -> "clause_id.h"
	"cvc_printer.cpp" -> "smt_engine.h"
	"options_template.cpp" -> "cvc4_assert.h"
	"sygus_unif_rl.cpp" -> "term_database_sygus.h"
	"bv_ackermann.h" -> "preprocessing_pass_context.h"
	"pickler.cpp" -> "output.h"
	"inst_match_generator.cpp" -> "quantifiers_engine.h"
	"rational_gmp_imp.cpp" -> "cvc4_assert.h"
	"decision_strategy.cpp" -> "decision_strategy.h"
	"apply_to_const.cpp" -> "apply_to_const.h"
	"cvc4cpp.cpp" -> "cvc4_assert.h"
	"command.cpp" -> "dump.h"
	"options_handler.cpp" -> "configuration.h"
	"anti_skolem.h" -> "type_node.h"
	"local_theory_ext.cpp" -> "first_order_model.h"
	"ecdata.h" -> "node.h"
	"sampler.cpp" -> "cvc4_assert.h"
	"nonlinear_extension.cpp" -> "theory_arith.h"
	"bool_to_bv.cpp" -> "bool_to_bv.h"
	"ceg_arith_instantiator.h" -> "node.h"
	"options_handler.h" -> "decision_mode.h"
	"theory_proof.cpp" -> "simplify_boolean_node.h"
	"trigger.cpp" -> "arith_msum.h"
	"decision_engine.cpp" -> "decision_mode.h"
	"theory_arith_private.cpp" -> "arith_static_learner.h"
	"theory_proxy.cpp" -> "smt_statistics_registry.h"
	"ho_trigger.cpp" -> "ho_trigger.h"
	"preprocessing_pass_registry.cpp" -> "symmetry_breaker.h"
	"theory_bv.h" -> "bv_subtheory.h"
	"theory_bool.cpp" -> "theory.h"
	"interactive_shell.cpp" -> "parser_builder.h"
	"inst_match_trie.cpp" -> "term_database.h"
	"theory_sep.h" -> "cdhashset.h"
	"arith_static_learner.cpp" -> "smt_statistics_registry.h"
	"int_to_bv.cpp" -> "rewriter.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewriter.h"
	"theory_engine.h" -> "node.h"
	"theory_idl.cpp" -> "theory_idl.h"
	"prop_engine.h" -> "lemma_channels.h"
	"quantifiers_engine.cpp" -> "quantifiers_engine.h"
	"resolution_bitvector_proof.h" -> "Solver.h"
	"theory_uf_strong_solver.cpp" -> "theory_model.h"
	"options_handler.h" -> "modal_exception.h"
	"arith_proof.h" -> "proof_manager.h"
	"input.cpp" -> "input.h"
	"tptp.cpp" -> "tptp.h"
	"decision_engine.h" -> "cnf_stream.h"
	"smt2.cpp" -> "smt1.h"
	"approx_simplex.h" -> "statistics_registry.h"
	"idl_model.h" -> "cdhashmap.h"
	"skolemize.cpp" -> "theory_engine.h"
	"theory_quantifiers.cpp" -> "term_util.h"
	"enum_stream_substitution.cpp" -> "enum_stream_substitution.h"
	"quantifiers_engine.h" -> "statistics_registry.h"
	"term_database_sygus.cpp" -> "datatypes_rewriter.h"
	"sat_proof_implementation.h" -> "cnf_proof.h"
	"quantifiers_engine.cpp" -> "theory_uf.h"
	"ce_guided_single_inv.h" -> "cdlist.h"
	"sygus_unif_io.cpp" -> "evaluator.h"
	"arith_static_learner.h" -> "arith_utilities.h"
	"cnf_stream.cpp" -> "node.h"
	"type_checker.h" -> "node.h"
	"instantiate.cpp" -> "inst_strategy_cegqi.h"
	"smt_engine.cpp" -> "command_list.h"
	"SimpSolver.h" -> "Solver.h"
	"evaluator.h" -> "bitvector.h"
	"theory_proxy.cpp" -> "prop_engine.h"
	"normal_form.h" -> "delta_rational.h"
	"rewrite_engine.cpp" -> "instantiate.h"
	"rewriter.cpp" -> "smt_statistics_registry.h"
	"bool_to_bv.h" -> "preprocessing_pass.h"
	"inst_propagator.cpp" -> "rewriter.h"
	"cnf_stream.cpp" -> "proof_manager.h"
	"rewriter.h" -> "unsafe_interrupt_exception.h"
	"congruence_manager.h" -> "cdlist.h"
	"ho_trigger.cpp" -> "instantiate.h"
	"bound_counts.h" -> "arithvar.h"
	"divisible.cpp" -> "divisible.h"
	"proof_manager.h" -> "skolemization_manager.h"
	"theory_uf_model.cpp" -> "theory_uf_model.h"
	"theory_uf.cpp" -> "theory_proof.h"
	"solution_filter.cpp" -> "solution_filter.h"
	"resolution_bitvector_proof.h" -> "cnf_stream.h"
	"cvc_printer.cpp" -> "dagification_visitor.h"
	"theory_sets_rewriter.h" -> "rewriter.h"
	"tptp_input.cpp" -> "tptp_input.h"
	"quantifiers_engine.cpp" -> "term_canonize.h"
	"symbol_table.cpp" -> "cdhashset.h"
	"node_manager_listeners.h" -> "resource_manager.h"
	"skolemization_manager.cpp" -> "skolemization_manager.h"
	"error_set.cpp" -> "error_set.h"
	"term_database.cpp" -> "quantifiers_attributes.h"
	"Main.cc" -> "Options.h"
	"inst_strategy_e_matching.h" -> "instantiation_engine.h"
	"quantifier_macros.h" -> "preprocessing_pass.h"
	"pseudo_boolean_processor.h" -> "cdo.h"
	"rational_cln_imp.h" -> "maybe.h"
	"expr_manager_template.cpp" -> "options.h"
	"theory_model.h" -> "equality_engine.h"
	"theory_arith_private.h" -> "arith_utilities.h"
	"type_enumerator.h" -> "type.h"
	"theory_builtin_type_rules.h" -> "type_node.h"
	"symmetry_detect.h" -> "term_canonize.h"
	"justification_heuristic.cpp" -> "rewriter.h"
	"justification_heuristic.h" -> "decision_engine.h"
	"symmetry_breaker.cpp" -> "symmetry_detect.h"
	"type_enumerator.h" -> "node.h"
	"ffs.h" -> "replacements.h"
	"term_registration_visitor.h" -> "shared_terms_database.h"
	"theory_strings.h" -> "decision_manager.h"
	"theory_arith_private.h" -> "theory_arith.h"
	"theory_registrar.h" -> "registrar.h"
	"command_executor_portfolio.h" -> "portfolio_util.h"
	"antlr_input.cpp" -> "parser_exception.h"
	"antlr_input_imports.cpp" -> "parser.h"
	"ecdata.h" -> "cdo.h"
	"theory_strings_rewriter.cpp" -> "node_builder.h"
	"bv_quick_check.cpp" -> "bv_quick_check.h"
	"approx_simplex.h" -> "maybe.h"
	"options_handler.cpp" -> "options_handler.h"
	"resolution_bitvector_proof.cpp" -> "proof_output_channel.h"
	"preprocessing_pass_context.cpp" -> "preprocessing_pass_context.h"
	"sygus_grammar_norm.cpp" -> "sygus_grammar_red.h"
	"lemma_channels.cpp" -> "open_ostream.h"
	"skolemize.h" -> "type_node.h"
	"command_list.cpp" -> "command.h"
	"instantiate.cpp" -> "first_order_model.h"
	"anti_skolem.cpp" -> "term_canonize.h"
	"non_clausal_simp.cpp" -> "non_clausal_simp.h"
	"smt_engine.cpp" -> "preprocessing_pass_context.h"
	"theory_model.h" -> "model.h"
	"cdo.h" -> "context.h"
	"theory_datatypes.h" -> "theory.h"
	"theory_arrays.cpp" -> "node_algorithm.h"
	"synth_conjecture.cpp" -> "term_database_sygus.h"
	"quantifiers_engine.cpp" -> "term_database.h"
	"nonlinear_extension.h" -> "cdhashset.h"
	"pickler.cpp" -> "expr_manager_scope.h"
	"infer_bounds.h" -> "maybe.h"
	"smt_engine.cpp" -> "smt_engine.h"
	"error_set.h" -> "bin_heap.h"
	"theory_quantifiers.h" -> "output_channel.h"
	"Main.cc" -> "Dimacs.h"
	"delta_rational.h" -> "exception.h"
	"configuration_private.h" -> "configuration.h"
	"context.cpp" -> "cvc4_assert.h"
	"theory_sets_rels.cpp" -> "theory_sets_private.h"
	"theory_arith_private.h" -> "node_builder.h"
	"bv_eager_solver.h" -> "resolution_bitvector_proof.h"
	"node_builder.h" -> "node_manager.h"
	"options_handler.cpp" -> "decision_mode.h"
	"quantifiers_rewriter.cpp" -> "trigger.h"
	"main.cpp" -> "configuration.h"
	"equality_engine.h" -> "output.h"
	"trigger.h" -> "node.h"
	"bv_to_bool.cpp" -> "bv_to_bool.h"
	"theory_uf.h" -> "symmetry_breaker.h"
	"congruence_manager.cpp" -> "output.h"
	"int_to_bv.h" -> "preprocessing_pass_context.h"
	"valuation.cpp" -> "valuation.h"
	"theory_bv_rewriter.cpp" -> "theory.h"
	"smt2.cpp" -> "bitvector.h"
	"theory_quantifiers.cpp" -> "theory_quantifiers.h"
	"anti_skolem.h" -> "cdhashset.h"
	"theory_sets_private.h" -> "cdqueue.h"
	"theory_arrays.cpp" -> "rewriter.h"
	"equality_query.h" -> "quant_util.h"
	"parser.cpp" -> "parser_exception.h"
	"theory_arith_private.h" -> "node.h"
	"sygus_invariance.h" -> "node.h"
	"synth_engine.cpp" -> "theory_engine.h"
	"pickle_data.h" -> "node_manager.h"
	"static_fact_manager.cpp" -> "node.h"
	"quantifiers_engine.cpp" -> "alpha_equivalence.h"
	"conjecture_generator.h" -> "type_enumerator.h"
	"result.cpp" -> "set_language.h"
	"justification_heuristic.h" -> "cdlist.h"
	"smt_engine_scope.cpp" -> "cvc4_assert.h"
	"bool_to_bv.cpp" -> "rewriter.h"
	"datatypes_sygus.cpp" -> "term_database_sygus.h"
	"cnf_stream.cpp" -> "smt_engine_scope.h"
	"matcher.h" -> "cvc4_assert.h"
	"congruence_manager.h" -> "equality_engine.h"
	"theory_bv.cpp" -> "theory_bv_rewrite_rules_simplification.h"
	"quant_conflict_find.cpp" -> "term_database.h"
	"argument_extender_implementation.cpp" -> "argument_extender_implementation.h"
	"static_fact_manager.cpp" -> "cvc4_assert.h"
	"attribute.h" -> "node.h"
	"inst_strategy_cegqi.cpp" -> "first_order_model.h"
	"sygus_explain.cpp" -> "datatypes_rewriter.h"
	"rep_set.cpp" -> "type_enumerator.h"
	"ite_removal.h" -> "preprocessing_pass_context.h"
	"smt_engine_scope.cpp" -> "proof.h"
	"type_checker_template.cpp" -> "node_manager.h"
	"theory_quantifiers.h" -> "node.h"
	"Solver.h" -> "Heap.h"
	"resolution_bitvector_proof.h" -> "theory_proof.h"
	"theory_sets_rewriter.cpp" -> "attribute.h"
	"smt2.cpp" -> "type.h"
	"theory_arith_private.cpp" -> "random.h"
	"smt2.h" -> "smt1.h"
	"cvc4cpp.cpp" -> "cvc4_check.h"
	"arith_ite_utils.cpp" -> "normal_form.h"
	"dagification_visitor.h" -> "node.h"
	"arith_static_learner.h" -> "cdhashmap.h"
	"theory_bool.cpp" -> "hash.h"
	"bv_ackermann.cpp" -> "theory_bv_utils.h"
	"quantifiers_rewriter.h" -> "quantifiers_engine.h"
	"quant_conflict_find.cpp" -> "first_order_model.h"
	"datatype.cpp" -> "attribute.h"
	"command.cpp" -> "cvc4_assert.h"
	"apply_substs.cpp" -> "cdo.h"
	"proof_manager.cpp" -> "term_registration_visitor.h"
	"lfsc_proof_printer.h" -> "sat_proof_implementation.h"
	"approx_simplex.h" -> "arithvar.h"
	"conjecture_generator.cpp" -> "theory_engine.h"
	"justification_heuristic.h" -> "sat_solver_types.h"
	"ho_trigger.h" -> "node.h"
	"quant_conflict_find.cpp" -> "instantiate.h"
	"lemma_channels.cpp" -> "option_exception.h"
	"bv_to_bool.h" -> "preprocessing_pass.h"
	"bvminisat.h" -> "resolution_bitvector_proof.h"
	"Options.h" -> "Vec.h"
	"congruence_manager.h" -> "partial_model.h"
	"theory_sets_private.cpp" -> "smt_statistics_registry.h"
	"Map.h" -> "IntTypes.h"
	"uf_proof.cpp" -> "theory_uf.h"
	"portfolio.h" -> "statistics_registry.h"
	"normal_form.h" -> "output.h"
	"cvc4cpp.cpp" -> "utility.h"
	"aig_bitblaster.cpp" -> "aig_bitblaster.h"
	"dual_simplex.h" -> "statistics_registry.h"
	"congruence_manager.h" -> "cdo.h"
	"quant_util.cpp" -> "inst_match.h"
	"instantiation_engine.cpp" -> "inst_strategy_e_matching.h"
	"lazy_bitblaster.cpp" -> "sat_solver_factory.h"
	"quantifier_macros.cpp" -> "quantifiers_modes.h"
	"smt_engine.h" -> "proof.h"
	"pickler.cpp" -> "node.h"
	"node_algorithm.cpp" -> "attribute.h"
	"quant_conflict_find.cpp" -> "quant_util.h"
	"eager_bitblaster.h" -> "bitblaster.h"
	"first_order_model.h" -> "theory_uf_model.h"
	"fc_simplex.cpp" -> "constraint.h"
	"node_value.cpp" -> "language.h"
	"term_database_sygus.h" -> "sygus_explain.h"
	"theory_engine.h" -> "cdhashset.h"
	"util.cpp" -> "options.h"
	"preprocessing_pass_registry.h" -> "preprocessing_pass.h"
	"theory_proof.h" -> "sat_solver_types.h"
	"smt2.cpp" -> "command.h"
	"theory_quantifiers.cpp" -> "cvc4_assert.h"
	"resource_manager.h" -> "exception.h"
	"bitblaster.h" -> "sat_solver_types.h"
	"bv_bitblast_mode.cpp" -> "bv_bitblast_mode.h"
	"sexpr.cpp" -> "cvc4_assert.h"
	"option_exception.h" -> "exception.h"
	"theory_strings.cpp" -> "type_enumerator.h"
	"model_engine.cpp" -> "equality_engine.h"
	"ce_guided_single_inv_sol.cpp" -> "node_algorithm.h"
	"theory_datatypes.h" -> "equality_engine.h"
	"real_to_int.cpp" -> "arith_msum.h"
	"rewriter.h" -> "node.h"
	"sygus_invariance.cpp" -> "sygus_pbe.h"
	"Solver.h" -> "theory.h"
	"ceg_arith_instantiator.h" -> "ceg_instantiator.h"
	"sygus_sampler.h" -> "evaluator.h"
	"theory_proxy.h" -> "lemma_channels.h"
	"theory_fp.h" -> "fp_converter.h"
	"instantiate.cpp" -> "term_enumeration.h"
	"expr_miner.h" -> "sygus_sampler.h"
	"ceg_instantiator.cpp" -> "ceg_bv_instantiator.h"
	"ext_theory.cpp" -> "ext_theory.h"
	"Solver.cc" -> "interrupted.h"
	"unconstrained_simplifier.h" -> "preprocessing_pass.h"
	"cnf_proof.cpp" -> "cnf_stream.h"
	"shared_terms_database.h" -> "statistics_registry.h"
	"bv_to_bool.cpp" -> "node_visitor.h"
	"theory_sets.h" -> "equality_engine.h"
	"theory_strings.cpp" -> "theory_strings.h"
	"theory_bv_rewriter.cpp" -> "theory_bv_rewrite_rules.h"
	"argument_extender_implementation.h" -> "argument_extender.h"
	"expr_miner_manager.h" -> "extended_rewrite.h"
	"attempt_solution_simplex.h" -> "simplex.h"
	"datatypes_sygus.h" -> "context.h"
	"sygus_process_conj.h" -> "type_node.h"
	"ce_guided_single_inv_sol.cpp" -> "term_util.h"
	"ceg_instantiator.cpp" -> "first_order_model.h"
	"real_to_int.h" -> "preprocessing_pass.h"
	"ceg_instantiator.cpp" -> "theory_engine.h"
	"options_template.cpp" -> "base_handlers.h"
	"substitutions.cpp" -> "node_algorithm.h"
	"smt_engine.cpp" -> "unsat_core.h"
	"theory_strings_preprocess.h" -> "hash.h"
	"printer.cpp" -> "language.h"
	"expr_manager_template.h" -> "type.h"
	"theory_quantifiers_type_rules.h" -> "matcher.h"
	"circuit_propagator.h" -> "cdhashset.h"
	"smt_engine.h" -> "unsafe_interrupt_exception.h"
	"dio_solver.h" -> "output.h"
	"preprocessing_pass_registry.cpp" -> "synth_rew_rules.h"
	"cardinality.cpp" -> "cardinality.h"
	"antlr_input.cpp" -> "memory_mapped_input_buffer.h"
	"symmetry_detect.h" -> "node.h"
	"theory_fp_type_rules.h" -> "theory.h"
	"bitvector_proof.cpp" -> "theory_proof.h"
	"theory_arith_private.h" -> "normal_form.h"
	"bound_counts.h" -> "cvc4_assert.h"
	"theory_sets_private.h" -> "theory_sets_rels.h"
	"preprocessing_pass_registry.cpp" -> "bv_abstraction.h"
	"sat_solver.h" -> "sat_solver_types.h"
	"theory_preprocess.h" -> "preprocessing_pass.h"
	"term_util.cpp" -> "quantifiers_engine.h"
	"smt2_printer.cpp" -> "smt2_quote_string.h"
	"theory_bv.cpp" -> "theory_model.h"
	"model_builder.cpp" -> "model_builder.h"
	"bv_subtheory_algebraic.cpp" -> "theory_model.h"
	"quantifiers_rewriter.cpp" -> "arith_msum.h"
	"open_ostream.cpp" -> "open_ostream.h"
	"regexp_operation.h" -> "rewriter.h"
	"callbacks.h" -> "arithvar.h"
	"theory_sets_rels.h" -> "rels_utils.h"
	"sygus_input.cpp" -> "input.h"
	"simplex_update.cpp" -> "simplex_update.h"
	"theory_uf_tim.h" -> "cdo.h"
	"theory_arith_private.h" -> "logic_exception.h"
	"ceg_instantiator.cpp" -> "quantifiers_attributes.h"
	"quantifiers_attributes.cpp" -> "term_util.h"
	"theory_strings_rewriter.cpp" -> "arith_msum.h"
	"sygus_eval_unfold.h" -> "sygus_invariance.h"
	"arith_rewriter.cpp" -> "theory.h"
	"theory_uf.h" -> "theory.h"
	"dense_map.h" -> "cvc4_assert.h"
	"regexp_elim.cpp" -> "regexp_elim.h"
	"util.cpp" -> "safe_print.h"
	"global_negate.cpp" -> "node.h"
	"simplex.h" -> "linear_equality.h"
	"boolean_simplification.cpp" -> "boolean_simplification.h"
	"arith_rewriter.cpp" -> "normal_form.h"
	"array_proof.h" -> "proof_manager.h"
	"theory_fp.h" -> "theory.h"
	"fp_converter.h" -> "node_builder.h"
	"constraint.cpp" -> "normal_form.h"
	"theory_model.cpp" -> "theory_model.h"
	"smt2.cpp" -> "smt2_input.h"
	"bv_to_bool.cpp" -> "node.h"
	"bv_inequality_graph.cpp" -> "bv_inequality_graph.h"
	"smt_engine.cpp" -> "substitutions.h"
	"preprocessing_pass_registry.cpp" -> "bool_to_bv.h"
	"first_order_model.cpp" -> "bounded_integers.h"
	"rewriter.cpp" -> "resource_manager.h"
	"fc_simplex.cpp" -> "statistics_registry.h"
	"theory_engine.h" -> "term_registration_visitor.h"
	"decision_strategy.h" -> "assertion_pipeline.h"
	"statistics_registry.h" -> "safe_print.h"
	"infer_bounds.h" -> "theory.h"
	"preprocessing_pass_registry.cpp" -> "nl_ext_purify.h"
	"simplex.h" -> "dense_map.h"
	"theory_engine.h" -> "valuation.h"
	"cdinsert_hashmap.h" -> "context.h"
	"theory_model_builder.cpp" -> "theory_model_builder.h"
	"smt2.cpp" -> "smt2.h"
	"antlr_tracing.h" -> "output.h"
	"cnf_stream.cpp" -> "command.h"
	"proof_output_channel.cpp" -> "proof_output_channel.h"
	"printer.h" -> "command.h"
	"static_learning.h" -> "preprocessing_pass.h"
	"theory_arith_private.cpp" -> "simplex.h"
	"uninterpreted_constant.cpp" -> "cvc4_assert.h"
	"quantifiers_engine.cpp" -> "skolemize.h"
	"arith_heuristic_pivot_rule.cpp" -> "arith_heuristic_pivot_rule.h"
	"sexpr.cpp" -> "sexpr.h"
	"command_executor_portfolio.cpp" -> "pickler.h"
	"nonlinear_extension.h" -> "node.h"
	"bitblaster.h" -> "theory_registrar.h"
	"decision_manager.h" -> "decision_strategy.h"
	"type_checker_template.cpp" -> "type_checker.h"
	"ce_guided_single_inv.cpp" -> "term_database_sygus.h"
	"command_executor.cpp" -> "cvc4cpp.h"
	"cvc_input.h" -> "antlr_input.h"
	"bv_intro_pow2.cpp" -> "rewriter.h"
	"real_to_int.cpp" -> "rewriter.h"
	"cnf_stream.cpp" -> "cnf_proof.h"
	"theory_fp_rewriter.h" -> "rewriter.h"
	"SimpSolver.cc" -> "clause_id.h"
	"type_properties_template.h" -> "language.h"
	"ite_removal.cpp" -> "ite_removal.h"
	"relevant_domain.h" -> "first_order_model.h"
	"Main.cc" -> "System.h"
	"smt_engine.cpp" -> "boolean_simplification.h"
	"tptp_printer.cpp" -> "tptp_printer.h"
	"term_database_sygus.cpp" -> "arith_msum.h"
	"sat_proof_implementation.h" -> "clause_id.h"
	"lfsc_proof_printer.cpp" -> "Solver.h"
	"proof_manager.cpp" -> "lfsc_proof_printer.h"
	"sygus_explain.h" -> "node.h"
	"antlr_input.cpp" -> "smt2_input.h"
	"equality_query.h" -> "cdo.h"
	"node_manager.h" -> "options.h"
	"proof_utils.cpp" -> "theory.h"
	"sat_solver_factory.h" -> "statistics_registry.h"
	"theory_arith_private.cpp" -> "ext_theory.h"
	"bool_to_bv.h" -> "preprocessing_pass_context.h"
	"conjecture_generator.cpp" -> "term_database.h"
	"bv_intro_pow2.h" -> "preprocessing_pass.h"
	"quantifiers_preprocess.cpp" -> "rewriter.h"
	"datatypes_sygus.h" -> "datatype.h"
	"unconstrained_simplifier.h" -> "preprocessing_pass_context.h"
	"preprocessing_pass.h" -> "preprocessing_pass_context.h"
	"simplex_update.h" -> "arithvar.h"
	"trigger.cpp" -> "quantifiers_engine.h"
	"output_channel.h" -> "proof.h"
	"theory_arrays.cpp" -> "valuation.h"
	"options_handler.cpp" -> "didyoumean.h"
	"theory_uf_strong_solver.h" -> "cdhashmap.h"
	"theory_proxy.cpp" -> "rewriter.h"
	"partial_model.h" -> "cdlist.h"
	"theory_engine.cpp" -> "theory_quantifiers.h"
	"smt2_printer.cpp" -> "dagification_visitor.h"
	"inst_strategy_cegqi.cpp" -> "inst_strategy_cegqi.h"
	"theory_datatypes.cpp" -> "cvc4_assert.h"
	"theory_engine.cpp" -> "map_util.h"
	"theory_quantifiers.h" -> "valuation.h"
	"sygus_grammar_norm.cpp" -> "datatype.h"
	"cnf_proof.cpp" -> "cnf_proof.h"
	"sygus_repair_const.h" -> "node.h"
	"cvc4parser_private.h" -> "cvc4parser_public.h"
	"cnf_proof.h" -> "cdhashmap.h"
	"symmetry_detect.cpp" -> "alpha_equivalence.h"
	"smt_engine.cpp" -> "preprocessing_pass.h"
	"bv_eager_atoms.cpp" -> "bv_eager_atoms.h"
	"bitvector.cpp" -> "bitvector.h"
	"soi_simplex.h" -> "statistics_registry.h"
	"bvminisat.h" -> "sat_solver.h"
	"boolean_simplification.h" -> "expr_manager_scope.h"
	"skolemize.cpp" -> "term_util.h"
	"dio_solver.h" -> "cdqueue.h"
	"interactive_shell.h" -> "language.h"
	"quantifier_macros.cpp" -> "quantifier_macros.h"
	"theory_arrays.cpp" -> "array_proof.h"
	"tptp_input.h" -> "antlr_input.h"
	"line_buffer.cpp" -> "line_buffer.h"
	"dagification_visitor.cpp" -> "substitutions.h"
	"cut_log.h" -> "constraint_forward.h"
	"node_visitor.h" -> "node.h"
	"fp_converter.h" -> "bitvector.h"
	"expr_template.cpp" -> "cvc4_assert.h"
	"cegis.cpp" -> "node_algorithm.h"
	"theory_arith_private.cpp" -> "statistics_registry.h"
	"node.h" -> "utility.h"
	"theory_bv_rewrite_rules.h" -> "theory_bv_utils.h"
	"term_database.cpp" -> "quantifiers_engine.h"
	"fun_def_process.h" -> "node.h"
	"options_handler.cpp" -> "exception.h"
	"Solver.h" -> "sat_proof.h"
	"cegis_unif.cpp" -> "theory_engine.h"
	"bitblaster.h" -> "bv_sat_solver_notify.h"
	"theory.h" -> "cdo.h"
	"smt_engine.cpp" -> "node_algorithm.h"
	"cvc_printer.cpp" -> "node_manager_attributes.h"
	"driver_unified.cpp" -> "cvc4cpp.h"
	"datatype.cpp" -> "node_manager.h"
	"symmetry_breaker.cpp" -> "symmetry_breaker.h"
	"theory_bv_rewrite_rules_constant_evaluation.h" -> "theory_bv_rewrite_rules.h"
	"ceg_instantiator.cpp" -> "quant_epr.h"
	"cadical.cpp" -> "cadical.h"
	"congruence_manager.h" -> "dense_map.h"
	"cnf_stream.cpp" -> "minisat.h"
	"parser_builder.cpp" -> "options.h"
	"cegis_unif.cpp" -> "term_database_sygus.h"
	"smt_engine.h" -> "result.h"
	"local_theory_ext.cpp" -> "quantifiers_engine.h"
	"prop_engine.h" -> "node.h"
	"array_proof.cpp" -> "array_proof.h"
	"quantifiers_engine.cpp" -> "trigger.h"
	"rewriter.cpp" -> "rewriter.h"
	"equality_query.cpp" -> "equality_engine.h"
	"decision_engine.h" -> "prop_engine.h"
	"rewrite_engine.cpp" -> "quantifiers_attributes.h"
	"driver_unified.cpp" -> "interactive_shell.h"
	"pickler.cpp" -> "pickle_data.h"
	"decision_engine.h" -> "term_formula_removal.h"
	"smt_engine.h" -> "lemma_channels.h"
	"theory_arith_private.cpp" -> "result.h"
	"enum_stream_substitution.h" -> "node.h"
	"candidate_generator.cpp" -> "instantiate.h"
	"configuration.cpp" -> "configuration_private.h"
	"bv_inverter_utils.cpp" -> "bv_inverter_utils.h"
	"preprocessing_pass_registry.cpp" -> "symmetry_detect.h"
	"Solver.h" -> "SolverTypes.h"
	"theory_strings_preprocess.cpp" -> "theory_strings_rewriter.h"
	"linear_equality.cpp" -> "constraint.h"
	"miplib_trick.cpp" -> "smt_statistics_registry.h"
	"nonlinear_extension.h" -> "cdinsert_hashmap.h"
	"dual_simplex.cpp" -> "dual_simplex.h"
	"bv_subtheory_inequality.h" -> "cdhashset.h"
	"inst_strategy_e_matching.h" -> "context_mm.h"
	"ite_simp.cpp" -> "arith_ite_utils.h"
	"model_engine.cpp" -> "theory_uf_strong_solver.h"
	"main.cpp" -> "output.h"
	"output_channel.h" -> "logic_exception.h"
	"record.cpp" -> "cvc4_assert.h"
	"decision_mode.cpp" -> "decision_mode.h"
	"antlr_input.h" -> "bitvector.h"
	"model.h" -> "cardinality.h"
	"theory_preprocess.cpp" -> "rewriter.h"
	"main.h" -> "smt_engine.h"
	"theory_datatypes.cpp" -> "type_enumerator.h"
	"bv_ackermann.h" -> "node.h"
	"sygus_grammar_norm.h" -> "quantifiers_engine.h"
	"theory_sets_rewriter.cpp" -> "normal_form.h"
	"output_channel.h" -> "interrupted.h"
	"quant_conflict_find.cpp" -> "term_util.h"
	"main.h" -> "exception.h"
	"callbacks.h" -> "node.h"
	"resolution_bitvector_proof.cpp" -> "bitblaster.h"
	"theory_bv.cpp" -> "smt_statistics_registry.h"
	"Options.cc" -> "Sort.h"
	"prop_engine.h" -> "modal_exception.h"
	"theory_builtin_rewriter.h" -> "rewriter.h"
	"theory_test_utils.h" -> "node.h"
	"inst_strategy_e_matching.h" -> "quantifiers_engine.h"
	"inst_match_generator.h" -> "inst_match_trie.h"
	"smt_engine_check_proof.cpp" -> "cvc4_assert.h"
	"sygus_print_callback.cpp" -> "sygus_print_callback.h"
	"synth_conjecture.cpp" -> "term_util.h"
	"type_node.cpp" -> "type_node.h"
	"theory_arith_private.h" -> "arithvar.h"
	"pseudo_boolean_processor.h" -> "substitutions.h"
	"aig_bitblaster.cpp" -> "cvc4_check.h"
	"model_builder.cpp" -> "equality_engine.h"
	"cadical.h" -> "sat_solver.h"
	"proof_manager.h" -> "cdhashset.h"
	"equality_engine.h" -> "kind_map.h"
	"ast_printer.cpp" -> "language.h"
	"constraint.cpp" -> "proof.h"
	"congruence_manager.cpp" -> "congruence_manager.h"
	"proof_manager.cpp" -> "theory_arrays.h"
	"theory_proxy.cpp" -> "context.h"
	"theory_datatypes.h" -> "datatype.h"
	"candidate_generator.h" -> "equality_engine.h"
	"theory_strings.cpp" -> "valuation.h"
	"minisat.cpp" -> "statistics_registry.h"
	"rewrite_engine.h" -> "context.h"
	"theory.h" -> "assertion.h"
	"simplex_update.h" -> "delta_rational.h"
	"sat_solver_factory.cpp" -> "cryptominisat.h"
	"theory_arith_private.h" -> "theory_model.h"
	"bitblaster.h" -> "bitblast_strategies_template.h"
	"proof_manager.cpp" -> "equality_engine.h"
	"theory_arith_private.h" -> "partial_model.h"
	"node_value.cpp" -> "node.h"
	"tptp.cpp" -> "parser.h"
	"nl_ext_purify.h" -> "node.h"
	"circuit_propagator.h" -> "hash.h"
	"term_formula_removal.cpp" -> "term_formula_removal.h"
	"theory_arrays.cpp" -> "theory_proof.h"
	"simplex_update.cpp" -> "constraint.h"
	"model.cpp" -> "expr_iomanip.h"
	"theory_engine.h" -> "cvc4_assert.h"
	"theory_proof.cpp" -> "array_proof.h"
	"theory_arith_private.cpp" -> "matrix.h"
	"theory_arrays.h" -> "array_info.h"
	"apply_substs.cpp" -> "rewriter.h"
	"prop_engine.cpp" -> "cnf_stream.h"
	"instantiate.h" -> "quantifiers_engine.h"
	"driver_unified.cpp" -> "set_language.h"
	"smt_engine.cpp" -> "prop_engine.h"
	"theory_proxy.cpp" -> "cnf_stream.h"
	"decision_strategy.h" -> "term_formula_removal.h"
	"theory_engine.h" -> "command.h"
	"first_order_model.cpp" -> "term_enumeration.h"
	"skolemization_manager.h" -> "logic_info.h"
	"enum_stream_substitution.h" -> "synth_conjecture.h"
	"inst_strategy_enumerative.cpp" -> "relevant_domain.h"
	"equality_query.h" -> "context.h"
	"theory_engine.h" -> "atom_requests.h"
	"theory_bv_rewrite_rules_normalization.h" -> "rewriter.h"
}
