on: [push, pull_request]

name: CI

jobs:
  build:

    strategy:
      matrix:
        name: [
          ubuntu,
          ubuntu-py2,
          ubuntu-py3,
          ubuntu-debug,
          ubuntu-debug-cln
        ]

        include:
          - name: ubuntu
            os: ubuntu-latest
            config: production --language-bindings=java --lfsc
            cache-key: production

          - name: ubuntu-py2
            os: ubuntu-latest
            config: production --python-bindings --python2
            cache-key: production
            cython: true

          - name: ubuntu-py3
            os: ubuntu-latest
            config: production --python-bindings --python3
            cache-key: production
            cython: true

          - name: ubuntu-debug
            os: ubuntu-latest
            config: debug --symfpu --lfsc --no-debug-symbols
            cache-key: debug

          - name: ubuntu-debug-cln
            os: ubuntu-latest
            config: debug --symfpu --cln --gpl --no-debug-symbols --no-proofs
            cache-key: debug


    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v1

    - name: Install Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          antlr3 \
          ccache \
          cmake \
          cxxtest \
          libantlr3c-dev \
          libcln-dev \
          libgmp-dev \
          swig3.0 \
          python3 \
          python3-pip \
          python3-setuptools
        pip install toml

    - name: Install Cython
      if: matrix.cython && runner.os == 'Linux'
      run: pip install Cython==0.29 --install-option="--no-cython-compile"

    - name: Restore Dependencies
      id: restore-deps
      uses: actions/cache@v1
      with:
        path: deps/install
        key: ${{ runner.os }}-deps-${{ hashFiles('contrib/get-**.sh') }}

    - name: Setup Dependencies
      if: steps.restore-deps.outputs.cache-hit != 'true'
      run: |
        ./contrib/get-symfpu
        ./contrib/get-cadical
        ./contrib/get-cryptominisat
        ./contrib/get-lfsc-checker

    # GitHub actions currently does not support modifying an already existing
    # cache. Hence, we create a new cache for each commit with key
    # cache-${{ runner.os }}-${{ matrix.cache-key }}-${{ github.sha }}. This
    # will result in an initial cache miss. However, restore-keys will search
    # for the most recent cache with prefix
    # cache-${{ runner.os }}-${{ matrix.cache-key }}-, and if found uses it as
    # a base for the new cache.
    - name: Restore ccache
      id: cache
      uses: actions/cache@v1
      with:
        path: ccache-dir
        key: cache-${{ runner.os }}-${{ matrix.cache-key }}-${{ github.sha }}
        restore-keys: cache-${{ runner.os }}-${{ matrix.cache-key }}-

    - name: Configure ccache
      run: |
        ccache --set-config=cache_dir=${{ github.workspace }}/ccache-dir
        ccache --set-config=compression=true
        ccache --set-config=compression_level=6
        ccache -M 500M
        ccache -z

    - name: Configure
      run: |
        export PATH="/usr/lib/ccache/:$PATH"
        ${{ matrix.env }} ./configure.sh ${{ matrix.config }} --prefix=$(pwd)/build/install

    - name: Build
      run: make -j2
      working-directory: build

    - name: ccache Statistics
      run: ccache -s

    - name: Run CTest
      run: make -j2 check \
            ARGS='--output-on-failure -LE regress[1-4]' \
            CVC4_REGRESSION_ARGS='--no-early-exit'
      working-directory: build

#    - name: Install Check
#      run: |
#        make -j2 install
#        echo -e "#include <cvc4/api/cvc4cpp.h>\nint main() { CVC4::api::Solver s; return 0; }" > /tmp/test.cpp
#        $CXX -std=c++11 /tmp/test.cpp -I install/include -L install/lib -lcvc4
#      working-directory: build

#    - name: Check Examples
#      run: |
#        mkdir build
#        cd build
#        cmake .. -DCMAKE_PREFIX_PATH=$(pwd)/../../build/install/lib/cmake
#        make -j2
#        ctest -j2 --output-on-failure
#      working-directory: examples

