name: documentation update
on:
  push:
    paths:
    - '.ci/**'
    - 'docs/**'
    - 'examples/**'
    - 'src/api/**'
  pull_request_target:
    paths:
    - '.ci/**'
    - 'docs/**'
    - 'examples/**'
    - 'src/api/**'

# When run by pull_request_target (in comparison to pull_request), the action
# has access to the repository secrets so that we can push the generated docs.
# To allow this, the action is run in the context of the master branch instead
# of the PR directly. We therefore to obtain the changes from the PR manually,
# but need to be very careful to not pull any changes to files that are executed
# during configuration or build. At the same time, we try to include as many
# files as possible that may change how the documentations looks like.
# To ensure this, we only checkout a very selected set of files from the PR
# branch:
# - docs/**.(bib|rst)
# - src/api/**.(cpp|h|java|py)
# - examples/**.(cpp|h|java|py|smt2)
# In particular, we should not checkout any CMakeLists.txt files or any python
# files used by sphinx.

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libgmp-dev \
            doxygen \
            python3-docutils
          python3 -m pip install \
            setuptools toml \
            sphinxcontrib-bibtex sphinx-tabs sphinx-rtd-theme \
            breathe

      - name: Configure
        run: ./configure.sh debug --docs

      - name: Build
        run: make -j2 docs-gh
        working-directory: build

      - name: Update docs
        run: |
          git config --global user.email "docbot@cvc5"
          git config --global user.name "DocBot"
          git clone https://${{ secrets.DOCS_TOKEN }}@github.com/cvc5/cvc5-docs.github.io.git target/
          if [ "${{ github.event_name }}" == "push" ] ; then
            NAME=$(echo "${GITHUB_REF}" | sed "s,refs/heads/,,")
            echo "Identified branch $NAME"
          elif [ "${{ github.event_name }}" == "pull_request_target" ] ; then
            NAME=$(echo "${GITHUB_REF}" | sed -E "s,refs/pull/([0-9]+)/merge,\1, ")
            echo "Identified PR #$NAME"
            NAME="pr$NAME"
            # be careful here, see explanation above!
            git checkout "${GITHUB_REF}" -- \
              `git ls-tree "${GITHUB_REF}" --name-only -r docs/ | grep -E ".*\.(rst|bib)"` \
              `git ls-tree "${GITHUB_REF}" --name-only -r src/api/ | grep -E ".*\.(h|cpp|java|py)"` \
              `git ls-tree "${GITHUB_REF}" --name-only -r examples/ | grep -E ".*\.(h|cpp|java|py|smt2)"`
          fi
          if [ ! -z "$NAME" ]; then
            rsync -a --delete build/docs/sphinx-gh/ target/docs-$NAME-${{ github.sha }}
            cd target/
            rm -f docs-$NAME
            ln -s docs-$NAME-${{ github.sha }} docs-$NAME
            git add docs-$NAME docs-$NAME-${{ github.sha }}
            git commit -m "Update docs for $NAME"
            git push
          else
            echo "Ignored run"
          fi
